SOL_calculate_loyalty = {
	if = {
		limit = {
			tag = event_target:solar_empire
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			has_country_flag = march_on_canterlot
			NOT = { has_country_flag = resistance_ceasefire }
		}

		#GENERAL PUBLIC 
		clamp_variable = {
			var = daybreaker_support
			min = 0
			max = 100
		}
		set_variable = { var = solar_popular_support value = 0 }
		set_variable = { var = loyalty_scaling_factor value = 12.5 }
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 10
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { var = solar_popular_support value = 1 }
			set_variable = { var = loyalty_scaling_factor value = 25 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 20
					compare = greater_than_or_equals
				}
			}
			set_variable = { var = loyalty_scaling_factor value = 37.5 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 30
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { var = solar_popular_support value = 1 }
			set_variable = { var = loyalty_scaling_factor value = 50 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 40
					compare = greater_than_or_equals
				}
			}
			set_variable = { var = loyalty_scaling_factor value = 100 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 50
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { var = solar_popular_support value = 1 }
			set_variable = { var = loyalty_scaling_factor value = 100 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 60
					compare = greater_than_or_equals
				}
			}
			set_variable = { var = loyalty_scaling_factor value = 50 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 70
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { var = solar_popular_support value = 1 }
			set_variable = { var = loyalty_scaling_factor value = 37.5 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 80
					compare = greater_than_or_equals
				}
			}
			set_variable = { var = loyalty_scaling_factor value = 25 }
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 90
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { var = solar_popular_support value = 1 }
			set_variable = { var = loyalty_scaling_factor value = 12.5 }
		}
		#THE CIVILIAN RESISTANCE

		set_variable = { var = solar_civilian_support value = 0 }
		add_to_variable = {
			var = solar_civilian_support
			value = solar_popular_support
		}
		add_to_variable = {
			var = solar_civilian_support
			value = solar_civilian_measures
		}
		add_to_variable = {
			var = solar_civilian_support
			value = solar_civilian_resistance_actions
		}
		clamp_variable = {
			var = solar_civilian_support
			min = 0
			max = 5
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 0 } 
			}
			remove_ideas = SOL_public_hostility_5
			add_ideas = SOL_public_hostility_5
			remove_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_0
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 1 } 
			}
			remove_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_5
			add_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_0
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 2 } 
			}
			remove_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_5
			remove_ideas = SOL_public_hostility_4
			add_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_0
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 3 } 
			}
			remove_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_5
			remove_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_3
			add_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_0
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 4 } 
			}
			remove_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_5
			remove_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_2
			add_ideas = SOL_public_hostility_1
			remove_ideas = SOL_public_hostility_0
		}
		if = {
			limit = { 
				check_variable = { solar_civilian_support = 5 } 
			}
			remove_ideas = SOL_public_hostility_0
			remove_ideas = SOL_public_hostility_5
			remove_ideas = SOL_public_hostility_4
			remove_ideas = SOL_public_hostility_3
			remove_ideas = SOL_public_hostility_2
			remove_ideas = SOL_public_hostility_1
			add_ideas = SOL_public_hostility_0
		}

		#MILITARY RESISTANCE

		set_variable = { var = solar_military_support_temp value = solar_military_support }
		set_variable = { var = solar_military_support value = 0 }
		add_to_variable = {
			var = solar_military_support
			value = solar_popular_support
		}
		add_to_variable = {
			var = solar_military_support
			value = solar_military_measures
		}
		add_to_variable = {
			var = solar_military_support
			value = solar_military_resistance_actions
		}
		clamp_variable = {
			var = solar_military_support
			min = 0
			max = 5
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 0 } 
			}
			remove_ideas = SOL_military_desertion_5
			add_ideas = SOL_military_desertion_5
			remove_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0.02 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 1 } 
			}
			remove_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_5
			add_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0.016 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 2 } 
			}
			remove_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_5
			remove_ideas = SOL_military_desertion_4
			add_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0.012 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 3 } 
			}
			remove_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_5
			remove_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_3
			add_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0.008 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 4 } 
			}
			remove_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_5
			remove_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_2
			add_ideas = SOL_military_desertion_1
			remove_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0.004 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_support = 5 } 
			}
			remove_ideas = SOL_military_desertion_0
			remove_ideas = SOL_military_desertion_5
			remove_ideas = SOL_military_desertion_4
			remove_ideas = SOL_military_desertion_3
			remove_ideas = SOL_military_desertion_2
			remove_ideas = SOL_military_desertion_1
			add_ideas = SOL_military_desertion_0
			set_variable = { var = sol_border_porosity_factor_military_consolidation value = 0 }
		}

		if = {
			limit = {
				NOT = { check_variable = { solar_military_support_temp = solar_military_support } }
			}
			SOL_calculate_border_porosity = yes
		}
		#RESISTANCE COUNTER-ACTIVITY
		if = {
			limit = { 
				check_variable = { solar_resistance_actions_progress > 4 } 
				NOT = { check_variable = { solar_resistance_strength = 5 } }
			}
			add_to_variable = { var = solar_resistance_actions value = 1 }
			set_variable = { var = solar_resistance_actions_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_actions_progress > 4 } 
				NOT = { check_variable = { solar_resistance_outreach_strength = 5 } }
			}
			add_to_variable = { var = solar_resistance_outreach_actions value = 1 }
			set_variable = { var = solar_resistance_outreach_actions_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_cohesion_actions_progress > 4 } 
				NOT = { check_variable = { solar_resistance_cohesion = 3 } }
			}
			add_to_variable = { var = solar_resistance_cohesion_actions value = 1 }
			set_variable = { var = solar_resistance_cohesion_actions_progress value = 0 }
		}

		if = {
			limit = { 
				check_variable = { solar_civilian_measures_progress < 0 } 
			}
			set_variable = { var = solar_civilian_measures_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_military_measures_progress < 0 } 
			}
			set_variable = { var = solar_military_measures_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_actions_progress < 0 } 
			}
			set_variable = { var = solar_resistance_actions_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_actions_progress < 0 } 
			}
			set_variable = { var = solar_resistance_outreach_actions_progress value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_cohesion_actions_progress < 0 } 
			}
			set_variable = { var = solar_resistance_cohesion_actions_progress value = 0 }
		}
		if = {
			limit = { check_variable = { solar_resistance_strength = 5 } }
			set_variable = { var = solar_resistance_actions_progress value = 0 }
		}
		if = {
			limit = { check_variable = { solar_resistance_outreach_strength = 5 } }
			set_variable = { var = solar_resistance_outreach_actions_progress value = 0 }
		}
		if = {
			limit = { check_variable = { solar_resistance_cohesion = 3 } }
			set_variable = { var = solar_resistance_cohesion_actions_progress value = 0 }
		}
		
		#HARMONY RESTORATION MOVEMENT STRENGTH

		set_variable = { var = solar_resistance_strength_temp value = solar_resistance_strength }
		set_variable = { var = solar_resistance_strength value = 0 }
		add_to_variable = {
			var = solar_resistance_strength
			value = solar_initial_resistance_strength
		}
		add_to_variable = {
			var = solar_resistance_strength
			value = solar_resistance_suppression
		}
		add_to_variable = {
			var = solar_resistance_strength
			value = solar_resistance_actions
		}
		clamp_variable = {
			var = solar_resistance_strength
			min = 0
			max = 5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 0 } 
				NOT = { has_country_flag = SOL_resistance_begins }
			}
			remove_ideas = SOL_resistance_strength_0
			add_ideas = SOL_resistance_strength_0
			remove_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 1 } 
			}
			remove_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_0
			add_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 2 } 
			}
			remove_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_0
			remove_ideas = SOL_resistance_strength_1
			add_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 3 } 
			}
			remove_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_0
			remove_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_2
			add_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 4 } 
			}
			remove_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_0
			remove_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_3
			add_ideas = SOL_resistance_strength_4
			remove_ideas = SOL_resistance_strength_5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_strength = 5 } 
			}
			remove_ideas = SOL_resistance_strength_5
			remove_ideas = SOL_resistance_strength_0
			remove_ideas = SOL_resistance_strength_1
			remove_ideas = SOL_resistance_strength_2
			remove_ideas = SOL_resistance_strength_3
			remove_ideas = SOL_resistance_strength_4
			add_ideas = SOL_resistance_strength_5
		}

		if = {
			limit = {
				NOT = { check_variable = { solar_resistance_strength_temp = solar_resistance_strength } }
				has_global_flag = coalition_recognise_hrm_completed
			}
			SOL_coalition_hrn_collaboration = yes
		}
		#RESISTANCE OUTREACH STRENGTH

		set_variable = { var = solar_resistance_outreach_strength value = 0 }
		add_to_variable = {
			var = solar_resistance_outreach_strength
			value = solar_initial_resistance_outreach_strength
		}
		add_to_variable = {
			var = solar_resistance_outreach_strength
			value = solar_resistance_outreach_suppression
		}
		add_to_variable = {
			var = solar_resistance_outreach_strength
			value = solar_resistance_outreach_actions
		}
		clamp_variable = {
			var = solar_resistance_outreach_strength
			min = 0
			max = 5
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 0 } 
				NOT = { has_country_flag = SOL_resistance_begins }
			}
			remove_ideas = SOL_harmonist_broadcasts_0
			add_ideas = SOL_harmonist_broadcasts_0
			remove_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = 0 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 1 } 
			}
			remove_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_0
			add_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = -0.02 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 2 } 
			}
			remove_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_0
			remove_ideas = SOL_harmonist_broadcasts_1
			add_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = -0.04 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 3 } 
			}
			remove_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_0
			remove_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_2
			add_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = -0.06 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 4 } 
			}
			remove_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_0
			remove_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_3
			add_ideas = SOL_harmonist_broadcasts_4
			remove_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = -0.08 }
		}
		if = {
			limit = { 
				check_variable = { solar_resistance_outreach_strength = 5 } 
			}
			remove_ideas = SOL_harmonist_broadcasts_5
			remove_ideas = SOL_harmonist_broadcasts_0
			remove_ideas = SOL_harmonist_broadcasts_1
			remove_ideas = SOL_harmonist_broadcasts_2
			remove_ideas = SOL_harmonist_broadcasts_3
			remove_ideas = SOL_harmonist_broadcasts_4
			add_ideas = SOL_harmonist_broadcasts_5
			set_variable = { var = daybreaker_support_daily_resistance_outreach value = -0.1 }
		}
		#PR Nightmare, basically the chance of news being received poorly
		set_variable = { var = pr_nightmare value = solar_resistance_outreach_strength }
		multiply_variable { var = pr_nightmare value = 0.2 }

		#RESISTANCE COHESION
		set_variable = { var = solar_resistance_cohesion value = 0 }
		add_to_variable = {
			var = solar_resistance_cohesion
			value = solar_resistance_cohesion_suppression
		}
		add_to_variable = {
			var = solar_resistance_cohesion
			value = solar_resistance_cohesion_actions
		}
		clamp_variable = {
			var = solar_resistance_cohesion
			min = 0
			max = 3
		}
		if = {
			limit = {
				check_variable = { solar_resistance_cohesion = 0 }
			}
			remove_ideas = SOL_resistance_cohesion_1
			remove_ideas = SOL_resistance_cohesion_2
			remove_ideas = SOL_resistance_cohesion_3
		}
		if = {
			limit = {
				check_variable = { solar_resistance_cohesion = 1 }
			}
			remove_ideas = SOL_resistance_cohesion_1
			remove_ideas = SOL_resistance_cohesion_2
			remove_ideas = SOL_resistance_cohesion_3
			add_ideas = SOL_resistance_cohesion_1
		}
		if = {
			limit = {
				check_variable = { solar_resistance_cohesion = 2 }
			}
			remove_ideas = SOL_resistance_cohesion_1
			remove_ideas = SOL_resistance_cohesion_2
			remove_ideas = SOL_resistance_cohesion_3
			add_ideas = SOL_resistance_cohesion_2
		}
		if = {
			limit = {
				check_variable = { solar_resistance_cohesion = 3 }
			}
			remove_ideas = SOL_resistance_cohesion_1
			remove_ideas = SOL_resistance_cohesion_2
			remove_ideas = SOL_resistance_cohesion_3
			add_ideas = SOL_resistance_cohesion_3
		}

		if = {
			limit = {
				NOT = { has_country_flag = SOL_has_ongoing_attack }
				NOT = { has_country_flag = resistance_ceasefire }
				NOT = { check_variable = { resistance_attack_blocked > 0 } }
				check_variable = { solar_resistance_strength > 0 }
				check_variable = { solar_resistance_cohesion > 0 }
			}
			SOL_attack_reroll = yes
		}
		if = {
			limit = {
				NOT = { has_country_flag = SOL_has_ongoing_cohesion }
				NOT = { has_country_flag = resistance_ceasefire }
				NOT = { check_variable = { resistance_attack_blocked > 0 } }
				has_country_flag = cohesion_missions_active
			}
			set_country_flag = SOL_has_ongoing_cohesion
			activate_mission = SOL_resistance_cohesion
		}

		#THE PROGRESS BAR
		set_variable = { var = daybreaker_support_progress_bar_pos value = daybreaker_support }
		multiply_variable = { var = daybreaker_support_progress_bar_pos value = 4 }
		add_to_variable = { var = daybreaker_support_progress_bar_pos value = -400 }
		round_variable = daybreaker_support_progress_bar_pos

		#DAILY LOYALTY
		set_variable = { var = daybreaker_support_daily value = 0 }
		add_to_variable = {
			var = daybreaker_support_daily
			value = daybreaker_support_daily_propaganda
		}
		add_to_variable = {
			var = daybreaker_support_daily
			value = daybreaker_support_daily_resistance_outreach
		}
		add_to_variable = {
			var = daybreaker_support_daily
			value = daybreaker_support_daily_actions
		}
		set_variable = { var = daybreaker_support_weekly value = daybreaker_support_daily }
		multiply_variable = { var = daybreaker_support_daily value = loyalty_scaling_factor }
		multiply_variable = { var = daybreaker_support_daily value = 0.01 }
		
		#WEEKLY LEADS
		set_variable = { var = weekly_leads value = 0 }
		add_to_variable = {
			var = weekly_leads
			value = weekly_leads_modifier
		}
		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 60
					compare = greater_than_or_equals
				}
				has_completed_focus = SOL_Imperial_Inquisition
			}
			add_to_variable = { var = weekly_leads value = 2 }
		}

		if = {
			limit = { 
				check_variable = { 
					var = daybreaker_support 
					value = 20
					compare = greater_than_or_equals
				}
				has_completed_focus = SOL_bounty_hunters
			}
			set_country_flag = civilian_informants
		}
		else = {
			clr_country_flag = civilian_informants
		}
		SOL_calculate_division_requirements = yes
	}
}
SOL_calculate_probability = { #Yeah I didn't like doing this either, but the values I was getting from randomize_temp_variable weren't random enough. This basically allows for DnD-style gameplay for events.
	random_list = {
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.0 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.1 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.2 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.3 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.4 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.5 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.6 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.7 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.8 } }
		1 = { set_temp_variable = { var = probability_check_temp_1 value = 0.9 } }
	}
	random_list = {
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.00 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.01 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.02 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.03 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.04 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.05 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.06 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.07 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.08 } }
		1 = { set_temp_variable = { var = probability_check_temp_2 value = 0.09 } }
	}
	add_to_temp_variable = { probability_check_temp_1 = probability_check_temp_2 }
	set_variable = { var = probability_check value = probability_check_temp_1 }
}

SOL_calculate_leads_small = {
	random_list = {
		0.5 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 3 }
		}
		1 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 4 }
		}
		2 = {
			set_variable = { var = lead_counter value = 5 }
		}
		1 = {
			set_variable = { var = lead_counter value = 6 }
		}
		0.5 = {
			set_variable = { var = lead_counter value = 7 }
		}
	}
}
SOL_calculate_leads_medium = {
	random_list = {
		0.25 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 15 }
		}
		0.5 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 17 }
		}
		1 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 19 }
		}
		2 = {
			set_variable = { var = lead_counter value = 21 }
		}
		1 = {
			set_variable = { var = lead_counter value = 23 }
		}
		0.5 = {
			set_variable = { var = lead_counter value = 25 }
		}
		0.25 = {
			set_variable = { var = lead_counter value = 27 }
		}
	}
}
SOL_calculate_leads_large = {
	random_list = {
		0.25 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 35 }
		}
		0.5 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 38 }
		}
		1 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 41 }
		}
		2 = {
			set_variable = { var = lead_counter value = 44 }
		}
		1 = {
			set_variable = { var = lead_counter value = 47 }
		}
		0.5 = {
			set_variable = { var = lead_counter value = 50 }
		}
		0.25 = {
			set_variable = { var = lead_counter value = 53 }
		}
	}
}
SOL_calculate_leads_huge = {
	random_list = {
		0.25 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 61 }
		}
		0.5 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 64 }
		}
		1 = {
			modifier = {
				factor = 0.5
				has_country_flag = inquisition_additional_leads
			}
			set_variable = { var = lead_counter value = 67 }
		}
		2 = {
			set_variable = { var = lead_counter value = 70 }
		}
		1 = {
			set_variable = { var = lead_counter value = 73 }
		}
		0.5 = {
			set_variable = { var = lead_counter value = 76 }
		}
		0.25 = {
			set_variable = { var = lead_counter value = 79 }
		}
	}
}
SOL_calculate_resistance_target = {
	random_list = {
		20 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value < 200
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_activity
			}
		}
		60 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value > 200
						target = event_target:SOL_resistance_stronghold
					}
					distance_to = {
						value < 800
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_activity
			}
		}
		20 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value > 800
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_activity
			}
		}
	}
	event_target:SOL_resistance_activity = { set_state_flag = sol_past_resistance_activity }
}
SOL_calculate_magic = {
	if = {
		limit = {
			original_tag = EQS
			tag = event_target:solar_empire
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}

		clamp_variable = {
			var = daybreaker_magic_reserves
			min = 0 
			max = daybreaker_magic_max
		}
		set_variable = { var = daybreaker_magic_daily_change value = daybreaker_magic_regeneration }

		set_variable = { var = daybreaker_magic_loss value = 0 }
		set_variable = { var = daybreaker_magic_calculation_temp value = sol_heatwave_cost_daily }
		multiply_variable = { var = daybreaker_magic_calculation_temp value = sol_heatwave_number }
		subtract_from_variable = { var = daybreaker_magic_loss value = daybreaker_magic_calculation_temp }
		set_variable = { var = daybreaker_magic_calculation_temp value = sol_blessing_cost_daily }
		multiply_variable = { var = daybreaker_magic_calculation_temp value = sol_blessing_number }
		subtract_from_variable = { var = daybreaker_magic_loss value = daybreaker_magic_calculation_temp }
		set_variable = { var = daybreaker_magic_calculation_temp value = sol_curse_cost_daily }
		multiply_variable = { var = daybreaker_magic_calculation_temp value = sol_curse_number }
		subtract_from_variable = { var = daybreaker_magic_loss value = daybreaker_magic_calculation_temp }

		add_to_variable = { var = daybreaker_magic_daily_change value = daybreaker_magic_loss }
		add_to_variable = { var = daybreaker_magic_daily_change value = daybreaker_magic_daily_change_actions }

		#Magic bar position
		set_variable = { var = daybreaker_magic_progress_bar_pos value = 300 }
		set_variable = { var = daybreaker_magic_progress_bar_pos_temp value = daybreaker_magic_reserves }
		divide_variable = { var = daybreaker_magic_progress_bar_pos_temp value = daybreaker_magic_max }
		multiply_variable = { var = daybreaker_magic_progress_bar_pos_temp value = 300 }
		round_variable = daybreaker_magic_progress_bar_pos_temp
		subtract_from_variable = { var = daybreaker_magic_progress_bar_pos value = daybreaker_magic_progress_bar_pos_temp }
		if = {
			limit = { #Force GUI update only if GUI is open
				has_variable = sol_magic_screen_show
			}
			add_to_variable = { var = sol_magic_screen_show value = 1 }
		}
		clamp_variable = {
			var = daybreaker_magic_reserves
			min = 0 
			max = daybreaker_magic_max
		}
	}
}
SOL_set_state_flags_for_public_works = {
	if = {
		limit = {
			original_tag = EQS
			tag = event_target:solar_empire
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		clear_array = SOL_region_array
		every_state = {
			limit = {
				OR = {
					state = 117
					state = 114
					state = 121
					state = 123
					state = 97
					state = 111
					state = 122
					state = 120
					state = 113
					state = 63
					state = 116
					state = 115
					state = 112
					state = 84
					state = 327
					state = 101
					state = 2
					state = 1
					state = 5
					state = 65
					state = 39
					state = 3
					state = 68
					state = 99
					state = 128
					state = 129
					state = 105
					state = 103
					state = 104
					state = 40
					state = 171
					state = 179
				}
			}
			set_variable = { SOL_public_works_region_id = 1 }
		}
		set_variable = { SOL_public_works_num_states^1 = 32 }
		add_to_array = { SOL_region_array = 1 }
		every_state = {
			limit = {
				OR = {
					state = 106
					state = 29
					state = 109
					state = 12
					state = 107
					state = 185
					state = 108
					state = 110
					state = 188
					state = 186
					state = 75
					state = 187
					state = 223
					state = 226
					state = 349
					state = 184
					state = 230
					state = 231
					state = 232
					state = 227
					state = 228
					state = 525
				}
			}
			set_variable = { SOL_public_works_region_id = 2 }
		}
		set_variable = { SOL_public_works_num_states^2 = 22 }
		add_to_array = { SOL_region_array = 2 }
		every_state = {
			limit = {
				OR = {
					state = 180
					state = 181
					state = 70
					state = 134
					state = 135
					state = 56
					state = 176
					state = 183
					state = 102
					state = 178
					state = 177
					state = 74
					state = 182
					state = 40
				}
			}
			set_variable = { SOL_public_works_region_id = 3 }
		}
		set_variable = { SOL_public_works_num_states^3 = 14 }
		add_to_array = { SOL_region_array = 3 }
		every_state = {
			limit = {
				OR = {
					state = 96
					state = 127
					state = 124
					state = 125
					state = 95
					state = 119
					state = 118
					state = 41
					state = 66
					state = 100
					state = 87
					state = 38
					state = 94
				}
			}
			set_variable = { SOL_public_works_region_id = 4 }
		}
		set_variable = { SOL_public_works_num_states^4 = 13 }
		add_to_array = { SOL_region_array = 4 }
		every_state = {
			limit = {
				OR = {
					state = 48
					state = 18
					state = 46
					state = 59
					state = 60
					state = 61
					state = 130
					state = 132
					state = 126
					state = 170
					state = 169
					state = 54
					state = 133
					state = 73
					state = 72
					state = 45
					state = 14
					state = 173
					state = 174
					state = 175
					state = 172
					state = 138
					state = 136
					state = 137
					state = 131
				}
			}
			set_variable = { SOL_public_works_region_id = 5 }
		}
		set_variable = { SOL_public_works_num_states^5 = 24 }
		add_to_array = { SOL_region_array = 5 }
		every_state = {
			limit = {
				OR = {
					state = 22
					state = 23
					state = 19
					state = 80
					state = 85
					state = 93
					state = 89
					state = 21
					state = 20
					state = 78
					state = 92
					state = 91
					state = 43
					state = 44
					state = 42
					state = 51
					state = 71
					state = 47
					state = 49
				}
			}
			set_variable = { SOL_public_works_region_id = 6 }
		}
		set_variable = { SOL_public_works_num_states^6 = 19 }
		add_to_array = { SOL_region_array = 6 }
		every_state = {
			limit = {
				OR = {
					state = 28
					state = 27
					state = 82
					state = 13
					state = 90
					state = 37
					state = 17
					state = 31
					state = 88
					state = 348
					state = 16
					state = 24
					state = 350
					state = 30
					state = 36
					state = 25
					state = 83
					state = 79
					state = 52
					state = 353
					state = 32
					state = 81
					state = 35
					state = 221
					state = 50
					state = 86
					state = 15
					state = 26
					state = 348
					state = 33
					state = 351
					state = 34
					state = 352
				}
			}
			set_variable = { SOL_public_works_region_id = 7 }
		}
		set_variable = { SOL_public_works_num_states^7 = 33 }
		add_to_array = { SOL_region_array = 7 }
		every_state = {
			limit = {
				OR = {
					state = 318
					state = 139
					state = 343
					state = 324
					state = 143
					state = 140
					state = 77
					state = 142
					state = 146
					state = 148
					state = 147
					state = 149
					state = 144
					state = 141
					state = 55
					state = 145
					state = 53
					state = 345
					state = 344
					state = 150
					state = 64
					state = 151
					state = 152
					state = 98
					state = 236
					state = 339
				}
			}
			set_variable = { SOL_public_works_region_id = 8 }
		}
		set_variable = { SOL_public_works_num_states^8 = 26 }
		add_to_array = { SOL_region_array = 8 }
		every_state = {
			limit = {
				OR = {
					state = 156
					state = 155
					state = 154
					state = 157
					state = 326
					state = 164
					state = 160
					state = 162
					state = 158
					state = 159
					state = 229
					state = 167
					state = 653
					state = 662
					state = 661
					state = 67
					state = 166
					state = 233
					state = 168
					state = 225
					state = 161
					state = 163
					state = 235
					state = 237
					state = 153
					state = 334
					state = 165
					state = 240
					state = 234
					state = 678
					state = 332
					state = 241
					state = 57
				}
			}
			set_variable = { SOL_public_works_region_id = 9 }
		}
		set_variable = { SOL_public_works_num_states^9 = 34 }
		add_to_array = { SOL_region_array = 9 }
		every_state = {
			limit = {
				OR = {
					state = 364
					state = 363
					state = 362
					state = 365
					state = 361
					state = 360
					state = 676
					state = 675
					state = 355
					state = 359
					state = 358
					state = 357
					state = 356
					state = 354
				}
			}
			set_variable = { SOL_public_works_region_id = 10 }
		}
		set_variable = { SOL_public_works_num_states^10 = 14 }
		add_to_array = { SOL_region_array = 10 }
	}
}

SOL_calculate_region_development = {

	for_each_loop = {
		array = SOL_region_array
		value = current_region
		if = {
			limit = {
				any_state = {
					AND = {
						check_variable = { SOL_public_works_region_id = EQS.current_region }
						is_controlled_by = event_target:solar_empire
					}
				}	
			}
			#CIVILIAN
			set_variable = { var = SOL_public_works_region_development_civilian^current_region value = 0 }
			add_to_variable = { 
				var = SOL_public_works_region_development_civilian^current_region
				value = solar_civilian_support 
			}
			add_to_variable = {
				var = SOL_public_works_region_development_civilian^current_region
				value = SOL_public_works_region_development_completed^current_region
			}
			add_to_variable = {
				var = SOL_public_works_region_development_civilian^current_region
				value = SOL_public_works_region_development_special^current_region
			}
			set_variable = { var = SOL_public_works_region_development_wartorn^current_region value = 0 }
			every_state = {
				limit = { 
					check_variable = { SOL_public_works_region_id = EQS.current_region } 
					has_state_flag =  SOL_wartorn_state
				}
				EQS = { add_to_variable = { var = SOL_public_works_region_development_wartorn^current_region value = -0.25 } }
			}
			add_to_variable = {
				var = SOL_public_works_region_development_civilian^current_region
				value = SOL_public_works_region_development_wartorn^current_region
			}

			#MILITARY
			set_variable = { var = SOL_public_works_region_development_military^current_region value = 0 }
			add_to_variable = { 
				var = SOL_public_works_region_development_military^current_region
				value = solar_military_support 
			}
			set_variable = { var = SOL_public_works_region_development_occupied^current_region value = 0 }
			every_state = {
				limit = { 
					check_variable = { SOL_public_works_region_id = EQS.current_region } 
					NOT = { is_controlled_by = EQS }
					is_owned_by = EQS
					controller = { has_war_with = EQS }
				}
				EQS = { add_to_variable = { var = SOL_public_works_region_development_occupied^current_region value = -0.5 } }
			}
			add_to_variable = { 
				var = SOL_public_works_region_development_military^current_region
				value = SOL_public_works_region_development_occupied^current_region
			}

			#RESISTANCE
			set_variable = { var = SOL_public_works_region_development_resistance^current_region value = 0 }
			subtract_from_variable = { 
				var = SOL_public_works_region_development_resistance^current_region
				value = solar_resistance_strength
			}
			set_variable = { var = SOL_public_works_region_development_foreign^current_region value = 0 }
			every_state = {
				limit = { 
					check_variable = { SOL_public_works_region_id = EQS.current_region } 
					NOT = { is_owned_by = EQS }
				}
				EQS = { add_to_variable = { var = SOL_public_works_region_development_foreign^current_region value = -0.5 } }
			}
			add_to_variable = { 
				var = SOL_public_works_region_development_resistance^current_region
				value = SOL_public_works_region_development_foreign^current_region
			}
			set_variable = { var = SOL_public_works_region_development_overrun^current_region value = 0 }
			every_state = {
				limit = { 
					check_variable = { SOL_public_works_region_id = EQS.current_region } 
					is_controlled_by = EQS
					NOT = { is_core_of = EQS }
				}
				EQS = { add_to_variable = { var = SOL_public_works_region_development_overrun^current_region value = -0.25 } }
			}
			add_to_variable = { 
				var = SOL_public_works_region_development_resistance^current_region
				value = SOL_public_works_region_development_overrun^current_region
			}

			#TOTAL
			set_variable = { var = SOL_public_works_region_development^current_region value = 0 }
			add_to_variable = {
				var = SOL_public_works_region_development^current_region
				value = SOL_public_works_region_development_civilian^current_region
			}
			add_to_variable = {
				var = SOL_public_works_region_development^current_region
				value = SOL_public_works_region_development_military^current_region
			}
			add_to_variable = {
				var = SOL_public_works_region_development^current_region
				value = SOL_public_works_region_development_resistance^current_region
			}
			clamp_variable = {	
				var = SOL_public_works_region_development^current_region
				min = 0 
				max = 10
			}	
			set_variable = { var = SOL_public_works_region_frame^current_region value = 2 }
			if = {
				limit = { 
					check_variable = { SOL_public_works_region_development^current_region > 2 }
				}
				set_variable = { var = SOL_public_works_region_frame^current_region value = 3 }
			}
			if = {
				limit = { 
					check_variable = { SOL_public_works_region_development^current_region > 4 }
				}
				set_variable = { var = SOL_public_works_region_frame^current_region value = 4 }
			}
			if = {
				limit = { 
					check_variable = { SOL_public_works_region_development^current_region > 6 }
				}
				set_variable = { var = SOL_public_works_region_frame^current_region value = 5 }
			}
			if = {
				limit = { 
					check_variable = {  SOL_public_works_region_development^current_region > 8 }
				}
				set_variable = { var = SOL_public_works_region_frame^current_region value = 6 }
			}
		}
		else = {
			set_variable = { var = SOL_public_works_region_frame^current_region value = 1 }
		}
	}
	if = {
		limit = {
			has_variable = sol_public_works_screen_show
		}
		add_to_variable = { var = sol_public_works_screen_show value = 1 }
	}
}

SOL_calculate_public_works_progress = {
	if = {
		limit = {
			original_tag = EQS
			tag = event_target:solar_empire
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		set_variable = { var = SOL_dynamic_modifier_civ_use_total value = 0 }
		if = {
			limit = { 
				has_war = no #Public Works are put on hold when there is an ongoing war
			}
			for_each_loop = {
				array = SOL_ongoing_public_works
				value = current_region
				if = {
					limit = {
						check_variable = { SOL_public_works_duration_array^current_region > 0 }
					}
					set_variable = { var = SOL_public_works_industry_use value = sol_public_works_cost_per_state }
					multiply_variable = { var = SOL_public_works_industry_use value = SOL_public_works_num_states^current_region }
					set_variable = { var = SOL_public_works_industry_use_multiplier value = 5 }
					subtract_from_variable = { var = SOL_public_works_industry_use_multiplier value = SOL_public_works_region_development^current_region }
					divide_variable = { var = SOL_public_works_industry_use_multiplier value = 10 }
					add_to_variable = { var = SOL_public_works_industry_use_multiplier value = 1 }
					multiply_variable = { var = SOL_public_works_industry_use value = SOL_public_works_industry_use_multiplier }

					add_to_variable = { var = SOL_dynamic_modifier_civ_use_total value = SOL_public_works_industry_use }
				}
				else = {
					every_state = {
						limit = { check_variable = { SOL_public_works_region_id = EQS.current_region } }
						add_dynamic_modifier = { modifier = SOL_state_civilian_consolidation }
						add_province_modifier = {
							static_modifiers = {
								SOL_state_civilian_consolidation_province 
							}
							province = {
								all_provinces = yes
							}
						}
						add_extra_state_shared_building_slots = 2
						add_building_construction = {
							type = infrastructure
							level = 2
							instant_build = yes
						}
					}
					add_to_array = { array = SOL_completed_public_works value = current_region }
					add_to_variable = { var = sol_ongoing_public_works_num value = -1 }
					add_to_variable = { var = SOL_public_works_region_development_completed^current_region value = 1 }
					SOL_calculate_region_development = yes

					add_to_variable = { var = solar_civilian_measures_progress value = 1 }
					add_to_variable = { var = daybreaker_support value = sol_public_works_loyalty_increase }
				}
			}
		}
		for_each_loop = {
			array = SOL_completed_public_works
			value = current_region
			if = {
				limit = { is_in_array = { SOL_ongoing_public_works = current_region } }
				remove_from_array = { SOL_ongoing_public_works = current_region }
			}
		}
		multiply_variable = { var = SOL_dynamic_modifier_civ_use_total value = 0.01 }

		if = {
			limit = {
				has_variable = sol_public_works_screen_show
			}
			add_to_variable = { var = sol_public_works_screen_show value = 1 }
		}
	}
}
SOL_calculate_public_works_industry_use = {
	set_variable = { var = SOL_public_works_industry_use value = sol_public_works_cost_per_state }
	multiply_variable = { var = SOL_public_works_industry_use value = SOL_public_works_num_states^currently_selected_region }
	set_variable = { var = SOL_public_works_industry_use_multiplier value = 5 }
	subtract_from_variable = { var = SOL_public_works_industry_use_multiplier value = SOL_public_works_region_development^currently_selected_region }
	divide_variable = { var = SOL_public_works_industry_use_multiplier value = 10 }
	add_to_variable = { var = SOL_public_works_industry_use_multiplier value = 1 }
	multiply_variable = { var = SOL_public_works_industry_use value = SOL_public_works_industry_use_multiplier }
}

SOL_attack_reroll = {
	random_list = {
		20 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value < 200
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_attack_target_true
			}
		}
		60 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value > 200
						target = event_target:SOL_resistance_stronghold
					}
					distance_to = {
						value < 800
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_attack_target_true
			}
		}
		20 = {
			random_owned_controlled_state = {
				limit = {
					is_core_of = event_target:solar_empire
					NOT = { state = 3 }
					NOT = { state = 127 }
					NOT = { state = event_target:SOL_resistance_stronghold }
					is_owned_and_controlled_by = event_target:solar_empire
					distance_to = {
						value > 800
						target = event_target:SOL_resistance_stronghold
					}
				}
				save_global_event_target_as = SOL_resistance_attack_target_true
			}
		}
	}
	event_target:SOL_resistance_attack_target_true = { set_state_flag = sol_past_resistance_activity }
	random_list = { 
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 1 }
			modifier = {
				factor = 3
				event_target:SOL_resistance_attack_target_true = { 
					OR = {
						arms_factory > 3 
						industrial_complex > 3 
					}
				}
			}
		}
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 2 }
			modifier = {
				factor = 3
				event_target:SOL_resistance_attack_target_true = { 
					OR = {
						has_resources_amount = {
							resource = oil
							amount > 10
						}
						has_resources_amount = {
							resource = aluminium
							amount > 10
						}
						has_resources_amount = {
							resource = steel
							amount > 10
						}
						has_resources_amount = {
							resource = chromium
							amount > 10
						}
						has_resources_amount = {
							resource = tungsten
							amount > 10
						}
						has_resources_amount = {
							resource = rubber
							amount > 10
						}
						has_resources_amount = {
							resource = crystals
							amount > 10
						}
					}
				}
			}
		}
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 3 }
			modifier = {
				factor = 3
				event_target:SOL_resistance_attack_target_true = {
					non_damaged_building_level = {
						building = infrastructure
						level > 1		
					}
				}
			}
		}
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 4 }
			modifier = {
				factor = 3
				divisions_in_state = {
					size > 4
					state = event_target:SOL_resistance_attack_target_true
				}
			}
		}
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 5 }
			modifier = {
				factor = 3
				event_target:SOL_resistance_attack_target_true = {
					state_strategic_value > 40
				}
			}
		}
		1 = {
			set_variable = { var = SOL_resistance_attack_type value = 6 }
			modifier = {
				factor = 3
				has_war = yes
			}
		}
	}
	random_owned_controlled_state = {
		limit = {
			is_core_of = event_target:solar_empire
			NOT = { state = 3 }
			NOT = { state = 127 }
			NOT = { state = event_target:SOL_resistance_stronghold }
			is_owned_and_controlled_by = event_target:solar_empire
			NOT = { has_state_flag = resistance_attack_dummy_target }
		}
		set_state_flag = resistance_attack_dummy_target
		save_global_event_target_as = SOL_resistance_attack_target_1
	}
	random_owned_controlled_state = {
		limit = {
			is_core_of = event_target:solar_empire
			NOT = { state = 3 }
			NOT = { state = 127 }
			NOT = { state = event_target:SOL_resistance_stronghold }
			is_owned_and_controlled_by = event_target:solar_empire
			NOT = { has_state_flag = resistance_attack_dummy_target }
		}
		set_state_flag = resistance_attack_dummy_target
		save_global_event_target_as = SOL_resistance_attack_target_2
	}
	random_owned_controlled_state = {
		limit = {
			is_core_of = event_target:solar_empire
			NOT = { state = 3 }
			NOT = { state = 127 }
			NOT = { state = event_target:SOL_resistance_stronghold }
			is_owned_and_controlled_by = event_target:solar_empire
			NOT = { has_state_flag = resistance_attack_dummy_target }
		}
		set_state_flag = resistance_attack_dummy_target
		save_global_event_target_as = SOL_resistance_attack_target_3
	}
	random_owned_controlled_state = {
		limit = {
			is_core_of = event_target:solar_empire
			NOT = { state = 3 }
			NOT = { state = 127 }
			NOT = { state = event_target:SOL_resistance_stronghold }
			is_owned_and_controlled_by = event_target:solar_empire
			NOT = { has_state_flag = resistance_attack_dummy_target }
		}
		set_state_flag = resistance_attack_dummy_target
		save_global_event_target_as = SOL_resistance_attack_target_4
	}
	if = {
		limit = { NOT = { has_country_flag = SOL_twilight_ascended } }
		random_owned_controlled_state = {
			limit = {
				is_core_of = event_target:solar_empire
				NOT = { state = 3 }
				NOT = { state = 127 }
				NOT = { state = event_target:SOL_resistance_stronghold }
				is_owned_and_controlled_by = event_target:solar_empire
				NOT = { has_state_flag = resistance_attack_dummy_target }
			}
			set_state_flag = resistance_attack_dummy_target
			save_global_event_target_as = SOL_resistance_attack_target_5
		}
	}
	if = {
		limit = { NOT = { has_country_flag = upgraded_inquisition } }
		random_owned_controlled_state = {
			limit = {
				is_core_of = event_target:solar_empire
				NOT = { state = 3 }
				NOT = { state = 127 }
				NOT = { state = event_target:SOL_resistance_stronghold }
				is_owned_and_controlled_by = event_target:solar_empire
				NOT = { has_state_flag = resistance_attack_dummy_target }
			}
			set_state_flag = resistance_attack_dummy_target
			save_global_event_target_as = SOL_resistance_attack_target_6
		}
	}
	random_list = {
		1 = {
			event_target:SOL_resistance_attack_target_1 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_1 }
		}
		1 = {
			event_target:SOL_resistance_attack_target_2 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_2 }
		}
		1 = {
			event_target:SOL_resistance_attack_target_3 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_3 }
		}
		1 = {
			event_target:SOL_resistance_attack_target_4 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_4 }
		}
		1 = {
			modifier = {
				factor = 0
				has_country_flag = SOL_twilight_ascended
			}
			event_target:SOL_resistance_attack_target_5 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_5 }
		}
		1 = {
			modifier = {
				factor = 0
				has_country_flag = upgraded_inquisition
			}
			event_target:SOL_resistance_attack_target_6 = { clr_state_flag = resistance_attack_dummy_target }
			event_target:SOL_resistance_attack_target_true = { save_global_event_target_as = SOL_resistance_attack_target_6 }
		}
	}
	event_target:SOL_resistance_attack_target_true = { set_state_flag = resistance_attack_true_target }
	set_variable = { var = resistance_attack_mission_dur value = 6 }
	subtract_from_variable = { var = resistance_attack_mission_dur value = solar_resistance_strength }
	multiply_variable = { var = resistance_attack_mission_dur value = 30 }
	clr_country_flag = first_refine_completed
	set_country_flag = SOL_has_ongoing_attack
	activate_mission = SOL_resistance_attack
}
SOL_calculate_division_requirements = {
	set_variable = { var = sol_uprising_division_requirements value = 4 }
	if = {
		limit = { 
			check_variable = { 
				var = daybreaker_support 
				value = 40
				compare = greater_than_or_equals
			}
			has_completed_focus = SOL_civilian_militias
		}
		set_country_flag = volunteer_militias
		set_variable = { var = sol_loyalty_requirement_decrease value = 1 }
	}
	else = {
		clr_country_flag = volunteer_militias
		set_variable = { var = sol_loyalty_requirement_decrease value = 0 }
	}
	subtract_from_variable = { var = sol_uprising_division_requirements value = sol_loyalty_requirement_decrease }

	clamp_variable = {
		var = sol_uprising_division_requirements
		min = 1
	}
	set_variable = { var = sol_attack_division_requirements value = sol_uprising_division_requirements }
	add_to_variable = { var = sol_attack_division_requirements value = 1 }
}
SOL_calculate_population = {
	set_variable = { var = sol_local_pop_thousands value = 0 }
	set_variable = { sol_increment = 10000 }
	while_loop_effect = {
		limit = {
			check_variable = { sol_increment > 0.01 }
		}
		set_variable = { sol_pop_counter = 0 }
		while_loop_effect = {
			limit = { state_population_k > sol_local_pop_thousands }
			add_to_variable = { sol_local_pop_thousands = sol_increment }
		}
		subtract_from_variable = { sol_local_pop_thousands = sol_increment }
		divide_variable = { sol_increment = 10 }
	}
	clear_variable = sol_increment
}
SOL_calculate_border_porosity = {
	set_variable = { var = sol_border_porosity_factor value = 0 }
	add_to_variable = { 
		var = sol_border_porosity_factor
		value = sol_border_porosity_factor_military_consolidation
	}
	add_to_variable = { 
		var = sol_border_porosity_factor
		value = sol_border_porosity_factor_custom_effects
	}
	if = {
		limit = {
			OR = {
				has_country_flag = sol_porosity_increase
				has_country_flag = sol_raid_loss 
			}
		}
		add_to_variable = { var = sol_border_porosity_factor value = 0.004 }
	}
	set_variable = { var = sol_border_porosity_land value = 1 }
	subtract_from_variable = { var = sol_border_porosity_land value = sol_border_porosity_factor }
	set_variable = { var = sol_border_porosity_coastal value = 2 }
	subtract_from_variable = { var = sol_border_porosity_coastal value = sol_border_porosity_factor }
	divide_variable = { var = sol_border_porosity_coastal value = 2 }
	set_variable = { var = sol_land_border_length value = 0 }
	every_state = {
		limit = { 
			is_owned_and_controlled_by = EQS
			any_neighbor_state = { owner = { is_coalition_member = yes } }
			is_in_home_area = yes
		}
		EQS = { add_to_variable = { var = sol_land_border_length value = 1 } }
	}
	set_variable = { var = sol_coastal_border_length value = 0 }
	every_state = {
		limit = { 
			is_owned_and_controlled_by = EQS
			is_coastal = yes
			is_in_home_area = yes		
		}
		EQS = { add_to_variable = { var = sol_coastal_border_length value = 1 } }
	}
	if = {
		limit = { check_variable = { sol_land_border_length > 0 } }
		set_variable = { var = sol_porosity_calc_temp value = 1 }
		set_variable = { var = sol_border_porosity_land_per_state value = sol_border_porosity_land }
		while_loop_effect = {
			limit = { check_variable = { sol_porosity_calc_temp < sol_land_border_length } }
			multiply_variable = { var = sol_border_porosity_land value = sol_border_porosity_land_per_state }
			add_to_variable = { var = sol_porosity_calc_temp value = 1 }
		}
	}
	else = {
		set_variable = { var = sol_border_porosity_land value = 1 }
	}
	if = {
		limit = { check_variable = { sol_coastal_border_length > 0 } }
		set_variable = { var = sol_porosity_calc_temp value = 1 }
		set_variable = { var = sol_border_porosity_coastal_per_state value = sol_border_porosity_coastal }
		while_loop_effect = {
			limit = { check_variable = { sol_porosity_calc_temp < sol_coastal_border_length } }
			multiply_variable = { var = sol_border_porosity_coastal value = sol_border_porosity_coastal_per_state }
			add_to_variable = { var = sol_porosity_calc_temp value = 1 }
		}
	}
	else = {
		set_variable = { var = sol_border_porosity_coastal value = 1 }
	}
	set_variable = { var = sol_border_porosity value = sol_border_porosity_land }
	multiply_variable = { var = sol_border_porosity value = sol_border_porosity_coastal }

	set_variable = { var = sol_infiltrate_chance value = 1 }
	subtract_from_variable = { var = sol_infiltrate_chance value = sol_border_porosity }
}
SOL_coalition_hrn_collaboration = {
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 0 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			remove_ideas = coalition_recognise_hrm_project_bonus_1
			remove_ideas = coalition_recognise_hrm_project_bonus_2
			remove_ideas = coalition_recognise_hrm_project_bonus_3
			remove_ideas = coalition_recognise_hrm_project_bonus_4
			remove_ideas = coalition_recognise_hrm_project_bonus_5
		}
		clear_variable = global.SOL_coalition_hrn_collaboration_var
	}
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 1 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			add_ideas = coalition_recognise_hrm_project_bonus_1
			remove_ideas = coalition_recognise_hrm_project_bonus_2
			remove_ideas = coalition_recognise_hrm_project_bonus_3
			remove_ideas = coalition_recognise_hrm_project_bonus_4
			remove_ideas = coalition_recognise_hrm_project_bonus_5
		}
		set_variable = { var = global.SOL_coalition_hrn_collaboration_var value = 5 }
	}
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 2 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			remove_ideas = coalition_recognise_hrm_project_bonus_1
			add_ideas = coalition_recognise_hrm_project_bonus_2
			remove_ideas = coalition_recognise_hrm_project_bonus_3
			remove_ideas = coalition_recognise_hrm_project_bonus_4
			remove_ideas = coalition_recognise_hrm_project_bonus_5
		}
		set_variable = { var = global.SOL_coalition_hrn_collaboration_var value = 10 }
	}
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 3 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			remove_ideas = coalition_recognise_hrm_project_bonus_1
			remove_ideas = coalition_recognise_hrm_project_bonus_2
			add_ideas = coalition_recognise_hrm_project_bonus_3
			remove_ideas = coalition_recognise_hrm_project_bonus_4
			remove_ideas = coalition_recognise_hrm_project_bonus_5
		}
		set_variable = { var = global.SOL_coalition_hrn_collaboration_var value = 15 }
	}
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 4 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			remove_ideas = coalition_recognise_hrm_project_bonus_1
			remove_ideas = coalition_recognise_hrm_project_bonus_2
			remove_ideas = coalition_recognise_hrm_project_bonus_3
			add_ideas = coalition_recognise_hrm_project_bonus_4
			remove_ideas = coalition_recognise_hrm_project_bonus_5
		}
		set_variable = { var = global.SOL_coalition_hrn_collaboration_var value = 20 }
	}
	if = {
		limit = { 
			check_variable = { solar_resistance_strength = 5 } 
		}
		every_country = {
			limit = { is_coalition_member = yes }
			remove_ideas = coalition_recognise_hrm_project_bonus_1
			remove_ideas = coalition_recognise_hrm_project_bonus_2
			remove_ideas = coalition_recognise_hrm_project_bonus_3
			remove_ideas = coalition_recognise_hrm_project_bonus_4
			add_ideas = coalition_recognise_hrm_project_bonus_5
		}
		set_variable = { var = global.SOL_coalition_hrn_collaboration_var value = 25 }
	}
}