SOL_resistance_menu = {
	SOL_public_measures_improvement = { 
		icon = GFX_decision_daybreaker_support
		priority = 100
		available = {
			hidden_trigger = {
				check_variable = { solar_civilian_measures_progress > 4 }
				NOT = { check_variable = { solar_civilian_support = 5 } }
			}
			if = {
				limit = { check_variable = { solar_civilian_support = 5 } }
				custom_trigger_tooltip = {
					tooltip = supportmeasuresmax
					NOT = { check_variable = { solar_civilian_support = 5 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = civilianmeasurescomplete
					check_variable = { solar_civilian_measures_progress > 4 }
				}
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_public_measures_improvement"
			add_to_variable = { var = solar_civilian_measures_progress value = -5 }
		}

		days_remove = 20
		modifier = {
			political_power_factor = -0.1
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_public_measures_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_civilian_measures value = 1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_civilian_support = 5 } } }
				custom_effect_tooltip = civilianmeasuresupgrade
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOL_public_hostility_5
						add_idea = SOL_public_hostility_4
					}
				}
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_military_measures_improvement = { 
		icon = GFX_decision_daybreaker_military_support
		priority = 99
		available = {
			hidden_trigger = {
				check_variable = { solar_military_measures_progress > 4 }
				NOT = { check_variable = { solar_military_support = 5 } }
			}
			if = {
				limit = { check_variable = { solar_military_support = 5 } }
				custom_trigger_tooltip = {
					tooltip = supportmeasuresmax
					NOT = { check_variable = { solar_military_support = 5 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = militarymeasurescomplete
					check_variable = { solar_military_measures_progress > 4 }
				}
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_military_measures_improvement"
			add_to_variable = { var = solar_military_measures_progress value = -5 }
		}

		days_remove = 20
		modifier = {
			political_power_factor = -0.1
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_military_measures_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_military_measures value = 1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_military_support = 5 } } }
				custom_effect_tooltip = militarymeasuresupgrade
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOL_military_desertion_5
						add_idea = SOL_military_desertion_4
					}
				}
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_resistance_suppression_improvement = {
		icon = GFX_decision_daybreaker_resistance_suppression
		priority = 98
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_suppression_progress > 4 }
				NOT = { check_variable = { solar_resistance_strength = 0 } }
			}
			if = {
				limit = { check_variable = { solar_resistance_strength = 0 } }
				custom_trigger_tooltip = {
					tooltip = suppressionmeasuresmax
					NOT = { check_variable = { solar_resistance_strength = 0 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = resistancesuppressioncomplete
					check_variable = { solar_resistance_suppression_progress > 4 }
				}
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_suppression_improvement"
			add_to_variable = { var = solar_resistance_suppression_progress value = -5 }
		}

		days_remove = 20
		modifier = {
			political_power_factor = -0.1
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_suppression_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_resistance_suppression value = -1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_resistance_strength = 0 } } }
				custom_effect_tooltip = resistancesuppressionupgrade
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_resistance_broadcast_suppression_improvement = { 
		icon = GFX_decision_daybreaker_outreach
		priority = 97
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_suppression_progress > 4 }
				NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
			}
			if = {
				limit = { check_variable = { solar_resistance_strength = 0 } }
				custom_trigger_tooltip = {
					tooltip = suppressionmeasuresmax
					NOT = { check_variable = { solar_resistance_strength = 0 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = resistanceoutreachsuppressioncomplete
					check_variable = { solar_resistance_outreach_suppression_progress > 4 }
				}
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_outreach_suppression_improvement"
			add_to_variable = { var = solar_resistance_outreach_suppression_progress value = -5 }
		}

		days_remove = 20
		modifier = {
			political_power_factor = -0.1
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_outreach_suppression_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_resistance_outreach_strength = 0 } } }
				custom_effect_tooltip = resistanceoutreachsuppressionupgrade
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_create_narrative = { 
		icon = GFX_decision_speech
		priority = 80
		ai_will_do = {
			factor = 100
		}
		allowed = {
			always = no
		}
		is_good = no
		days_mission_timeout = 30
		selectable_mission = yes
		fire_only_once = no
		timeout_effect = {
			country_event = {
				id = paxsolaris.59
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_create_narrative"
			set_country_flag = SOL_has_narrative
			country_event = {
				id = paxsolaris.59
			}
		}

		cost = 25
	}
	SOL_harmonist_demands = { 
		icon = GFX_decision_rifles_manehattan
		priority = 20
		ai_will_do = {
			factor = 0
		}
		activation = { always = no }
		available = {
			always = no
		}
		is_good = no
		days_mission_timeout = 10
		selectable_mission = no
		fire_only_once = no
		timeout_effect = {
			if = {
				limit = { check_variable = { harmonist_demand_counter = 0 } }
				country_event = {
					id = paxsolaris.120
				}
			}
			else_if = {
				limit = { check_variable = { harmonist_demand_counter = 1 } }
				country_event = {
					id = paxsolaris.121
				}
			}
			else_if = {
				limit = { check_variable = { harmonist_demand_counter = 2 } }
				country_event = {
					id = paxsolaris.122
				}
			}
			else_if = {
				limit = { check_variable = { harmonist_demand_counter = 3 } }
				country_event = {
					id = paxsolaris.123
				}
			}
			else_if = {
				limit = { check_variable = { harmonist_demand_counter = 4 } }
				country_event = {
					id = paxsolaris.124
				}
			}
			else_if = {
				limit = { check_variable = { harmonist_demand_counter = 5 } }
				country_event = {
					id = paxsolaris.125
				}
			}
			add_to_variable = { var = harmonist_demand_counter value = 1 }
			hidden_effect = {
				if = { 
					limit = { check_variable = { harmonist_demand_counter < 6 } }
					activate_mission = SOL_harmonist_demands
				}
			}
		}
	}
	SOL_attack_buf = {

		icon = GFX_decision_sol_border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:BUF.SOL_attacker_state_vs_@ROOT = {
				is_fully_controlled_by = EQS
			}
			divisions_in_border_state = {
				state = var:BUF.SOL_attacker_state_vs_@ROOT
				border_state = var:BUF.SOL_defender_state_vs_@ROOT
				size > 0
			}
		}
		highlight_state_targets = {
			state = var:BUF.SOL_attacker_state_vs_@ROOT
		}

		ai_will_do = {
			base = 100
		}

		cancel_trigger = {
			hidden_trigger = {
				OR = {
					FROM = {
						can_have_border_war_with_ROOT = no
					}
				}
			}
		}

		fire_only_once = yes 

		selectable_mission = yes

		days_mission_timeout = 30

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_attack_buf"
			custom_effect_tooltip = SOL_attack_buf_tt
			add_to_variable = { var = solar_resistance_actions_progress value = 1 }
			add_to_variable = { var = daybreaker_support value = -5 }
			add_political_power = -100
			add_stability = -0.05
			hidden_effect = {
				SOL_calculate_loyalty = yes
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf }
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_attack_buf"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:BUF.SOL_attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = paxsolaris.23
					on_lose = paxsolaris.24
					on_cancel = paxsolaris.24
				}

				defender = {
					state = var:BUF.SOL_defender_state_vs_@ROOT
					num_provinces = 4
					on_win = paxsolaris.25
					on_cancel = paxsolaris.25
				}
			}
			hidden_effect = {
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf }
			}
		}
	}
}

SOL_inquisition_mechanic = {
	SOL_upgrade_inquisition_decision = {
		icon = GFX_decision_upgrade_inquisition
		priority = 110
		available = {
			num_of_civilian_factories_available_for_projects > 9
			hidden_trigger = { 
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		visible = {
			NOT = { has_country_flag = upgraded_inquisition }
			has_completed_focus = SOL_upgrade_inquisition
		}
		ai_will_do = {
			factor = 100
		}
		fire_only_once = no

		cost = 20
		days_remove = solar_inquisition_decision_low_duration

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_upgrade_inquisition_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
		}
		
		modifier = {
			civilian_factory_use = 10
		}
		remove_effect = { 
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_upgrade_inquisition_decision"
			add_to_variable = { var = inquisition_upgrade_process value = 1 }
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			if = {
				limit = { check_variable = { inquisition_upgrade_process = 1 } }
				set_country_flag = inquisition_less_detection_chance
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 2 } }
				add_to_variable = { var = solar_inquisition_decision_medium_duration value = -10 }
				add_to_variable = { var = solar_inquisition_decision_low_duration value = -10 }
			}
			if = {
				limit = { check_variable = { inquisition_upgrade_process = 3 } }
				set_country_flag = inquisition_additional_leads
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 4 } }
				add_to_variable = { var = solar_inquisition_max_decisions value = 1 }
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 5 } }
				set_country_flag = upgraded_inquisition
				country_event = {
					id = paxsolaris.74
				}
			}
		}
	}
	SOL_strike_at_the_resistance = { 
		icon = GFX_decision_smash_resistance
		priority = 85
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress = 0 }
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
				NOT = { check_variable = { solar_resistance_strength = 0 } }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress = 0 }
				NOT = { check_variable = { solar_resistance_strength = 0 } }
				NOT = { has_active_mission = SOL_strike_at_resistance_mission }
				NOT = { has_country_flag = resistance_strike_in_progress }
			}
		}
		ai_will_do = {
			factor = 150
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 20
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 75
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_20_leads_75

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_strike_at_the_resistance"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = resistance_strike_in_progress
			hidden_effect = {
				add_command_power = -20
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 75
				}
			}
		}

		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_strike_at_the_resistance"
			hidden_effect = {
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_strike_target_1
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_strike_target_2
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_strike_target_3
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_strike_target_4
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_strike_target_5
					set_state_flag = potential_secondary_strike_target
				}
				if = {
					limit = { NOT = { has_country_flag = SOL_twilight_ascended } }
					random_owned_controlled_state = {
						limit = {
							is_core_of = event_target:solar_empire
							NOT = { state = 3 }
							NOT = { state = 127 }
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_state_flag = potential_secondary_strike_target }
							is_owned_and_controlled_by = event_target:solar_empire
						}
						save_global_event_target_as = SOL_strike_target_6
						set_state_flag = potential_secondary_strike_target
					}
				}
				if = {
					limit = { NOT = { has_country_flag = upgraded_inquisition } }
					random_owned_controlled_state = {
						limit = {
							is_core_of = event_target:solar_empire
							NOT = { state = 3 }
							NOT = { state = 127 }
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_state_flag = potential_secondary_strike_target }
							is_owned_and_controlled_by = event_target:solar_empire
						}
						save_global_event_target_as = SOL_strike_target_7
						set_state_flag = potential_secondary_strike_target
					}
				}
				random_list = {
					1 = { 
						event_target:SOL_strike_target_1 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_1 } 
					}
					1 = { 
						event_target:SOL_strike_target_2 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_2 } 
					}
					1 = { 
						event_target:SOL_strike_target_3 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_3 } 
					}
					1 = { 
						event_target:SOL_strike_target_4 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_4 } 
					}
					1 = { 
						event_target:SOL_strike_target_5 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_5 } 
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = SOL_twilight_ascended
						}
						event_target:SOL_strike_target_6 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_6 } 
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = upgraded_inquisition
						}
						event_target:SOL_strike_target_7 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_7 } 
					}
				}
				event_target:SOL_resistance_stronghold = { set_state_flag = potential_secondary_strike_target }
				every_state = {
					limit = { has_state_flag = potential_secondary_strike_target }
					add_to_array = { EQS.SOL_strike_at_resistance_target_array = THIS }
				}
				event_target:SOL_resistance_stronghold = { clr_state_flag = potential_secondary_strike_target }
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						has_state_flag = potential_secondary_strike_target
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_secondary_strike_target_1
					clr_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						has_state_flag = potential_secondary_strike_target
						is_owned_and_controlled_by = event_target:solar_empire
					}
					save_global_event_target_as = SOL_secondary_strike_target_2
					clr_state_flag = potential_secondary_strike_target
				}
				activate_mission = SOL_strike_at_resistance_mission
			}
			custom_effect_tooltip = strike_decision_outcome
		}
	}
	SOL_refine_strike_results = { 
		icon = GFX_decision_smash_resistance
		priority = 83
		available = {
			hidden_trigger = {
				has_active_mission = SOL_strike_at_resistance_mission
			}
			custom_trigger_tooltip = {
				tooltip = ongoingresistancestrike
				has_active_mission = SOL_strike_at_resistance_mission
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			hidden_trigger = {
				has_active_mission = SOL_strike_at_resistance_mission
				NOT = { has_country_flag = SOL_refined_resistance_strike }
			}
		}
		ai_will_do = {
			factor = 150
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 10
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 50
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_10_leads_50
		cancel_trigger = {
			hidden_trigger = {
				NOT = { has_active_mission = SOL_strike_at_resistance_mission }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_strike_results"
			hidden_effect = {
				add_command_power = -10
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 50
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_strike_results"
			set_country_flag = SOL_refined_resistance_strike
			custom_effect_tooltip = SOL_refine_strike_results_tt
			hidden_effect = {
				clear_array = EQS.SOL_strike_at_resistance_target_array
				add_to_array = { EQS.SOL_strike_at_resistance_target_array = event_target:SOL_secondary_strike_target_1 }
				add_to_array = { EQS.SOL_strike_at_resistance_target_array = event_target:SOL_secondary_strike_target_2 }
				add_to_array = { EQS.SOL_strike_at_resistance_target_array = event_target:SOL_resistance_stronghold }
			}
		}
	}
	SOL_strike_at_resistance_mission = {
		icon = GFX_decision_smash_resistance
		priority = 84
		available = {
			OR = {
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_1 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						event_target:SOL_strike_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_1
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_2 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						event_target:SOL_strike_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_2
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_3 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						event_target:SOL_strike_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_3
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_4 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						event_target:SOL_strike_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_4
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_5 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						event_target:SOL_strike_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_5
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_6 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						NOT = { has_country_flag = SOL_twilight_ascended }
						event_target:SOL_strike_target_6 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_6
					}
				}
				if = {
					limit = { 
						NOT = {
							AND = {
								event_target:SOL_strike_target_7 = { has_state_flag = potential_secondary_strike_target }
								has_country_flag = SOL_refined_resistance_strike
							}
						}
						NOT = { has_country_flag = upgraded_inquisition }
						event_target:SOL_strike_target_7 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_7
					}
				}
			}
		}
		ai_will_do = {
			base = 1200
		}

		highlight_state_targets = {
			state = EQS.SOL_strike_at_resistance_target_array^0
			state = EQS.SOL_strike_at_resistance_target_array^1
			state = EQS.SOL_strike_at_resistance_target_array^2
			state = EQS.SOL_strike_at_resistance_target_array^3
			state = EQS.SOL_strike_at_resistance_target_array^4
			state = EQS.SOL_strike_at_resistance_target_array^5
			state = EQS.SOL_strike_at_resistance_target_array^6
		}

		allowed = {
			always = no
		}

		selectable_mission = yes
		days_mission_timeout = 30
		is_good = yes
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_strike_at_resistance_mission"
			custom_effect_tooltip = strike_at_resistance_effect_tt
			hidden_effect = {
				SOL_calculate_probability = yes
				if = {
					limit = {
						check_variable = { pr_nightmare > probability_check }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_1 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_1
							}
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_2 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_2
							}
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_3 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_3
							}
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_4 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_4
							}
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_5 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_5
							}
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_6 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_6
							}
							NOT = { has_country_flag = SOL_twilight_ascended }
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_7 = { has_state_flag = potential_secondary_strike_target }
							NOT = { has_country_flag = SOL_refined_resistance_strike }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_7
							}
							NOT = { has_country_flag = upgraded_inquisition }
						}
						add_to_variable = { var = daybreaker_support value = -2 }
						add_to_variable = { var = daybreaker_support_temp_loss_tracker value = 2 }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
				}
				
				if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_secondary_strike_target_1
						}
					}
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					add_to_variable = { var = strike_at_resistance_success_rating value = 1 }
				}
				if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_secondary_strike_target_2
						}
					}
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					add_to_variable = { var = strike_at_resistance_success_rating value = 1 }
				}
				if = {
					limit = {
						divisions_in_state = {
							size > 9
							state = event_target:SOL_resistance_stronghold
						}
						NOT = { has_country_flag = sol_inquisition_spies }
					}
					add_to_variable = { var = solar_resistance_suppression value = -1 }
					add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
					SOL_calculate_leads_large = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					set_variable = { var = solar_resistance_actions_progress value = 4 }
					set_country_flag = {
						flag = resistance_attack_blocked
						days = 50
						value = 1
					}
					add_to_variable = { var = strike_at_resistance_success_rating value = 5 }
					country_event = {
						id = paxsolaris.12
						days = 3
					}
					clear_array = EQS.SOL_past_resistance_targets
					clear_variable = SOL_past_resistance_targets_num
				}
				else_if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_resistance_stronghold
						}
					}
					add_to_variable = { var = solar_resistance_suppression value = -1 }
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					set_variable = { var = solar_resistance_actions_progress value = 4 }
					set_country_flag = {
						flag = resistance_attack_blocked
						days = 30
						value = 1
					}
					add_to_variable = { var = strike_at_resistance_success_rating value = 3 }
					if = {
						limit = {
							has_country_flag = sol_inquisition_spies
						}
						country_event = {
							id = paxsolaris.224
							days = 3
						}
					}
					clear_array = EQS.SOL_past_resistance_targets
					clear_variable = SOL_past_resistance_targets_num
				}
				SOL_calculate_last_resistance_strike_target = yes
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
			country_event = {
				id = paxsolaris.75
				hours = 1
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_strike_at_resistance_mission"
			hidden_effect = {
				every_state = {
					clr_state_flag = potential_secondary_strike_target
				}
			}
			clr_country_flag = SOL_refined_resistance_strike
			clr_country_flag = resistance_strike_in_progress
			clear_array = EQS.SOL_strike_at_resistance_target_array
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_initiate_raid_resistance_decision = { 
		icon = GFX_decision_sol_raid_resistance
		priority = 80
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress > 0 }
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress > 0 }
				NOT = { has_country_flag = resistance_strike_in_progress }
			}
		}
		ai_will_do = {
			factor = 100
		}
		custom_cost_trigger = {
			command_power > 4
			check_variable = {
				var = SOL_lead_variable
				value = 25
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_5_leads_25

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_initiate_raid_resistance_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = resistance_strike_in_progress
			hidden_effect = {
				add_command_power = -5
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 25
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no
		fixed_random_seed = no
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_initiate_raid_resistance_decision"
			hidden_effect = {
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						is_owned_and_controlled_by = event_target:solar_empire
						distance_to = {
							value < 1500
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_raid_resistance_target_1
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_raid_resistance_target_1 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						is_owned_and_controlled_by = event_target:solar_empire
						distance_to = {
							value < 1500
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_raid_resistance_target_2
					#set_state_flag = SOL_resistance_base_dummy_target_1_flag
				}
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_raid_resistance_target_1 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { state = event_target:SOL_raid_resistance_target_2 }
						is_owned_and_controlled_by = event_target:solar_empire
						distance_to = {
							value < 1500
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_raid_resistance_target_3
					#set_state_flag = SOL_resistance_base_dummy_target_2_flag
				}
				if = {
					limit = {
						AND = {
							has_country_flag = SOL_twilight_ascended
							has_country_flag = upgraded_inquisition
						}
					}
					set_variable = { var = SOL_raid_resistance_base_var value = 1 }
					activate_mission = SOL_raid_resistance_decision_1
				}
				else_if = {
					limit = {
						OR = {
							has_country_flag = SOL_twilight_ascended
							has_country_flag = upgraded_inquisition
						}
					}
					random_list = {
						1 = { set_variable = { var = SOL_raid_resistance_base_var value = 1 } }
						1 = { set_variable = { var = SOL_raid_resistance_base_var value = 2 } }
					}
					activate_mission = SOL_raid_resistance_decision_1
					activate_mission = SOL_raid_resistance_decision_2
				}
				else = {
					random_list = {
						1 = { set_variable = { var = SOL_raid_resistance_base_var value = 1 } }
						1 = { set_variable = { var = SOL_raid_resistance_base_var value = 2 } }
						1 = { set_variable = { var = SOL_raid_resistance_base_var value = 3 } }

					}
					activate_mission = SOL_raid_resistance_decision_1
					activate_mission = SOL_raid_resistance_decision_2
					activate_mission = SOL_raid_resistance_decision_3
				}
				
			}
			custom_effect_tooltip = raid_decision_outcome
		}
	}
	SOL_raid_resistance_decision_1 = {
		icon = GFX_decision_sol_raid_resistance
		priority = 79
		available = {
			event_target:SOL_raid_resistance_target_1 = {
				is_controlled_by = ROOT
			}
			divisions_in_state = {
				size > 0
				state = event_target:SOL_raid_resistance_target_1
			}
		}
		ai_will_do = {
			base = 100
		}
		visible = {
			event_target:SOL_raid_resistance_target_1 = {
				is_controlled_by = ROOT
			}
		}

		highlight_state_targets = {
			state = event_target:SOL_raid_resistance_target_1
		}
		
		allowed = {
			always = no
		}

		selectable_mission = yes
		days_mission_timeout = 20
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_raid_resistance_decision_1"
			hidden_effect = {
				if = {
					limit = { check_variable = { SOL_raid_resistance_base_var = 1 } }
					country_event = { id = paxsolaris.73 }
					remove_mission = SOL_raid_resistance_decision_2
					remove_mission = SOL_raid_resistance_decision_3
				}
				else = {
					random_list = {
						30 = {
							country_event = { id = paxsolaris.72 }
							remove_mission = SOL_raid_resistance_decision_2
							remove_mission = SOL_raid_resistance_decision_3
						}
						30 = {
							modifier = {
								add = 40
								has_country_flag = inquisition_less_detection_chance
							}
							country_event = { id = paxsolaris.71 }
						}
					}
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_raid_resistance_decision_1"
			country_event = { id = paxsolaris.70 }
		}
	}
	SOL_raid_resistance_decision_2 = {
		icon = GFX_decision_sol_raid_resistance
		priority = 78
		available = {
			event_target:SOL_raid_resistance_target_2 = {
				is_controlled_by = ROOT
			}
			divisions_in_state = {
				size > 0
				state = event_target:SOL_raid_resistance_target_2
			}
		}
		ai_will_do = {
			base = 100
		}
		visible = {
			event_target:SOL_raid_resistance_target_2 = {
				is_controlled_by = ROOT
			}
			NOT = {
				AND = {
					has_country_flag = SOL_twilight_ascended
					has_country_flag = upgraded_inquisition
				}
			}
		}

		highlight_state_targets = {
			state = event_target:SOL_raid_resistance_target_2
		}
		
		allowed = {
			always = no
		}

		selectable_mission = yes
		days_mission_timeout = 20
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_raid_resistance_decision_2"
			hidden_effect = {
				if = {
					limit = { check_variable = { SOL_raid_resistance_base_var = 2 } }
					country_event = { id = paxsolaris.73 }
					remove_mission = SOL_raid_resistance_decision_1
					remove_mission = SOL_raid_resistance_decision_3
				}
				else = {
					random_list = {
						30 = {
							country_event = { id = paxsolaris.72 }
							remove_mission = SOL_raid_resistance_decision_1
							remove_mission = SOL_raid_resistance_decision_3
						}
						30 = {
							modifier = {
								add = 40
								has_country_flag = inquisition_less_detection_chance
							}
							country_event = { id = paxsolaris.71 }
						}
					}
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_raid_resistance_decision_2"
			country_event = { id = paxsolaris.70 }
		}
	}
	SOL_raid_resistance_decision_3 = {
		icon = GFX_decision_sol_raid_resistance
		priority = 77
		available = {
			event_target:SOL_raid_resistance_target_3 = {
				is_controlled_by = ROOT
			}
			divisions_in_state = {
				size > 0
				state = event_target:SOL_raid_resistance_target_3
			}
		}
		ai_will_do = {
			base = 100
		}
		visible = {
			event_target:SOL_raid_resistance_target_3 = {
				is_controlled_by = ROOT
			}
			NOT = {
				OR = {
					has_country_flag = SOL_twilight_ascended
					has_country_flag = upgraded_inquisition
				}
			}
		}

		highlight_state_targets = {
			state = event_target:SOL_raid_resistance_target_3
		}
		
		allowed = {
			always = no
		}

		selectable_mission = yes
		days_mission_timeout = 20
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_raid_resistance_decision_3"
			hidden_effect = {
				if = {
					limit = { check_variable = { SOL_raid_resistance_base_var = 3 } }
					country_event = { id = paxsolaris.73 }
					remove_mission = SOL_raid_resistance_decision_1
					remove_mission = SOL_raid_resistance_decision_2
				}
				else = {
					random_list = {
						30 = {
							country_event = { id = paxsolaris.72 }
							remove_mission = SOL_raid_resistance_decision_1
							remove_mission = SOL_raid_resistance_decision_2
						}
						30 = {
							modifier = {
								add = 40
								has_country_flag = inquisition_less_detection_chance
							}
							country_event = { id = paxsolaris.71 }
						}
					}
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_raid_resistance_decision_3"
			country_event = { id = paxsolaris.70 }
		}
	}

	SOL_information_blackout = {
		icon = GFX_decision_information_blackout
		priority = 60
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress = 0 }
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
				NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress = 0 }
				NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
				NOT = { has_active_mission = SOL_information_blackout_mission }
				NOT = { has_country_flag = information_strike_in_progress }
			}
		}
		ai_will_do = {
			factor = 150
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 20
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 75
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_20_leads_75

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = information_strike_in_progress
			hidden_effect = {
				add_command_power = -20
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 75
				}
			}
		}

		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout"
			hidden_effect = {
				random_list = {
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						41 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						96 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						18 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						60 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						59 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						72 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						14 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						130 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						132 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						41 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						125 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						124 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						129 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						171 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						181 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						70 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						179 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						74 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						118 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						117 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						117 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						121 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						111 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						116 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						106 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						29 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						13 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						28 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						29 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						185 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						110 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						75 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						184 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						231 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						525 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						108 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						70 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						178 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						74 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						40 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						186 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						185 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						188 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						110 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						75 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						108 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						74 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						178 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						70 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						181 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						171 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						126 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						59 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						132 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						61 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						72 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						14 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						13 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						90 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						31 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						350 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						30 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						32 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						86 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						15 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						33 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						351 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						26 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						21 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						85 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						80 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						19 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						50 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						15 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						86 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						33 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						351 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
				}
				activate_mission = SOL_information_blackout_mission		
			}
			custom_effect_tooltip = information_strike_decision_outcome
		}
	}
	SOL_information_blackout_mission = {
		icon = GFX_decision_information_blackout
		priority = 59
		available = {
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_1
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_2
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_3
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_4
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_5
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_6 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_6
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_7 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_7
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_8 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_8
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_9 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_9
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_10 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_10
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_11 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_11
				}
			}
		}
		ai_will_do = {
			base = 1200
		}

		highlight_state_targets = {
			state = event_target:SOL_information_blackout_target_1
			state = event_target:SOL_information_blackout_target_2
			state = event_target:SOL_information_blackout_target_3
			state = event_target:SOL_information_blackout_target_4
			state = event_target:SOL_information_blackout_target_5
			state = event_target:SOL_information_blackout_target_6
			state = event_target:SOL_information_blackout_target_7
			state = event_target:SOL_information_blackout_target_8
			state = event_target:SOL_information_blackout_target_9
			state = event_target:SOL_information_blackout_target_10
			state = event_target:SOL_information_blackout_target_11
		}

		allowed = {
			always = no
		}

		selectable_mission = yes
		days_mission_timeout = 30
		is_good = yes
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout_mission"
			custom_effect_tooltip = information_blackout_effect_tt
			hidden_effect = { 
				add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
				add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
				SOL_calculate_leads_large = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				set_variable = { var = solar_resistance_outreach_actions_progress value = 4 }
				set_country_flag = {
					flag = resistance_attack_blocked
					days = 30
					value = 1
				}
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				SOL_calculate_loyalty = yes 
				clr_country_flag = information_strike_in_progress
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_information_blackout_mission"
			clr_country_flag = information_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_arrest_sympathisers = {
		icon = GFX_decision_sol_arrest_propagandists
		priority = 58
		available = {
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress > 0 }
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress > 0 }
				NOT = { has_country_flag = information_strike_in_progress }
			}
		}
		ai_will_do = {
			factor = 100
		}
		custom_cost_trigger = {
			command_power > 4
			check_variable = {
				var = SOL_lead_variable
				value = 25
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_5_leads_25

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_arrest_sympathisers"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = information_strike_in_progress
			hidden_effect = {
				add_command_power = -5
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 25
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_arrest_sympathisers"
			hidden_effect = {
				random_owned_controlled_state = {
					limit = {
						is_core_of = event_target:solar_empire
						NOT = { state = 3 }
						NOT = { state = 127 }
						NOT = { state = event_target:SOL_resistance_stronghold }
						is_owned_and_controlled_by = event_target:solar_empire
						distance_to = {
							value < 1500
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_arrest_event_target
				}
				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 1 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 2 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 3 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 4 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 5 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 6 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 7 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 8 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 9 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 10 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 11 }
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_first_target value = 12 }
					}
				}
				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 1 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 1 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 2 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 2 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 3 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 3 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 4 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 4 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 5 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 5 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 6 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 6 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 7 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 7 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 8 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 8 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 9 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 9 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 10 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 10 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 11 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 11 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_second_target value = 12 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 12 }
							}
						}
					}
				}
				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 1 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 1 }
								check_variable = { SOL_arrest_sympathisers_second_target = 1 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 2 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 2 }
								check_variable = { SOL_arrest_sympathisers_second_target = 2 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 3 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 3 }
								check_variable = { SOL_arrest_sympathisers_second_target = 3 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 4 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 4 }
								check_variable = { SOL_arrest_sympathisers_second_target = 4 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 5 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 5 }
								check_variable = { SOL_arrest_sympathisers_second_target = 5 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 6 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 6 }
								check_variable = { SOL_arrest_sympathisers_second_target = 6 }		
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 7 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 7 }
								check_variable = { SOL_arrest_sympathisers_second_target = 7 }		
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 8 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 8 }
								check_variable = { SOL_arrest_sympathisers_second_target = 8 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 9 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 9 }
								check_variable = { SOL_arrest_sympathisers_second_target = 9 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 10 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 10 }
								check_variable = { SOL_arrest_sympathisers_second_target = 10 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 11 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 11 }
								check_variable = { SOL_arrest_sympathisers_second_target = 11 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_third_target value = 12 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 12 }
								check_variable = { SOL_arrest_sympathisers_second_target = 12 }
							}
						}
					}
				}
				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 1 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 1 }
								check_variable = { SOL_arrest_sympathisers_second_target = 1 }
								check_variable = { SOL_arrest_sympathisers_third_target = 1 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 2 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 2 }
								check_variable = { SOL_arrest_sympathisers_second_target = 2 }
								check_variable = { SOL_arrest_sympathisers_third_target = 2 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 3 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 3 }
								check_variable = { SOL_arrest_sympathisers_second_target = 3 }
								check_variable = { SOL_arrest_sympathisers_third_target = 3 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 4 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 4 }
								check_variable = { SOL_arrest_sympathisers_second_target = 4 }
								check_variable = { SOL_arrest_sympathisers_third_target = 4 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 5 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 5 }
								check_variable = { SOL_arrest_sympathisers_second_target = 5 }
								check_variable = { SOL_arrest_sympathisers_third_target = 5 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 6 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 6 }
								check_variable = { SOL_arrest_sympathisers_second_target = 6 }
								check_variable = { SOL_arrest_sympathisers_third_target = 6 }		
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 7 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 7 }
								check_variable = { SOL_arrest_sympathisers_second_target = 7 }
								check_variable = { SOL_arrest_sympathisers_third_target = 7 }		
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 8 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 8 }
								check_variable = { SOL_arrest_sympathisers_second_target = 8 }
								check_variable = { SOL_arrest_sympathisers_third_target = 8 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 9 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 9 }
								check_variable = { SOL_arrest_sympathisers_second_target = 9 }
								check_variable = { SOL_arrest_sympathisers_third_target = 9 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 10 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 10 }
								check_variable = { SOL_arrest_sympathisers_second_target = 10 }
								check_variable = { SOL_arrest_sympathisers_third_target = 10 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 11 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 11 }
								check_variable = { SOL_arrest_sympathisers_second_target = 11 }
								check_variable = { SOL_arrest_sympathisers_third_target = 11 }
							}
						}
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_fourth_target value = 12 }
						modifier = {
							factor = 0
							OR = {
								check_variable = { SOL_arrest_sympathisers_first_target = 12 }
								check_variable = { SOL_arrest_sympathisers_second_target = 12 }
								check_variable = { SOL_arrest_sympathisers_third_target = 12 }
							}
						}
					}
				}

				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 1 }
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_first_target } 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 2 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_second_target } 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 3 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_third_target }
						modifier = {
							factor = 0 
							AND = {
								has_country_flag = SOL_twilight_ascended
								has_country_flag = upgraded_inquisition
							}
						} 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 4 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_fourth_target }
						modifier = {
							factor = 0 
							OR = {
								has_country_flag = SOL_twilight_ascended
								has_country_flag = upgraded_inquisition
							}
						} 
					}
				}
			}
			custom_effect_tooltip = arrest_decision_outcome
			
			country_event = { id = paxsolaris.77 }
		}
	}


	SOL_investigate_resistance_decision = {
		icon = GFX_decision_investigate_resistance
		available = {
			hidden_trigger = { 
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 10
				OR = {
					AND = {
						check_variable = { solar_resistance_actions_progress = 0 }
						check_variable = {  SOL_lead_variable < 75 }
					}
					check_variable = {  SOL_lead_variable < 25 }
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_investigate_resistance_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			add_to_variable = { var = weekly_leads_modifier value = 4 }
			custom_effect_tooltip = investigate_four_leads_per_week
			
		}

		days_remove = 35
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_investigate_resistance_decision"
			add_to_variable = { var = weekly_leads_modifier value = -4 }
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
		}
	}

	SOL_highlight_states = {
		icon = GFX_decision_mark_states
		available = {
			hidden_trigger = { 
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				NOT = { has_country_flag = SOL_highlight_states_active }
				has_country_flag = SOL_highlight_states_decision_unlocked
			}
		}
		ai_will_do = {
			factor = 0
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 15
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_15_leads_10
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_highlight_states"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_command_power = -15
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 10
				}
				set_country_flag = SOL_highlight_states_active
			}
			custom_effect_tooltip = highlight_decision_outcome
		}
		fire_only_once = no
	}
	SOL_highlight_states_mission = {
		icon = GFX_decision_mark_states
		available = {
			always = yes
		}
		activation = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				has_country_flag = SOL_highlight_states_active
			}
		}
		ai_will_do = {
			factor = 0
		}
		highlight_state_targets = {
			state = EQS.SOL_past_resistance_targets^0
			state = EQS.SOL_past_resistance_targets^1
			state = EQS.SOL_past_resistance_targets^2
			state = EQS.SOL_past_resistance_targets^3
			state = EQS.SOL_past_resistance_targets^4
			state = EQS.SOL_past_resistance_targets^5
			state = EQS.SOL_past_resistance_targets^6
			state = EQS.SOL_past_resistance_targets^7
			state = EQS.SOL_past_resistance_targets^8
			state = EQS.SOL_past_resistance_targets^9
			state = EQS.SOL_past_resistance_targets^10
			state = EQS.SOL_past_resistance_targets^11
			state = EQS.SOL_past_resistance_targets^12
			state = EQS.SOL_past_resistance_targets^13
			state = EQS.SOL_past_resistance_targets^14
			state = EQS.SOL_past_resistance_targets^15
			state = EQS.SOL_past_resistance_targets^16
			state = EQS.SOL_past_resistance_targets^17
			state = EQS.SOL_past_resistance_targets^18
			state = EQS.SOL_past_resistance_targets^19
		}
		highlight_color_while_active = 1

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_highlight_states_mission"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = {
				clr_country_flag = SOL_highlight_states_active
			}
		}
		fire_only_once = no
	}
	SOL_dispatch_pegasi_decision_1 = {
		icon = infiltrate_state
		allowed = {
			original_tag = EQS
		}

		visible = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_1
			}
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}
		
		available = {
		}
		
		state_target = yes
		target_array = SOL_dispatched_mtf_state_decision_1_arr
		target_root_trigger = {
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}

		target_trigger = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_1
				OR = {
					owner = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
					controller = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
				}
			}
		}

		ai_will_do = {
			base = 100
		}

		days_remove = SOL_dispatched_mtf_state_decision_1_duration_var

		modifier = {
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision_1 target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_dispatch_pegasi_decision_1 target: [From.GetName]"
			if = {
				limit = {
					FROM = {
						NOT = {
                           is_core_of = FROM.OWNER
                        }
					}
				}
				FROM = { add_resistance = -3 }
            }
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				remove_from_array = { SOL_dispatched_mtf_state_decision_1_arr = FROM }
				FROM = {
					clr_state_flag = SOL_dispatched_mtf_state_decision_1
					create_unit = { division = "name = \"IST-1 'Firebolts'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					create_unit = { division = "name = \"IST-2 'Sunrise'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
			}
		}
	}
	SOL_dispatch_pegasi_decision_2 = {
		icon = infiltrate_state
		allowed = {
			original_tag = EQS
		}

		visible = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_2
			}
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}
		
		available = {
		}
		
		state_target = yes
		target_array = SOL_dispatched_mtf_state_decision_2_arr
		target_root_trigger = {
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}

		target_trigger = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_2
				OR = {
					owner = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
					controller = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
				}
			}
		}

		ai_will_do = {
			base = 100
		}

		days_remove = SOL_dispatched_mtf_state_decision_2_duration_var

		modifier = {
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision_2 target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_dispatch_pegasi_decision_2 target: [From.GetName]"
			if = {
				limit = {
					FROM = {
						NOT = {
                           is_core_of = FROM.OWNER
                        }
					}
				}
				FROM = { add_resistance = -3 }
            }
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				remove_from_array = { SOL_dispatched_mtf_state_decision_2_arr = FROM }
				FROM = {
					clr_state_flag = SOL_dispatched_mtf_state_decision_2
					create_unit = { division = "name = \"IST-3 'Dawnbreak'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					create_unit = { division = "name = \"IST-4 'Right Hoof'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
			}
		}
	}
	SOL_dispatch_pegasi_decision_3 = {
		icon = infiltrate_state
		allowed = {
			original_tag = EQS
		}

		visible = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_3
			}
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}
		
		available = {
		}
		
		state_target = yes
		target_array = SOL_dispatched_mtf_state_decision_3_arr
		target_root_trigger = {
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}

		target_trigger = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_3
				OR = {
					owner = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
					controller = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
				}
			}
		}

		ai_will_do = {
			base = 100
		}

		days_remove = SOL_dispatched_mtf_state_decision_3_duration_var

		modifier = {
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision_3 target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_dispatch_pegasi_decision_3 target: [From.GetName]"
			if = {
				limit = {
					FROM = {
						NOT = {
                           is_core_of = FROM.OWNER
                        }
					}
				}
				FROM = { add_resistance = -3 }
            }
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				remove_from_array = { SOL_dispatched_mtf_state_decision_3_arr = FROM }
				FROM = {
					clr_state_flag = SOL_dispatched_mtf_state_decision_3
					create_unit = { division = "name = \"IST-5 'Infernos'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					create_unit = { division = "name = \"IST-6 'The Enforcers'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
			}
		}
	}
	SOL_dispatch_pegasi_decision_4 = {
		icon = infiltrate_state
		allowed = {
			original_tag = EQS
		}

		visible = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_4
			}
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}
		
		available = {
		}
		
		state_target = yes
		target_array = SOL_dispatched_mtf_state_decision_4_arr
		target_root_trigger = {
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}

		target_trigger = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_4
				OR = {
					owner = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
					controller = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
				}
			}
		}

		ai_will_do = {
			base = 100
		}

		days_remove = SOL_dispatched_mtf_state_decision_4_duration_var

		modifier = {
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision_4 target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_dispatch_pegasi_decision_4 target: [From.GetName]"
			if = {
				limit = {
					FROM = {
						NOT = {
                           is_core_of = FROM.OWNER
                        }
					}
				}
				FROM = { add_resistance = -3 }
            }
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				remove_from_array = { SOL_dispatched_mtf_state_decision_4_arr = FROM }
				FROM = {
					clr_state_flag = SOL_dispatched_mtf_state_decision_4
					create_unit = { division = "name = \"IST-7 'Chromosphere'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					create_unit = { division = "name = \"IST-8 'Zealots'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
			}
		}
	}
	SOL_dispatch_pegasi_decision_5 = {
		icon = infiltrate_state
		allowed = {
			original_tag = EQS
		}

		visible = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_5
			}
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}
		
		available = {
		}
		
		state_target = yes
		target_array = SOL_dispatched_mtf_state_decision_5_arr
		target_root_trigger = {
			ROOT = {
				NOT = {
					has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				}
			}
		}

		target_trigger = {
			FROM = {
				has_state_flag = SOL_dispatched_mtf_state_decision_5
				OR = {
					owner = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
					controller = {
						OR = {
							original_tag = EQS
							is_subject_of = EQS
							is_in_faction_with = EQS
						}
					}
				}
			}
		}

		ai_will_do = {
			base = 100
		}

		days_remove = SOL_dispatched_mtf_state_decision_5_duration_var

		modifier = {
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision_5 target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_dispatch_pegasi_decision_5 target: [From.GetName]"
			if = {
				limit = {
					FROM = {
						NOT = {
                           is_core_of = FROM.OWNER
                        }
					}
				}
				FROM = { add_resistance = -3 }
            }
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				remove_from_array = { SOL_dispatched_mtf_state_decision_5_arr = FROM }
				FROM = {
					clr_state_flag = SOL_dispatched_mtf_state_decision_5
					create_unit = { division = "name = \"IST-9 'The Faithful'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					create_unit = { division = "name = \"IST-10 'Midnight Sun'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				has_country_flag = SOL_recall_pegasi_decision_in_progress_flag
			}
		}
	}
	SOL_recall_pegasi_decision = {
		icon = generic_prepare_civil_war
		allowed = {
			original_tag = EQS
		}
		
		visible = {
			check_variable = {
				var = SOL_mobile_task_force_deployed_var
				value = 1
				compare = greater_than_or_equals
			}
		}
		
		available = {
		}
		
		ai_will_do = {
			factor = 50
		}

		cost = 25
		
		days_remove = 5
		
		modifier = {
			command_power_gain_mult = -0.25
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_recall_pegasi_decision"
			custom_effect_tooltip = SOL_recall_pegasi_decision_effect_tt
			hidden_effect = {
				clr_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				delete_unit_template_and_units = {
					division_template = "Inquisitorial Strike Team"
				}
				division_template = {
					name = "Inquisitorial Strike Team"
					division_names_group = EQS_PAR_02
					is_locked = yes
					regiments = {
						pegasi = { x = 0 y = 0 }
						pegasi = { x = 0 y = 1 }
						pegasi = { x = 0 y = 2 }
						pegasi = { x = 0 y = 3 }
						pegasi = { x = 0 y = 4 }
						pegasi = { x = 1 y = 0 }
						pegasi = { x = 1 y = 1 }
						pegasi = { x = 1 y = 2 }
						pegasi = { x = 1 y = 3 }
						pegasi = { x = 1 y = 4 }
					}
					support = {
						unicorn_company = { x = 0 y = 0 }
						recon = { x = 0 y = 1 }
						signal_company = { x = 0 y = 2 }
						artillery = { x = 0 y = 3 }
					}
					priority = 2
				}
				set_variable = { SOL_mobile_task_force_deployed_var = 0 }
				set_variable = { SOL_mobile_task_force_in_reserve_var = 10 }
				every_state = {
					limit = {
						has_state_flag = SOL_has_already_dispatched_mtf_to_this_state
					}
					clr_state_flag = SOL_has_already_dispatched_mtf_to_this_state
					remove_from_array = { SOL_dispatched_mtf_state_decision_1_arr = FROM }
					remove_from_array = { SOL_dispatched_mtf_state_decision_2_arr = FROM }
					remove_from_array = { SOL_dispatched_mtf_state_decision_3_arr = FROM }
					remove_from_array = { SOL_dispatched_mtf_state_decision_4_arr = FROM }
					remove_from_array = { SOL_dispatched_mtf_state_decision_5_arr = FROM }
					clr_state_flag = SOL_dispatched_mtf_state_decision_1
					clr_state_flag = SOL_dispatched_mtf_state_decision_2
					clr_state_flag = SOL_dispatched_mtf_state_decision_3
					clr_state_flag = SOL_dispatched_mtf_state_decision_4
					clr_state_flag = SOL_dispatched_mtf_state_decision_5
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_recall_pegasi_decision"
			set_country_flag = SOL_recall_pegasi_decision_in_progress_flag
		}
	}
}

SOL_resistance_activity = {
	SOL_resistance_major_attack_1 = {
		icon = generic_ignite_civil_war
		priority = 100
		available = {
			hidden_trigger = { always = no }
			divisions_in_state = {
				size > 5
				state = 3
			}
			divisions_in_state = {
				size > 1
				state = 2
			}
			divisions_in_state = {
				size > 1
				state = 68
			}
			divisions_in_state = {
				size > 1
				state = 1
			}
			divisions_in_state = {
				size > 1
				state = 103
			}
			divisions_in_state = {
				size > 1
				state = 104
			}
			divisions_in_state = {
				size > 1
				state = 39
			}
			divisions_in_state = {
				size > 1
				state = 65
			}
		}

		highlight_state_targets = {
			state = 3
			state = 2
			state = 68
			state = 1
			state = 103
			state = 104
			state = 39
			state = 65
		}
		activation = { always = no }
		
		selectable_mission = no
		days_mission_timeout = SOL_resistance_major_attack_duration
		is_good = no
		fire_only_once = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_major_attack_1"
			effect_tooltip = {
				if = {
					limit = {
						divisions_in_state = {
							size > 5
							state = 3
						}
						divisions_in_state = {
							size > 1
							state = 2
						}
						divisions_in_state = {
							size > 1
							state = 68
						}
						divisions_in_state = {
							size > 1
							state = 1
						}
						divisions_in_state = {
							size > 1
							state = 103
						}
						divisions_in_state = {
							size > 1
							state = 104
						}
						divisions_in_state = {
							size > 1
							state = 39
						}
						divisions_in_state = {
							size > 1
							state = 65
						}
					}
					custom_effect_tooltip = SOL_resistance_major_attack_1_win_tt
				}
				else = {
					custom_effect_tooltip = SOL_resistance_major_attack_1_lose_tt
					add_political_power = -100
					add_stability = -0.05
					custom_effect_tooltip = paxsolaris_loyalty_decrease_5
					add_to_variable = { var = daybreaker_support value = -5 }
				}
			}
			hidden_effect = {
				if = {
					limit = {
						OR = { 
							AND = {
								divisions_in_state = {
									size > 5
									state = 3
								}
								divisions_in_state = {
									size > 1
									state = 2
								}
								divisions_in_state = {
									size > 1
									state = 68
								}
								divisions_in_state = {
									size > 1
									state = 1
								}
								divisions_in_state = {
									size > 1
									state = 103
								}
								divisions_in_state = {
									size > 1
									state = 104
								}
								divisions_in_state = {
									size > 1
									state = 39
								}
								divisions_in_state = {
									size > 1
									state = 65
								}
							}
							ROOT = { is_ai = yes }
						}
					}
					hidden_effect = {
						set_country_flag = major_attack_1_win
						clr_country_flag = major_attack_1_loss
					}
				}
				else = {
					add_political_power = -100
					add_stability = -0.5
					add_to_variable = { var = daybreaker_support value = -5 }
					hidden_effect = {
						set_country_flag = major_attack_1_loss
						clr_country_flag = major_attack_1_win
					}
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				SOL_calculate_leads_medium = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
	}
	SOL_resistance_major_attack_1_surrounding_troops = {
		icon = generic_ignite_civil_war
		priority = 99
		available = {
			hidden_trigger = { always = no }
			divisions_in_state = {
				size > 2
				state = 3
			}
			divisions_in_state = {
				size > 0
				state = 2
			}
			divisions_in_state = {
				size > 0
				state = 68
			}
			divisions_in_state = {
				size > 0
				state = 1
			}
			divisions_in_state = {
				size > 0
				state = 103
			}
			divisions_in_state = {
				size > 0
				state = 104
			}
			divisions_in_state = {
				size > 0
				state = 39
			}
			divisions_in_state = {
				size > 0
				state = 65
			}
		}

		highlight_state_targets = {
			state = 3
			state = 2
			state = 68
			state = 1
			state = 103
			state = 104
			state = 39
			state = 65
		}
		activation = { always = no }
		
		selectable_mission = no
		days_mission_timeout = SOL_resistance_major_attack_duration
		is_good = no
		fire_only_once = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_major_attack_1_surrounding_troops"
			effect_tooltip = {
				if = {
					limit = {
						divisions_in_state = {
							size > 2
							state = 3
						}
						divisions_in_state = {
							size > 0
							state = 2
						}
						divisions_in_state = {
							size > 0
							state = 68
						}
						divisions_in_state = {
							size > 0
							state = 1
						}
						divisions_in_state = {
							size > 0
							state = 103
						}
						divisions_in_state = {
							size > 0
							state = 104
						}
						divisions_in_state = {
							size > 0
							state = 39
						}
						divisions_in_state = {
							size > 0
							state = 65
						}
					}
					custom_effect_tooltip = SOL_resistance_major_attack_1_win_tt
				}
				else = {
					custom_effect_tooltip = SOL_resistance_major_attack_1_lose_tt
					add_political_power = -100
					add_stability = -0.05
					custom_effect_tooltip = paxsolaris_loyalty_decrease_5
					add_to_variable = { var = daybreaker_support value = -5 }
				}
			}
			hidden_effect = {
				if = {
					limit = {
						OR = { 
							AND = {
								divisions_in_state = {
									size > 2
									state = 3
								}
								divisions_in_state = {
									size > 0
									state = 2
								}
								divisions_in_state = {
									size > 0
									state = 68
								}
								divisions_in_state = {
									size > 0
									state = 1
								}
								divisions_in_state = {
									size > 0
									state = 103
								}
								divisions_in_state = {
									size > 0
									state = 104
								}
								divisions_in_state = {
									size > 0
									state = 39
								}
								divisions_in_state = {
									size > 0
									state = 65
								}
							}
							ROOT = { is_ai = yes }
						}
					}
					hidden_effect = {
						set_country_flag = major_attack_1_win
						clr_country_flag = major_attack_1_loss
					}
				}
				else = {
					add_political_power = -100
					add_stability = -0.5
					add_to_variable = { var = daybreaker_support value = -5 }
					hidden_effect = {
						set_country_flag = major_attack_1_loss
						clr_country_flag = major_attack_1_win
					}
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				SOL_calculate_leads_medium = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
	}
	SOL_siege_of_whinnyapolis = {
		icon = rifles_whinnyapolis
		priority = 98
		available = {		
			divisions_in_state = {
				size > 5
				state = 70
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = 70
		}
		
		allowed = {
			always = no
		}
		
		is_good = no
		days_mission_timeout = 4.9
		selectable_mission = yes
		fire_only_once = no
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_siege_of_whinnyapolis"
			custom_effect_tooltip = paxsolaris_resistance_strength_decrease
			custom_effect_tooltip = paxsolaris_leads_increase_raid
			add_to_variable = { var = solar_resistance_actions_progress value = -1 }
			70 = { clr_state_flag = SOL_ongoing_uprising } 
			hidden_effect = { SOL_calculate_loyalty = yes }
			hidden_effect = {
				country_event = {
					id = paxsolaris.213
					days = 10
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_siege_of_whinnyapolis"
			add_to_variable = { var = solar_resistance_actions_progress value = 1 }
			custom_effect_tooltip = paxsolaris_resistance_strength_increase
			hidden_effect = { SOL_calculate_loyalty = yes }
			add_to_variable = { var = SOL_siege_of_whinnyapolis_counter value = 1 }
			hidden_effect = {
				if = { 
					limit = { check_variable = { SOL_siege_of_whinnyapolis_counter < 5 } }
					activate_mission = SOL_siege_of_whinnyapolis
				}
				else = {
					70 = { clr_state_flag = SOL_ongoing_uprising } #Basically a mercy rule so the player isn't absolutely fucked
					country_event = {
						id = paxsolaris.213
						days = 10
					}
				}
			}
			70 = {
				if = {
					limit = { 
						non_damaged_building_level = {
							building = infrastructure
							level > 2		
						}
					}
					damage_building = {
						type = infrastructure
						damage = 2
					}
				}
				if = {
					limit = { 
						non_damaged_building_level = {
							building = arms_factory
							level > 0		
						}
					}
					damage_building = {
						type = arms_factory
						damage = 1
					}
				}
				if = {
					limit = { 
						non_damaged_building_level = {
							building = industrial_complex
							level > 0		
						}
					}
					damage_building = {
						type = industrial_complex
						damage = 1
					}
				}
			}
		}
	}
	SOL_resistance_attack = {
		icon = GFX_decision_resistance_attack
		priority = 50
		available = {		
			hidden_trigger = { always = no }
			if = {
				limit = { has_country_flag = first_refine_completed }
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_1 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_1 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_1 = { meets_division_requirements_attack = yes }
				}
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_2 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_2 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_2 = { meets_division_requirements_attack = yes }
				}
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_3 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_3 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_3 = { meets_division_requirements_attack = yes }
				}
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_4 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_4 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_4 = { meets_division_requirements_attack = yes }
				}
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_5 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_5 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_5 = { meets_division_requirements_attack = yes }
				}
				if = {
					limit = { 
						OR = {
							event_target:SOL_resistance_attack_target_6 = { has_state_flag = resistance_attack_dummy_target }
							event_target:SOL_resistance_attack_target_6 = { has_state_flag = resistance_attack_true_target }
						}
						event_target:SOL_resistance_attack_target_6 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					event_target:SOL_resistance_attack_target_6 = { meets_division_requirements_attack = yes }
				}
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = EQS.SOL_resistance_attack_target_array^0
			state = EQS.SOL_resistance_attack_target_array^1
			state = EQS.SOL_resistance_attack_target_array^2
			state = EQS.SOL_resistance_attack_target_array^3
			state = EQS.SOL_resistance_attack_target_array^4
			state = EQS.SOL_resistance_attack_target_array^5
		}
		
		activation = {
			always = no
		}
		
		is_good = no
		days_mission_timeout = resistance_attack_mission_dur
		selectable_mission = no
		fire_only_once = no

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_attack"
			if = {
				limit = {
					has_country_flag = first_refine_completed
				}
				custom_effect_tooltip = SOL_resistance_attack_outcome_tt
			}
			else = {
				custom_effect_tooltip = SOL_resistance_attack_outcome_tt_none
			}
			hidden_effect = {
				if = { 
					limit = {
						event_target:SOL_resistance_attack_target_true = { meets_division_requirements_attack = yes }
					}
					country_event = {
						id = paxsolaris.80
						hours = 1
					}
				}
				else = {
					country_event = {
						id = paxsolaris.81
						hours = 1
					}
				}
				every_state ={
					clr_state_flag = resistance_attack_dummy_target
				}
				event_target:SOL_resistance_attack_target_true = { 
					clr_state_flag = resistance_attack_true_target
				}
				clear_array = EQS.SOL_resistance_attack_target_array
			}
		}
	}
	SOL_refine_resistance_attack = {
		icon = GFX_decision_resistance_attack_counter
		priority = 49
		available = {
			hidden_trigger = {
				has_active_mission = SOL_resistance_attack
			}
		}
		activation = {
			has_active_mission = SOL_resistance_attack
		}
		visible = {
			has_country_leader = { ruling_only = yes name = "Daybreaker" }
			hidden_trigger = {
				has_active_mission = SOL_resistance_attack
				OR = {
					NOT = { has_country_flag = first_refine_completed }
					any_state = {
						has_state_flag = resistance_attack_dummy_target
					}
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
		custom_cost_trigger = {
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_leads_10
		fire_only_once = no
		fixed_random_seed = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_resistance_attack"
			if = {
				limit = { NOT = { has_country_flag = first_refine_completed } }
				hidden_effect = { SOL_resistance_attack_first_refine = yes }
				custom_effect_tooltip = refine_resistance_attack_decision_outcome_first
				set_country_flag = first_refine_completed
			}
			else = {
				hidden_effect = {
					subtract_from_variable = { 
						var = SOL_lead_variable
						value = 10
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
						remove_from_array = { EQS.SOL_resistance_attack_target_array = THIS }
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
						remove_from_array = { EQS.SOL_resistance_attack_target_array = THIS }
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
						remove_from_array = { EQS.SOL_resistance_attack_target_array = THIS }
					}
				}
				custom_effect_tooltip = refine_resistance_attack_decision_outcome
			}
			
		}
	}

	SOL_state_uprising_decision = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision"
			custom_effect_tooltip = SOL_state_uprising_pacified
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
					
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_1 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_1 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_1
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_1"
			custom_effect_tooltip = SOL_state_uprising_pacified_1
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_1 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_1"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_1
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_1
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_1 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_2 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_2 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_2
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_2"
			custom_effect_tooltip = SOL_state_uprising_pacified_2
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_2 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_2"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_2
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_2
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_2 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_3 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_3 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_3
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_3"
			custom_effect_tooltip = SOL_state_uprising_pacified_3
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_3 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_3"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_3
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_3
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_3 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_4 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_4 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_4
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_4"
			custom_effect_tooltip = SOL_state_uprising_pacified_4
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_4 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_4"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_4
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_4
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_4 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_5 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_5 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_5
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_5"
			custom_effect_tooltip = SOL_state_uprising_pacified_5
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_5 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_5"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_5
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_5
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_5 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_state_uprising_decision_6 = {
		icon = generic_ignite_civil_war
		
		available = {
			event_target:SOL_uprising_in_state_event_target_6 = {
				is_controlled_by = ROOT
				meets_division_requirements_uprising = yes
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_state_targets = {
			state = event_target:SOL_uprising_in_state_event_target_6
		}
		
		allowed = {
			always = no
		}
		
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = no
		fire_only_once = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision_6"
			custom_effect_tooltip = SOL_state_uprising_pacified_6
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_6 = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision_6"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state_6
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = event_target:SOL_uprising_in_state_event_target_6
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				event_target:SOL_uprising_in_state_event_target_6 = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							EQS = { has_tech = CHN_armoured_trains }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}
				} 
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
}

SOL_spells_cancel = {
	SOL_cancel_heatwave = {
		icon = GFX_daybreaker_cat_blue_small
		
		allowed = {
			original_tag = EQS
		}
		
		visible = { 
			any_state = {
				has_state_flag = SOL_state_has_spell_heatwave
			}
		}

		available = { 
			custom_trigger_tooltip = {
				tooltip = SOL_cancel_heatwave_tt
				any_state = {
					has_state_flag = SOL_state_has_spell_heatwave
				}
			}
		}
		complete_effect = {
			every_state = {
				limit = {
					has_state_flag = SOL_state_has_spell_heatwave
				}
				custom_effect_tooltip = SOL_remove_heatwave_tt
				hidden_effect = {
					clr_state_flag = SOL_state_has_spell_heatwave
					remove_dynamic_modifier = { modifier = SOL_dynamic_heatwave_effect }
					remove_province_modifier = {
						static_modifiers = {
							SOL_heatwave_effect
						}
						province = {
							all_provinces = yes
						}
					}
				}
			}
			EQS = {
				set_variable = { var = sol_heatwave_number value = 0 }
				SOL_calculate_magic = yes
			}
		}
	}
	SOL_cancel_blessing = {
		icon = GFX_daybreaker_cat_blue_small
		
		allowed = {
			original_tag = EQS
		}
		
		visible = { 
			any_country = {
				has_idea = SOL_blessing_of_day_idea
			}
		}

		available = { 
			any_country = {
				has_idea = SOL_blessing_of_day_idea
			}
		}
		complete_effect = {
			every_country = {
				limit = {
					has_idea = SOL_blessing_of_day_idea
				}
				remove_ideas = SOL_blessing_of_day_idea
			}
			EQS = {
				set_variable = { var = sol_blessing_number value = 0 }
				SOL_calculate_magic = yes
			}
		}
	}
	SOL_cancel_curse = {
		icon = GFX_daybreaker_cat_blue_small
		
		allowed = {
			original_tag = EQS
		}
		
		visible = { 
			any_country = {
				has_idea = SOL_curse_of_day_idea
			}
		}

		available = { 
			any_country = {
				has_idea = SOL_curse_of_day_idea
			}
		}
		complete_effect = {
			every_country = {
				limit = {
					has_idea = SOL_curse_of_day_idea
				}
				remove_ideas = SOL_curse_of_day_idea
			}
			EQS = {
				set_variable = { var = sol_curse_number value = 0 }
				SOL_calculate_magic = yes
			}
		}
	}
}