SOL_securing_our_domain = {
	SOL_attack_buf = {

		icon = GFX_decision_sol_border_war

		allowed = { always = no } #Activated from effect

		available = {
			var:BUF.SOL_attacker_state_vs_@ROOT = {
				is_fully_controlled_by = EQS
			}
			divisions_in_border_state = {
				state = var:BUF.SOL_attacker_state_vs_@ROOT
				border_state = var:BUF.SOL_defender_state_vs_@ROOT
				size > 0
			}
			custom_trigger_tooltip = {
				tooltip = sol_border_war_available
				BUF = { can_have_border_war_with_ROOT = yes }
			}
		}
		visible = {
			NOT = { 
                has_war_with = BUF
                is_subject_of = BUF #LOL, as if
            }
		}
		highlight_states = {
			highlight_state_targets = {
				state = var:BUF.SOL_attacker_state_vs_@ROOT
			}
		}

		ai_will_do = {
			base = 100
		}

		cancel_trigger = {
			hidden_trigger = {
				BUF = { can_have_border_war_with_ROOT = no }
			}
		}

		fire_only_once = yes 

		selectable_mission = yes

		days_mission_timeout = 90

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_attack_buf"
			custom_effect_tooltip = SOL_attack_buf_tt
			add_to_variable = { var = solar_resistance_actions_progress value = 1 }
			add_to_variable = { var = daybreaker_support value = -5 }
			add_political_power = -100
			add_stability = -0.05
			hidden_effect = {
				SOL_calculate_loyalty = yes
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf }
				BUF = {
					clear_variable = SOL_attacker_state_vs_@ROOT
					clear_variable = SOL_defender_state_vs_@ROOT
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_attack_buf"
			start_border_war = {
				change_state_after_war = no
				attacker = {
					state = var:BUF.SOL_attacker_state_vs_@ROOT
					num_provinces = 4
					on_win = paxsolaris.23
					on_lose = paxsolaris.24
					on_cancel = paxsolaris.24
				}

				defender = {
					state = var:BUF.SOL_defender_state_vs_@ROOT
					num_provinces = 4
					on_win = paxsolaris.25
					on_cancel = paxsolaris.25
				}
			}
			hidden_effect = {
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf }
				activate_targeted_decision = { target = BUF decision = SOL_attack_buf_in_progress }
			}
		}
	}
	SOL_attack_buf_in_progress = {
		icon = GFX_decision_sol_border_war
		allowed = { always = no }
		fire_only_once = yes
		selectable_mission = no
		ai_will_do = {
			base = 50
		}
		available = {		
			NOT = { has_border_war_with = BUF }
		}
		highlight_states = {
			highlight_state_targets = {
				state = var:BUF.attacker_state_vs_@ROOT
			}
		}
		cancel_trigger = {
			hidden_trigger = {
				BUF = { can_have_border_war_with_ROOT = no }
			}
		}
		days_mission_timeout = 180
		days_remove = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_attack_buf_in_progress"
			hidden_effect = {
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf_in_progress }
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Mission cancel SOL_attack_buf_in_progress"
			cancel_border_war = {
				dont_fire_events = no
				attacker = var:BUF.SOL_attacker_state_vs_@ROOT
				defender = var:BUF.SOL_defender_state_vs_@ROOT
			}
			hidden_effect = {
				BUF = {
					clear_variable = SOL_attacker_state_vs_@ROOT
					clear_variable = SOL_defender_state_vs_@ROOT
				}
				BUF = { clr_country_flag = target_of_coalition_raid }
				remove_targeted_decision = { target = BUF decision = SOL_attack_buf_in_progress }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Mission timeout SOL_attack_buf_in_progress"
			if = {
				limit = {
					BUF = { divisions_in_state = { state = var:BUF.defender_state_vs_@ROOT size > 0 } }
				}
				cancel_border_war = {
				dont_fire_events = no
					attacker = var:BUF.SOL_attacker_state_vs_@ROOT
					defender = var:BUF.SOL_defender_state_vs_@ROOT
				}
				hidden_effect = {
					BUF = {
						clear_variable = SOL_attacker_state_vs_@ROOT
						clear_variable = SOL_defender_state_vs_@ROOT
					}
					BUF = { clr_country_flag = target_of_coalition_raid }
					remove_targeted_decision = { target = BUF decision = SOL_attack_buf_in_progress }
				}
			}
			else = {
				#If the Buffalo have no troops, automatic Daybreaker victory
				finalize_border_war = {
					attacker_win = yes
					attacker = var:BUF.SOL_attacker_state_vs_@ROOT
					defender = var:BUF.SOL_defender_state_vs_@ROOT
				}
			}
		}
	}
	SOL_strike_foe = {
		icon = GFX_decision_mark_states
		priority = 20
		available = {
			custom_trigger_tooltip = {
				tooltip = SOL_not_already_preparing_invasion
				NOT = { has_country_flag = SOL_preparing_to_attack_country }
			}
		}
		target_trigger = {
			FROM = {
				has_country_flag = SOL_annexation_target
				exists = yes
				NOT = {
					is_subject_of = ROOT
					has_war_with = ROOT 
					is_in_faction_with = ROOT
				}
			}
		}
		targets_dynamic = yes
		cancel_trigger = {
			hidden_trigger = {
				FROM = {
					OR = {
						exists = no
						is_subject_of = ROOT
						has_war_with = ROOT 
						is_in_faction_with = ROOT
					}
				}
			}
		}
		visible = {
			hidden_trigger = {
				FROM = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT 
						is_in_faction_with = ROOT
					}
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_strike_foe target: [From.GetName]"
			hidden_effect = {
				FROM = {
	                add_ai_strategy = {
	                    type = prepare_for_war
	                    id = ROOT
	                    value = 1000
	                }
	                save_global_event_target_as = SOL_strike_foe_target
	            }
				set_country_flag = SOL_preparing_to_attack_country 
				if = {
				    limit = {
					    FROM = {
						    is_ai = no
						}
					}
					country_event = { 
						id = paxsolaris.132
					}
				} 
			}
		}
		allowed = {
			tag = EQS
		}
		fire_only_once = no
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 0
				OR = {
					has_idea = SOL_military_desertion_5
					has_idea = SOL_military_desertion_4
					has_idea = SOL_military_desertion_3
				}
			}
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 0
				FROM = { is_on_equestrian_continent = yes }
				NOT = { is_neighbor_of = FROM }
			}
		}
		cost = 20
		days_remove = 30
		war_with_target_on_remove = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_strike_foe target: [From.GetName]"
			hidden_effect = {
				FROM = {
	                add_ai_strategy = {
	                    type = prepare_for_war
	                    id = ROOT
	                    value = -1000
	                }
	                clear_global_event_target = SOL_strike_foe_target
	            }
				clr_country_flag = SOL_preparing_to_attack_country
				create_wargoal = { 
					type = annex_everything 
					target = FROM
				}
			}
			declare_war_on = {
                target = FROM
                type = annex_everything
            }
		}
	}
	buffalo_oil_drilling = {
		icon = oil
		allowed = {
		}
		available = {
			num_of_civilian_factories_available_for_projects > 4
			custom_trigger_tooltip = {
				tooltip = SOL_BUF_states_tooltip
				NOT = {
					any_state = {
						OR = {
							state = 78
							state = 89
						}
						NOT = { is_owned_and_controlled_by = EQS }
					}
				}
			}
		}
		highlight_states = {
			highlight_state_targets = {
				state = 78
				state = 89
			}
		}
		visible = {
			has_country_flag = SOL_unlocked_buffalo_oil_drilling
			hidden_trigger = {
				89 = { has_state_flag = SOL_buffalo_state }
				78 = { has_state_flag = SOL_buffalo_state }
			}
			NOT = {
				any_state = {
					OR = {
						state = 78
						state = 89
					}
					NOT = { is_owned_and_controlled_by = EQS }
				}
			}
			89 = {
				NOT = {
					has_state_flag = buffalo_oil_drilling
				}
			}
		}
		fire_only_once = yes
		cost = 25
		days_remove = 70
		modifier = {
			civilian_factory_use = 10
		}
		ai_will_do = {
			factor = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove buffalo_oil_drilling"
			89 = { set_state_flag = buffalo_oil_drilling }
			hidden_effect = {
				set_victory_points = {
					province = 3701
					value = 3
				}
				set_province_name = {
				    id = 3701
				    name = "Shaleton"
				}
				78 = {
					add_building_construction = {
						type = supply_node
						level = 1
						instant_build = yes
						province = 3701
					}
				}
			}
			hidden_effect = {
				build_railway = {
					level = 1
					start_province = 11037
					target_province = 6415
					build_only_on_allied = yes
				}
				build_railway = {
					level = 1
					start_province = 6415
					target_province = 11580
					build_only_on_allied = yes
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 1
					start_province = 11037
					target_province = 11580
					build_only_on_allied = yes
				}
			}
			hidden_effect = {
				build_railway = {
					level = 1
					start_province = 3701
					target_province = 6706
					build_only_on_allied = yes
				}
				build_railway = {
					level = 1
					start_province = 6706
					target_province = 11580
					build_only_on_allied = yes
				}
			}
			effect_tooltip = {
				build_railway = {
					level = 1
					start_province = 3701
					target_province = 11580
					build_only_on_allied = yes
				}
			}
			89 = {
				add_resource = {
					type = oil
					amount = 19
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 180 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 180000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			78 = {
				add_resource = {
					type = oil
					amount = 24
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 205 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 205000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			if = {
				limit = { has_variable = sol_display_state_decisions }
				add_to_variable = { sol_display_state_decisions = 1 }
			}
			country_event = { id = paxsolaris.62 hours = 6 }
		}
	}
	dragon_crystal_mining = {
		icon = crystals
		allowed = {
		}
		available = {
			num_of_civilian_factories_available_for_projects > 9
			custom_trigger_tooltip = {
				tooltip = SOL_DRG_states_tooltip
				NOT = {
					any_state = {
						OR = {
							state = 17
							state = 6
							state = 4
							state = 37
							state = 7
							state = 9
							state = 8
							state = 10
							state = 328
						}
						NOT = { is_owned_and_controlled_by = EQS }
					}
				}
			}
		}
		highlight_states = {
			highlight_state_targets = {
				state = 6
				state = 7
				state = 9
				state = 8
			}
		}
		visible = {
			has_country_flag = SOL_unlocked_dragon_crystal_mining
			NOT = {
				any_state = {
					OR = {
						state = 17
						state = 6
						state = 4
						state = 37
						state = 7
						state = 9
						state = 8
						state = 10
						state = 328
					}
					NOT = { is_controlled_by = EQS }
				}
			}
			6 = {
				NOT = {
					has_state_flag = dragon_crystal_mining
				}
			}
		}
		fire_only_once = yes
		cost = 25
		days_remove = 70
		modifier = {
			civilian_factory_use = 20
		}
		ai_will_do = {
			factor = 100
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove dragon_crystal_mining"
			6 = { set_state_flag = dragon_crystal_mining }
			hidden_effect = {
				set_victory_points = {
					province = 11675
					value = 3
				}
				set_province_name = {
				    id = 11675
				    name = "Cresent Bay"
				}
				6 = {
					add_building_construction = {
						type = naval_base
						level = 3
						instant_build = yes
						province = 11675
					}
					add_building_construction = {
						type = supply_node
						level = 1
						instant_build = yes
						province = 11675
					}
				}
			}
			6 = {
				add_resource = {
					type = crystals
					amount = 12
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 120 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 120000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			7 = {
				add_resource = {
					type = crystals
					amount = 8
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 80 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 80000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			8 = {
				add_resource = {
					type = crystals
					amount = 10
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 100 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 100000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			9 = {
				add_resource = {
					type = crystals
					amount = 10
				}
				set_temp_variable = { var = sol_pony_population_change_temp value = 90 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 90000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			10 = {
				set_temp_variable = { var = sol_pony_population_change_temp value = 20 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 20000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			328 = {
				set_temp_variable = { var = sol_pony_population_change_temp value = 10 }
				hidden_effect = { SOL_pony_population_recalculate = yes }
				add_manpower = 10000
				hidden_effect = { 
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_settler_colonies } }
						remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
					if = {
						limit = { has_dynamic_modifier = { modifier = SOL_pony_settlement } }
						remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					}
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
				}
				custom_effect_tooltip = SOL_extensive_pony_settlement_tt
			}
			if = {
				limit = { has_variable = sol_display_state_decisions }
				add_to_variable = { sol_display_state_decisions = 1 }
			}
			country_event = { id = paxsolaris.91 hours = 6 }
		}
	}
	SOL_unlock_solis_obterere = {
		icon = GFX_decision_solis_obterere
		
		ai_will_do = {
			base = 30
		}
		
		visible = { has_completed_focus = SOL_Imperial_Corporation_Council }
		
		allowed = {
			tag = EQS
		}
		available = { 
			custom_trigger_tooltip = {
				tooltip = SOL_no_ongoing_merges
				NOT = { has_country_flag = SOL_ongoing_merge }
			}
		}
		fire_only_once = yes
		days_remove = 50
		modifier = {
			political_power_cost =0.5
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_unlock_solis_obterere"
			set_country_flag = SOL_ongoing_merge 
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_unlock_solis_obterere"
			clr_country_flag = SOL_ongoing_merge
			set_country_flag = sol_unlocked_solis_obterere
			custom_effect_tooltip = available_designer
			show_ideas_tooltip = solis_obterere
		}
	}
	SOL_unlock_six_diamonds = {
		icon = GFX_decision_six_diamonds
		
		ai_will_do = {
			base = 30
		}
		
		visible = { has_completed_focus = SOL_Imperial_Corporation_Council }
		
		allowed = {
			tag = EQS
		}
		available = { 
			custom_trigger_tooltip = {
				tooltip = SOL_no_ongoing_merges
				NOT = { has_country_flag = SOL_ongoing_merge }
			}
		}
		fire_only_once = yes
		days_remove = 50
		modifier = {
			political_power_cost = 0.5
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_unlock_six_diamonds"
			set_country_flag = SOL_ongoing_merge 
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_unlock_six_diamonds"
			clr_country_flag = SOL_ongoing_merge
			set_country_flag = sol_unlocked_six_diamonds
			custom_effect_tooltip = available_designer
			show_ideas_tooltip = six_diamonds
		}
	}
	SOL_unlock_solar_naval_arsenal = {
		icon = GFX_decision_solar_naval_arsenal
		
		ai_will_do = {
			base = 30
		}
		
		visible = { has_completed_focus = SOL_Imperial_Corporation_Council }
		
		allowed = {
			tag = EQS
		}
		available = { 
			custom_trigger_tooltip = {
				tooltip = SOL_no_ongoing_merges
				NOT = { has_country_flag = SOL_ongoing_merge }
			}
		}
		fire_only_once = yes
		days_remove = 50
		modifier = {
			political_power_cost = 0.5
		}
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_unlock_solar_naval_arsenal"
			set_country_flag = SOL_ongoing_merge 
		}
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_unlock_solar_naval_arsenal"
			clr_country_flag = SOL_ongoing_merge
			set_country_flag = sol_unlocked_solar_naval_arsenal
			custom_effect_tooltip = available_designer
			show_ideas_tooltip = solar_naval_arsenal
		}
	}
	SOL_automatic_upgrading_enable = {
		icon = GFX_SOL_settler_colonies
		allowed = { original_tag = EQS }
		visible = {
			hidden_trigger = {
				NOT = { has_country_flag = SOL_automatic_upgrading_active }
				has_country_flag = SOL_unlocked_develop_colonies_ability_flag
			}
		}
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_automatic_upgrading_enable"
			set_country_flag = SOL_automatic_upgrading_active
			custom_effect_tooltip = SOL_automatic_upgrading_enable_tt
		}
		fire_only_once = no
	}
	SOL_automatic_upgrading_disable = {
		icon = GFX_decision_mark_states
		allowed = { original_tag = EQS }
		visible = {
			hidden_trigger = {
				has_country_flag = SOL_automatic_upgrading_active
				has_country_flag = SOL_unlocked_develop_colonies_ability_flag
			}
		}
		ai_will_do = {
			factor = 0
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_automatic_upgrading_disable"
			clr_country_flag = SOL_automatic_upgrading_active
			custom_effect_tooltip = SOL_automatic_upgrading_disable_tt
		}
		fire_only_once = no
	}
	SOL_develop_settler_colony_decision = {
		icon = GFX_SOL_settler_colonies
		allowed = { always = no }
		available = {
			hidden_trigger = { 
				always = no
			}
		}
		cancel_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = EQS }
				hidden_trigger = {
					NOT = {
						is_core_of = EQS
						has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
						has_dynamic_modifier = { modifier = SOL_pony_settlement }
						has_dynamic_modifier = { modifier = SOL_settler_colonies }
					}
				}
			}
		}
		fire_only_once = yes
		selectable_mission = no
		days_mission_timeout = 1
		is_good = yes
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_develop_settler_colony_decision target: [From.GetName]"
			hidden_effect = {
				FROM = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_develop_settler_colony_decision target: [From.GetName]"
			FROM = {
				hidden_effect = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
					add_dynamic_modifier = { modifier = SOL_settler_colonies }
					
					#Some may call this unecessary. To them I say fuck you. 
					set_temp_variable = { var = sol_numerator value = state_population_k }
					multiply_temp_variable = { var = sol_numerator value = 20 }
					set_temp_variable = { var = sol_denominator value = 0.98 }
					subtract_from_temp_variable = { var = sol_denominator value = sol_pony_percentage }
					divide_temp_variable = { var = sol_numerator value = sol_denominator }
					round_temp_variable = sol_numerator
					add_manpower = var:sol_numerator
					add_to_variable = { var = sol_pony_percentage value = 0.02 }
				}
				custom_effect_tooltip = SOL_develop_settler_colony_decision_tt
			}
			if = {
				limit = { has_variable = sol_display_state_decisions }
				add_to_variable = { sol_display_state_decisions = 1 }
			}
		}
	}
	SOL_upgrade_settler_colony_decision_1 = {
		icon = GFX_SOL_settler_colonies
		allowed = { always = no }
		available = {
			hidden_trigger = { 
				always = no
			}
		}
		cancel_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = EQS }
				hidden_trigger = {
					NOT = {
						is_core_of = EQS
						has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
					}
				}
			}
		}
		fire_only_once = yes
		selectable_mission = no
		days_mission_timeout = 1
		is_good = yes
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_upgrade_settler_colony_decision target: [From.GetName]"
			hidden_effect = {
				FROM = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_upgrade_settler_colony_decision target: [From.GetName]"
			FROM = {
				hidden_effect = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
				}
				hidden_effect = {
					remove_dynamic_modifier = { modifier = SOL_settler_colonies }
					add_dynamic_modifier = { modifier = SOL_pony_settlement }
				}
				custom_effect_tooltip = SOL_upgrade_settler_colony_pony_settlement_tt
			}
			if = {
				limit = { has_variable = sol_display_state_decisions }
				add_to_variable = { sol_display_state_decisions = 1 }
			}
		}
	}
	SOL_upgrade_settler_colony_decision_2 = {
		icon = GFX_SOL_settler_colonies
		allowed = { always = no }
		available = {
			hidden_trigger = { 
				always = no
			}
		}
		cancel_trigger = {
			FROM = {
				NOT = { is_owned_and_controlled_by = EQS }
				hidden_trigger = {
					NOT = {
						is_core_of = EQS
						has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
					}
				}
			}
		}
		fire_only_once = yes
		selectable_mission = no
		days_mission_timeout = 1
		is_good = yes
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_upgrade_settler_colony_decision target: [From.GetName]"
			hidden_effect = {
				FROM = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_upgrade_settler_colony_decision target: [From.GetName]"
			FROM = {
				hidden_effect = {
					subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_develop_settler_colony_civ_fac_use }
					clear_variable = SOL_develop_settler_colony_civ_fac_use
				}
				hidden_effect = {
					remove_dynamic_modifier = { modifier = SOL_pony_settlement }
					add_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }

				}
				custom_effect_tooltip = SOL_upgrade_settler_colony_extensive_pony_settlement_tt
				if = {
					limit = { has_state_flag = SOL_completed_genocide }
					add_core_of = EQS
				}
			}
			if = {
				limit = { has_variable = sol_display_state_decisions }
				add_to_variable = { sol_display_state_decisions = 1 }
			}
		}
	}
}

SOL_resistance_menu = {
	SOL_public_measures_improvement = { 
		icon = GFX_decision_daybreaker_support
		priority = 100
		available = {
			if = {
				limit = { check_variable = { solar_civilian_support = 5 } }
				custom_trigger_tooltip = {
					tooltip = supportmeasuresmax
					NOT = { check_variable = { solar_civilian_support = 5 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = civilianmeasurescomplete
					check_variable = { solar_civilian_measures_progress > 4 }
				}
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_public_measures_improvement"
			add_to_variable = { var = solar_civilian_measures_progress value = -5 }
		}

		days_remove = 20

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_public_measures_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_civilian_measures value = 1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_civilian_support = 5 } } }
				custom_effect_tooltip = civilianmeasuresupgrade
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOL_public_hostility_5
						add_idea = SOL_public_hostility_4
					}
				}
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_military_measures_improvement = { 
		icon = GFX_decision_daybreaker_military_support
		priority = 99
		available = {
			if = {
				limit = { check_variable = { solar_military_support = 5 } }
				custom_trigger_tooltip = {
					tooltip = supportmeasuresmax
					NOT = { check_variable = { solar_military_support = 5 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = militarymeasurescomplete
					check_variable = { solar_military_measures_progress > 4 }
				}
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_military_measures_improvement"
			add_to_variable = { var = solar_military_measures_progress value = -5 }
		}

		days_remove = 20

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_military_measures_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_military_measures value = 1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_military_support = 5 } } }
				custom_effect_tooltip = militarymeasuresupgrade
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOL_military_desertion_5
						add_idea = SOL_military_desertion_4
					}
				}
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_resistance_suppression_improvement = {
		icon = GFX_decision_daybreaker_resistance_suppression
		priority = 98
		available = {
			if = {
				limit = { check_variable = { solar_resistance_strength = 0 } }
				custom_trigger_tooltip = {
					tooltip = suppressionmeasuresmax
					NOT = { check_variable = { solar_resistance_strength = 0 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = resistancesuppressioncomplete
					check_variable = { solar_resistance_suppression_progress > 4 }
				}
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_suppression_improvement"
			add_to_variable = { var = solar_resistance_suppression_progress value = -5 }
		}

		days_remove = 20

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_suppression_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_resistance_suppression value = -1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_resistance_strength = 0 } } }
				custom_effect_tooltip = resistancesuppressionupgrade
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_resistance_broadcast_suppression_improvement = { 
		icon = GFX_decision_daybreaker_outreach
		priority = 97
		available = {
			if = {
				limit = { check_variable = { solar_resistance_outreach_strength = 0 } }
				custom_trigger_tooltip = {
					tooltip = suppressionmeasuresmax
					NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
				}
			}
			else = {
				custom_trigger_tooltip = {
					tooltip = resistanceoutreachsuppressioncomplete
					check_variable = { solar_resistance_outreach_suppression_progress > 4 }
				}
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_outreach_suppression_improvement"
			add_to_variable = { var = solar_resistance_outreach_suppression_progress value = -5 }
		}

		days_remove = 20

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_outreach_suppression_improvement"
			hidden_effect = {
				add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
			}
			if = {
				limit = { NOT = { check_variable = { solar_resistance_outreach_strength = 0 } } }
				custom_effect_tooltip = resistanceoutreachsuppressionupgrade
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_harmonist_demands = { 
		icon = GFX_decision_rifles_manehattan
		priority = 20
		ai_will_do = {
			factor = 0
		}
		allowed = { always = no }
		available = {
			hidden_trigger = { always = no }
		}
		is_good = no
		days_mission_timeout = 10
		selectable_mission = no
		fire_only_once = yes
		timeout_effect = {
			hidden_effect = {
				if = {
					limit = { check_variable = { harmonist_demand_counter = 0 } }
					if = {
						limit = {
							OR = {
								has_idea = eqs_war_law_extreme
								has_idea = eqs_war_admin_extreme
								has_idea = eqs_war_law
								has_idea = eqs_war_admin
							}
						}
						country_event = {
							id = paxsolaris.120
						}
					}
					else = {
						add_to_variable = { var = harmonist_demand_counter value = 1 }
					}
				}
				if = {
					limit = { check_variable = { harmonist_demand_counter = 1 } }
					if = {
						limit = {
							OR = {
								has_idea = limited_conscription
								has_idea = extensive_conscription
								has_idea = service_by_requirement
								has_idea = all_adults_serve
								has_idea = scraping_the_barrel
							}
						}
						country_event = {
							id = paxsolaris.121
						}
					}
					else = {
						add_to_variable = { var = harmonist_demand_counter value = 1 }
					}
				}
				if = {
					limit = { check_variable = { harmonist_demand_counter = 2 } }
					if = {
						limit = {
							OR = {
								has_idea = SOL_a_plan_for_equestria
								has_idea = eqs_media_control
							}
						}
						country_event = {
							id = paxsolaris.122
						}
					}
					else = {
						add_to_variable = { var = harmonist_demand_counter value = 1 }
					}
				}
				if = {
					limit = { check_variable = { harmonist_demand_counter = 3 } }
					if = {
						limit = {
							OR = {
								has_idea = low_economic_mobilisation
								has_idea = partial_economic_mobilisation
								has_idea = war_economy
								has_idea = tot_economic_mobilisation 
								has_idea = SOL_everything_for_equestria_idea3
								has_idea = SOL_everything_for_equestria_idea2
								has_idea = SOL_everything_for_equestria_idea
							}
						}
						country_event = {
							id = paxsolaris.123
						}
					}
					else = {
						add_to_variable = { var = harmonist_demand_counter value = 1 }
					}
				}
				if = {
					limit = { check_variable = { harmonist_demand_counter = 4 } }
					if = {
						limit = {
							OR = {
								has_idea = limited_exports
								has_idea = closed_economy
							}
						}
						country_event = {
							id = paxsolaris.124
						}
					}
					else = {
						add_to_variable = { var = harmonist_demand_counter value = 1 }
					}
				}
				if = {
					limit = { check_variable = { harmonist_demand_counter = 5 } }
					if = {
						limit = {
							OR = {
								has_idea = eqs_order_idea
								NOT = { has_idea = friendly_harmony_SOL }
							}
						}
						country_event = {
							id = paxsolaris.125
						}
					}
				}
				add_to_variable = { var = harmonist_demand_counter value = 1 }
				if = { 
					limit = { check_variable = { harmonist_demand_counter < 6 } }
					remove_mission = SOL_harmonist_demands
					activate_mission = SOL_harmonist_demands
				}
			}
		}
	}	
}
SOL_royal_guard_mechanic = {
	SOL_forced_conscription = {
		icon = GFX_decision_daybreaker_military_support
		allowed = { tag = EQS }
		priority = 101
		visible = {
			hidden_trigger = { 
				NOT = { has_idea = SOL_forced_conscription_idea } 
				NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
				has_completed_focus = SOL_muster_our_forces
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				NOT = { has_idea = SOL_forced_conscription_idea } 
				NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
			}
		}
		days_re_enable = 140
		cost = 30
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_forced_conscription"
			custom_effect_tooltip = paxsolaris_loyalty_decrease_10
			add_timed_idea = {
				idea = SOL_forced_conscription_idea
				days = 70
			}
			hidden_effect = {
				add_to_variable = { var = daybreaker_support value = -10 }
				SOL_calculate_loyalty = yes
			}
		}
	}
	SOL_cull_the_traitors = {
		icon = GFX_decision_resistance_attack_counter
		allowed = { always = no }
		priority = 100
		available = {
			if = {
				limit = { 
					event_target:SOL_cull_the_traitors_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = event_target:SOL_cull_the_traitors_target_1
				}
			}
			if = {
				limit = { 
					event_target:SOL_cull_the_traitors_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = event_target:SOL_cull_the_traitors_target_2
				}
			}
			if = {
				limit = { 
					event_target:SOL_cull_the_traitors_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = event_target:SOL_cull_the_traitors_target_3
				}
			}
			if = {
				limit = { 
					event_target:SOL_cull_the_traitors_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = event_target:SOL_cull_the_traitors_target_4
				}
			}
			if = {
				limit = { 
					event_target:SOL_cull_the_traitors_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = event_target:SOL_cull_the_traitors_target_5
				}
			}
		}
		visible = {
			hidden_trigger = {
				NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
			}
		}
		highlight_states = {
			highlight_states_trigger = {
				is_owned_and_controlled_by = event_target:solar_empire
				OR = {
					state = event_target:SOL_cull_the_traitors_target_1
					state = event_target:SOL_cull_the_traitors_target_2
					state = event_target:SOL_cull_the_traitors_target_3
					state = event_target:SOL_cull_the_traitors_target_4
					state = event_target:SOL_cull_the_traitors_target_5
				}
			}
		}
		selectable_mission = yes
		days_mission_timeout = 90
		is_good = yes
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_cull_the_traitors"
			custom_effect_tooltip = inquisitionaction
			custom_effect_tooltip = inquisitionoutreachaction
			custom_effect_tooltip = paxsolaris_loyalty_decrease_10
			hidden_effect = {
				add_to_variable = { var = daybreaker_support value = -10 }
				add_to_variable = { var = solar_resistance_suppression value = -1 }
				add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
				SOL_calculate_loyalty = yes
				every_state = {	
					limit = { has_state_flag = SOL_cull_the_traitors_target }
					clr_state_flag = SOL_cull_the_traitors_target
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_global_flag = sol_war_of_the_eclipse_concluded
			}
		}
	}
	SOL_dispatch_stf_decision = {
		icon = GFX_decision_solar_royal_guard_deploy
		allowed = { always = no }
		fire_only_once = yes
		selectable_mission = no
		available = {
			hidden_trigger = { 
				always = no
			}
		}
		visible = {
			ROOT = {
				NOT = { has_country_flag = SOL_recall_royal_guard_decision_in_progress_flag }
			}
		}
		
		fire_only_once = yes
		selectable_mission = no
		days_mission_timeout = SOL_dispatched_mtf_state_decision_duration_var
		is_good = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_stf_decision target: [From.GetName]"
			custom_effect_tooltip = SOL_dispatch_stf_decision_spawn_units_tt
			hidden_effect = {
				FROM = {
					if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 1 } }
						create_unit = { division = "name = \"STF-1 'Ashmakers'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-2 'Purity'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 2 } }
						create_unit = { division = "name = \"STF-3 'Cremation'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-4 'Shimmer'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 3 } }
						create_unit = { division = "name = \"STF-5 'Firebolts'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-6 'Sunrise'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 4 } }
						create_unit = { division = "name = \"STF-7 'Dawnbreak'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-8 'Right Hoof'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 5 } }
						create_unit = { division = "name = \"STF-9 'Infernos'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-10 'The Enforcers'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 6 } }
						create_unit = { division = "name = \"STF-11 'Chromosphere'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-12 'Zealots'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_royal_guard_deployed_var = 7 } }
						create_unit = { division = "name = \"STF-13 'The Faithful'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"STF-14 'Midnight Sun'\" division_template = \"Solar Task Force\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_stf_tt
				ROOT = { has_country_flag = SOL_recall_royal_guard_decision_in_progress_flag }
			}
		}
	}
	SOL_recall_stf_decision = {
		icon = generic_prepare_civil_war
		allowed = { original_tag = EQS }
		
		visible = {
			check_variable = {
				var = SOL_royal_guard_deployed_var
				value = 1
				compare = greater_than_or_equals
			}
		}
		
		
		ai_will_do = {
			factor = 50
		}

		cost = 25
		
		days_remove = 5
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_recall_stf_decision"
			custom_effect_tooltip = SOL_recall_stf_decisioneffect_tt
			hidden_effect = {
				clr_country_flag = SOL_recall_royal_guard_decision_in_progress_flag
				delete_unit_template_and_units = {
					division_template = "Solar Task Force"
				}
				division_template = {
					name = "Solar Task Force"
					division_names_group = EQS_PAR_02
					is_locked = yes
					regiments = {
						pegasi = { x = 0 y = 0 }
						pegasi = { x = 0 y = 1 }
						pegasi = { x = 0 y = 2 }
						pegasi = { x = 0 y = 3 }
						pegasi = { x = 1 y = 0 }
						pegasi = { x = 1 y = 1 }
						pegasi = { x = 1 y = 2 }
						pegasi = { x = 1 y = 3 }
					}
					support = {
						unicorn_company = { x = 0 y = 0 }
						recon = { x = 0 y = 1 }
						signal_company = { x = 0 y = 2 }
						artillery = { x = 0 y = 3 }
					}
					priority = 2
				}
				set_variable = { SOL_royal_guard_deployed_var = 0 }
				set_variable = { SOL_royal_guard_in_reserve_var = 14 }
				every_state = {
					limit = {
						has_variable = SOL_royal_guard_deployed_var
					}
					clear_variable = SOL_royal_guard_deployed_var
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_recall_stf_decision"
			set_country_flag = SOL_recall_royal_guard_decision_in_progress_flag
		}
	}
	SOL_reassert_control_of_state = {
		icon = GFX_decision_counterterrorism
		allowed = { original_tag = EQS }
		
		visible = { 
			FROM = {
				has_state_flag = SOL_overrun_by_resistance
			}
		}
		target_root_trigger = {
			has_country_flag = SOL_unlocked_counterterrorism_decisions
		}
		
		available = { 
			FROM = {
				has_state_flag = SOL_overrun_by_resistance
				resistance < 30
				any_neighbor_state = {
					is_core_of = ROOT
				}
			}
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_division_requirements_tt
				FROM = {
					meets_division_requirements_uprising = yes
				}
			}
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_controlled_tt
				any_state = { #Yes, I know this is a weird way to do it. But this is the only way to prevent the game spitting out annoying errors. 
					state = FROM
					is_fully_controlled_by = ROOT
				}
			}
		}
		state_target = yes
		target_array = controlled_states
		target_trigger = {
			FROM = {
				has_state_flag = SOL_overrun_by_resistance
				NOT = { is_core_of = ROOT }
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				FROM = { NOT = { is_fully_controlled_by = ROOT } }
			}
		}
		ai_will_do = {
			base = 30
		}
		cost = 20
		days_remove = 60
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_reassert_control_of_state"
			custom_effect_tooltip = SOL_will_regain_control_of_state
			add_state_core = FROM
			hidden_effect = {
				FROM = {
					SOL_remove_uprising = yes
				}
			}
		}
	}
}
SOL_inquisition_mechanic = {
	SOL_upgrade_inquisition_decision = {
		icon = GFX_decision_upgrade_inquisition
		priority = 110
		available = {
			num_of_civilian_factories_available_for_projects > 9
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		visible = {
			NOT = { has_country_flag = upgraded_inquisition }
			has_completed_focus = SOL_upgrade_inquisition
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		fire_only_once = no

		cost = 20
		days_remove = solar_inquisition_decision_low_duration

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_upgrade_inquisition_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
		}
		
		modifier = {
			civilian_factory_use = 10
		}
		remove_effect = { 
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_upgrade_inquisition_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			if = {
				limit = { check_variable = { inquisition_upgrade_process = 0 } }
				set_country_flag = inquisition_less_detection_chance
				custom_effect_tooltip = SOL_upgrade_inquisition_decision_reward_1
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 1 } }
				add_to_variable = { var = solar_inquisition_decision_medium_duration value = -10 }
				add_to_variable = { var = solar_inquisition_decision_low_duration value = -10 }
				custom_effect_tooltip = SOL_upgrade_inquisition_decision_reward_2
			}
			if = {
				limit = { check_variable = { inquisition_upgrade_process = 2 } }
				set_country_flag = inquisition_additional_leads
				custom_effect_tooltip = SOL_upgrade_inquisition_decision_reward_3
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 3 } }
				add_to_variable = { var = solar_inquisition_max_decisions value = 1 }
				custom_effect_tooltip = SOL_upgrade_inquisition_decision_reward_4
			}
			if = { 
				limit = { check_variable = { inquisition_upgrade_process = 4 } }
				set_country_flag = upgraded_inquisition
				custom_effect_tooltip = SOL_upgrade_inquisition_decision_reward_5
				country_event = {
					id = paxsolaris.74
				}
				hidden_effect = {
					if = {
						limit = {
							NOT = {
								any_state = {
									has_event_target = SOL_strike_target_7
								}
							}
						}
						121 = { save_global_event_target_as = SOL_strike_target_7 }
					}
					if = {
						limit = {
							NOT = {
								any_state = {
									has_event_target = SOL_raid_resistance_target_3
								}
							}
						}
						121 = { save_global_event_target_as = SOL_raid_resistance_target_3 }
					}
				}
			}
			add_to_variable = { var = inquisition_upgrade_process value = 1 }
		}
	}
	SOL_strike_at_the_resistance = { 
		icon = GFX_decision_smash_resistance
		priority = 85
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			if = {
				limit = { has_global_flag = sol_war_of_the_eclipse_begun }
				custom_trigger_tooltip = {
					tooltip = sol_inquisition_chaos
					NOT = { has_global_flag = sol_war_of_the_eclipse_begun }
				}
			}
		}
		visible = {
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress = 0 }
				NOT = { check_variable = { solar_resistance_strength = 0 } }
				NOT = { has_active_mission = SOL_strike_at_resistance_mission }
				NOT = { has_country_flag = resistance_strike_in_progress }
				is_ai = no
				NOT = { has_country_flag = resistance_ceasefire }
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 150
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 20
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 75
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_20_leads_75

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_strike_at_the_resistance"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = resistance_strike_in_progress
			hidden_effect = {
				add_command_power = -20
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 75
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_strike_at_the_resistance"
			hidden_effect = {
				every_state = {
					clr_state_flag = potential_secondary_strike_target
					clr_state_flag = SOL_strike_at_the_resistance_target
				}
			}
			clr_country_flag = SOL_refined_resistance_strike
			clr_country_flag = resistance_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_strike_at_the_resistance"
			hidden_effect = {
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
					}
					save_global_event_target_as = SOL_strike_target_1
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
					}
					save_global_event_target_as = SOL_strike_target_2
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
					}
					save_global_event_target_as = SOL_strike_target_3
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
					}
					save_global_event_target_as = SOL_strike_target_4
					set_state_flag = potential_secondary_strike_target
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_state_flag = potential_secondary_strike_target }
					}
					save_global_event_target_as = SOL_strike_target_5
					set_state_flag = potential_secondary_strike_target
				}
				if = {
					limit = { NOT = { has_country_flag = SOL_twilight_ascended } }
					random_owned_controlled_state = {
						limit = {
							check_variable = { SOL_public_works_region_id < 11 }
							SOL_eligible_for_state_events = yes
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_state_flag = potential_secondary_strike_target }
						}
						save_global_event_target_as = SOL_strike_target_6
						set_state_flag = potential_secondary_strike_target
					}
				}
				if = {
					limit = { NOT = { has_country_flag = upgraded_inquisition } }
					random_owned_controlled_state = {
						limit = {
							check_variable = { SOL_public_works_region_id < 11 }
							SOL_eligible_for_state_events = yes
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_state_flag = potential_secondary_strike_target }
						}
						save_global_event_target_as = SOL_strike_target_7
						set_state_flag = potential_secondary_strike_target
					}
				}
				random_list = {
					1 = { 
						event_target:SOL_strike_target_1 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_1 } 
					}
					1 = { 
						event_target:SOL_strike_target_2 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_2 } 
					}
					1 = { 
						event_target:SOL_strike_target_3 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_3 } 
					}
					1 = { 
						event_target:SOL_strike_target_4 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_4 } 
					}
					1 = { 
						event_target:SOL_strike_target_5 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_5 } 
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = SOL_twilight_ascended
						}
						event_target:SOL_strike_target_6 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_6 } 
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = upgraded_inquisition
						}
						event_target:SOL_strike_target_7 = { clr_state_flag = potential_secondary_strike_target }
						event_target:SOL_resistance_stronghold = { save_global_event_target_as = SOL_strike_target_7 } 
					}
				}
				event_target:SOL_resistance_stronghold = { set_state_flag = SOL_strike_at_the_resistance_target } 
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						has_state_flag = potential_secondary_strike_target
					}
					save_global_event_target_as = SOL_secondary_strike_target_1
					clr_state_flag = potential_secondary_strike_target
					set_state_flag = SOL_strike_at_the_resistance_target
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						has_state_flag = potential_secondary_strike_target
					}
					save_global_event_target_as = SOL_secondary_strike_target_2
					clr_state_flag = potential_secondary_strike_target
					set_state_flag = SOL_strike_at_the_resistance_target
				}
				activate_mission = SOL_strike_at_resistance_mission
			}
			custom_effect_tooltip = strike_decision_outcome
		}
	}
	SOL_refine_strike_results = { 
		icon = GFX_decision_smash_resistance
		priority = 83
		available = {
			custom_trigger_tooltip = {
				tooltip = ongoingresistancestrike
				has_active_mission = SOL_strike_at_resistance_mission
			}
		}
		visible = {
			hidden_trigger = {
				has_active_mission = SOL_strike_at_resistance_mission
				NOT = { has_country_flag = SOL_refined_resistance_strike }
				is_ai = no
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 150
		}
		custom_cost_trigger = {
			check_variable = {
				var = SOL_lead_variable
				value = 50
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_leads_50
		cancel_trigger = {
			NOT = { has_active_mission = SOL_strike_at_resistance_mission }
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_strike_results"
			hidden_effect = {
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 50
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_strike_results"
			set_country_flag = SOL_refined_resistance_strike
			custom_effect_tooltip = SOL_refine_strike_results_tt
			hidden_effect = {
				every_state = {
					limit = { has_state_flag = potential_secondary_strike_target }
					clr_state_flag = potential_secondary_strike_target
				}
			}
		}
	}
	SOL_strike_at_resistance_mission = {
		icon = GFX_decision_smash_resistance
		priority = 84
		available = {
			OR = {
				if = {
					limit = { 
						event_target:SOL_strike_target_1 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_1
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_2 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_2
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_3 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_3
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_4 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_4
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_5 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_5
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_6 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
						NOT = { has_country_flag = SOL_twilight_ascended }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_6
					}
				}
				if = {
					limit = { 
						event_target:SOL_strike_target_7 = { 
							OR = {
								has_state_flag = potential_secondary_strike_target 
								has_state_flag = SOL_strike_at_the_resistance_target
							}
						}
						NOT = { has_country_flag = upgraded_inquisition }
					}
					divisions_in_state = {
						size > 3
						state = event_target:SOL_strike_target_7
					}
				}
			}
		}
		ai_will_do = {
			base = 1200
		}

		highlight_states = {
			highlight_states_trigger = {
				OR = {
					has_state_flag = potential_secondary_strike_target 
					has_state_flag = SOL_strike_at_the_resistance_target
				}
			}
		}

		allowed = {	always = no }

		selectable_mission = yes
		days_mission_timeout = 30
		is_good = yes
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_strike_at_resistance_mission"
			custom_effect_tooltip = strike_at_resistance_effect_tt
			hidden_effect = {
				SOL_calculate_probability = yes
				if = {
					limit = {
						check_variable = { pr_nightmare > probability_check }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_1 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_1
							}
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_2 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_2
							}
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_3 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_3
							}
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_4 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_4
							}
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_5 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_5
							}
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_6 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_6
							}
							NOT = { has_country_flag = SOL_twilight_ascended }
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
					if = {
						limit = { 
							event_target:SOL_strike_target_7 = { has_state_flag = potential_secondary_strike_target }
							divisions_in_state = {
								size > 3
								state = event_target:SOL_strike_target_7
							}
							NOT = { has_country_flag = upgraded_inquisition }
						}
						add_to_variable = { var = daybreaker_support value = solar_inquisition_decision_loyalty_decrease }
						subtract_from_variable = { var = daybreaker_support_temp_loss_tracker value = solar_inquisition_decision_loyalty_decrease }
						add_to_variable = { var = strike_at_resistance_success_rating value = -1 }
					}
				}
				if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_secondary_strike_target_1
						}
					}
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter }
					add_to_variable = { var = strike_at_resistance_success_rating value = 1 }
				}
				if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_secondary_strike_target_2
						}
					}
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					add_to_variable = { var = strike_at_resistance_success_rating value = 1 }
				}
				if = {
					limit = {
						divisions_in_state = {
							size > 9
							state = event_target:SOL_resistance_stronghold
						}
						NOT = { has_country_flag = sol_inquisition_spies }
					}
					add_to_variable = { var = solar_resistance_suppression value = -1 }
					add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
					SOL_calculate_leads_large = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					set_variable = { var = solar_resistance_actions_progress value = 4 }
					add_to_variable = { var = resistance_attack_blocked value = 50 }
					add_to_variable = { var = strike_at_resistance_success_rating value = 5 }
					if = {
						limit = {
							NOT = { has_country_flag = SOL_highlight_states_decision_unlocked }
						}
						country_event = {
							id = paxsolaris.12
							days = 3
						}
					}
					if = {
						limit = {
							NOT = { has_country_flag = SOL_great_march_fired }
						}
						country_event = {
							id = paxsolaris.229
							days = 1
						}
					}
					every_state = {
						limit = { has_state_flag = sol_past_resistance_activity }
						clr_state_flag = sol_past_resistance_activity
					}
				}
				else_if = {
					limit = {
						divisions_in_state = {
							size > 3
							state = event_target:SOL_resistance_stronghold
						}
					}
					add_to_variable = { var = solar_resistance_suppression value = -1 }
					SOL_calculate_leads_medium = yes
					add_to_variable = { var = SOL_lead_variable value = lead_counter }
					add_to_variable = { var = SOL_lead_variable_temp_gain_tracker value = lead_counter}
					set_variable = { var = solar_resistance_actions_progress value = 4 }
					add_to_variable = { var = resistance_attack_blocked value = 30 }
					add_to_variable = { var = strike_at_resistance_success_rating value = 3 }
					if = {
						limit = {
							has_country_flag = sol_inquisition_spies
						}
						country_event = {
							id = paxsolaris.224
							days = 3
						}
					}
					if = {
						limit = {
							NOT = { has_country_flag = SOL_great_march_fired }
						}
						country_event = {
							id = paxsolaris.229
							days = 1
						}
					}
					every_state = {
						limit = { has_state_flag = sol_past_resistance_activity }
						clr_state_flag = sol_past_resistance_activity
					}
				}
			}
			hidden_effect = {
				every_state = {
					clr_state_flag = potential_secondary_strike_target
					clr_state_flag = SOL_strike_at_the_resistance_target
				}
			}
			clr_country_flag = SOL_refined_resistance_strike
			clr_country_flag = resistance_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
			country_event = {
				id = paxsolaris.75
				hours = 1
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_strike_at_the_resistance_mission"
			hidden_effect = {
				every_state = {
					clr_state_flag = potential_secondary_strike_target
					clr_state_flag = SOL_strike_at_the_resistance_target
				}
			}
			clr_country_flag = SOL_refined_resistance_strike
			clr_country_flag = resistance_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_strike_at_resistance_mission"
			hidden_effect = {
				every_state = {
					clr_state_flag = potential_secondary_strike_target
					clr_state_flag = SOL_strike_at_the_resistance_target
				}
			}
			clr_country_flag = SOL_refined_resistance_strike
			clr_country_flag = resistance_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_initiate_raid_resistance_decision = { 
		icon = GFX_decision_sol_raid_resistance
		priority = 80
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			if = {
				limit = { has_global_flag = sol_war_of_the_eclipse_begun }
				custom_trigger_tooltip = {
					tooltip = sol_inquisition_chaos
					NOT = { has_global_flag = sol_war_of_the_eclipse_begun }
				}
			}
		}
		visible = {
			hidden_trigger = {
				check_variable = { solar_resistance_actions_progress > 0 }
				NOT = { has_country_flag = resistance_strike_in_progress }
				is_ai = no
				NOT = { has_country_flag = resistance_ceasefire }
			}
		}
		allowed = { original_tag = EQS }
		ai_will_do = {
			factor = 100
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 5
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 25
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_5_leads_25
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_initiate_raid_resistance_decision"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = resistance_strike_in_progress
				event_target:SOL_raid_resistance_target_1 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_2 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_3 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_initiate_raid_resistance_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = resistance_strike_in_progress
			hidden_effect = {
				add_command_power = -5
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 25
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no
		fixed_random_seed = no
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_initiate_raid_resistance_decision"
			hidden_effect = {
				random_list = {
					1 = { 
						set_variable = { var = SOL_raid_resistance_base_var value = 1 }
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = SOL_twilight_ascended
						}
						set_variable = { var = SOL_raid_resistance_base_var value = 2 }
					}
					1 = { 
						modifier = {
							factor = 0
							has_country_flag = upgraded_inquisition
						}
						set_variable = { var = SOL_raid_resistance_base_var value = 3 }
					}
				}
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						NOT = { has_variable = SOL_raid_resistance_base_state_var }
						distance_to = {
							value < 800
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_raid_resistance_target_1
					set_variable = { SOL_raid_resistance_base_state_var = 1 }
					EQS = { activate_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				if = {
					limit = { NOT = { has_country_flag = SOL_twilight_ascended } }
					random_owned_controlled_state = {
						limit = {
							check_variable = { SOL_public_works_region_id < 11 }
							SOL_eligible_for_state_events = yes
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_variable = SOL_raid_resistance_base_state_var }
							distance_to = {
								value < 800
								target = event_target:SOL_resistance_stronghold
							}
						}
						save_global_event_target_as = SOL_raid_resistance_target_2
						set_variable = { SOL_raid_resistance_base_state_var = 2 }
						EQS = { activate_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
					}
				}
				if = {
					limit = { NOT = { has_country_flag = upgraded_inquisition } }
					random_owned_controlled_state = {
						limit = {
							check_variable = { SOL_public_works_region_id < 11 }
							SOL_eligible_for_state_events = yes
							NOT = { state = event_target:SOL_resistance_stronghold }
							NOT = { has_variable = SOL_raid_resistance_base_state_var }
							distance_to = {
								value < 800
								target = event_target:SOL_resistance_stronghold
							}
						}
						save_global_event_target_as = SOL_raid_resistance_target_3
						set_variable = { SOL_raid_resistance_base_state_var = 3 }
						EQS = { activate_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
					}
				}
			}
			custom_effect_tooltip = raid_decision_outcome
		}
	}
	SOL_raid_resistance_decision = {
		icon = GFX_decision_sol_raid_resistance
		priority = 79
		available = {
			divisions_in_state = {
				size > 0
				state = FROM
			}
		}
		ai_will_do = {
			base = 100
		}
		visible = {
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_controlled_tt
				any_state = { #Yes, I know this is a weird way to do it. But this is the only way to prevent the game spitting out annoying errors. 
					state = FROM
					is_controlled_by = ROOT
				}
			}
		}
		
		allowed = { always = no }

		selectable_mission = yes
		days_mission_timeout = 20
		fixed_random_seed = no
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_raid_resistance_decision"
			hidden_effect = {
				if = {
					limit = { check_variable = { FROM.SOL_raid_resistance_base_state_var = EQS.SOL_raid_resistance_base_var } }
					country_event = { id = paxsolaris.73 }
					add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
					clr_country_flag = resistance_strike_in_progress
					event_target:SOL_raid_resistance_target_1 = { 
						clear_variable = SOL_raid_resistance_base_state_var
						EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
					}
					event_target:SOL_raid_resistance_target_2 = { 
						clear_variable = SOL_raid_resistance_base_state_var
						EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
					}
					event_target:SOL_raid_resistance_target_3 = { 
						clear_variable = SOL_raid_resistance_base_state_var
						EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
					}
				}
				else = {
					random_list = {
						30 = {
							country_event = { id = paxsolaris.72 }
							add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
							clr_country_flag = resistance_strike_in_progress
							event_target:SOL_raid_resistance_target_1 = { 
								clear_variable = SOL_raid_resistance_base_state_var
								EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
							}
							event_target:SOL_raid_resistance_target_2 = { 
								clear_variable = SOL_raid_resistance_base_state_var
								EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
							}
							event_target:SOL_raid_resistance_target_3 = { 
								clear_variable = SOL_raid_resistance_base_state_var
								EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
							}
						}
						30 = {
							modifier = {
								add = 40
								has_country_flag = inquisition_less_detection_chance
							}
							country_event = { id = paxsolaris.71 }
						}
					}
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_raid_resistance_decision"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = resistance_strike_in_progress
				event_target:SOL_raid_resistance_target_1 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_2 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_3 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_raid_resistance_decision"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = resistance_strike_in_progress
				event_target:SOL_raid_resistance_target_1 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_2 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
				event_target:SOL_raid_resistance_target_3 = { 
					clear_variable = SOL_raid_resistance_base_state_var
					EQS = { remove_targeted_decision = { target = PREV decision = SOL_raid_resistance_decision } }
				}
			}
			country_event = { id = paxsolaris.70 }
		}
	}

	SOL_information_blackout = {
		icon = GFX_decision_information_blackout
		priority = 60
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			if = {
				limit = { has_global_flag = sol_war_of_the_eclipse_begun }
				custom_trigger_tooltip = {
					tooltip = sol_inquisition_chaos
					NOT = { has_global_flag = sol_war_of_the_eclipse_begun }
				}
			}
		}
		visible = {
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress = 0 }
				NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
				NOT = { has_active_mission = SOL_information_blackout_mission }
				NOT = { has_country_flag = information_strike_in_progress }
				is_ai = no
				NOT = { has_country_flag = resistance_ceasefire }
			}
		}
		ai_will_do = {
			factor = 150
		}
		allowed = { original_tag = EQS }
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 20
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 75
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_20_leads_75

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = information_strike_in_progress
			hidden_effect = {
				add_command_power = -20
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 75
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_information_blackout"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = information_strike_in_progress
			}
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout"
			hidden_effect = {
				random_list = {
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						41 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						96 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						18 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						60 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						59 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						72 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						14 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						130 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						132 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						41 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						125 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						124 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						129 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						171 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						181 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						70 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						179 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						74 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						118 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						117 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						121 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						122 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						111 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						116 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						106 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						29 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						13 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						28 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						29 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						185 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						110 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						75 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						184 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						231 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						525 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						108 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						70 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						178 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						74 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						40 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						186 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						185 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						188 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						110 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						12 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						75 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						108 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						74 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						178 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						70 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						181 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						171 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						126 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						59 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						132 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						61 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						72 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						14 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						13 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						90 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						31 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						350 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						30 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						32 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						86 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						15 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						33 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						351 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						26 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
					1 = {
						38 = { save_global_event_target_as = SOL_information_blackout_target_1 }
						66 = { save_global_event_target_as = SOL_information_blackout_target_2 }
						21 = { save_global_event_target_as = SOL_information_blackout_target_3 }
						85 = { save_global_event_target_as = SOL_information_blackout_target_4 }
						80 = { save_global_event_target_as = SOL_information_blackout_target_5 }
						19 = { save_global_event_target_as = SOL_information_blackout_target_6 }
						50 = { save_global_event_target_as = SOL_information_blackout_target_7 }
						15 = { save_global_event_target_as = SOL_information_blackout_target_8 }
						86 = { save_global_event_target_as = SOL_information_blackout_target_9 }
						33 = { save_global_event_target_as = SOL_information_blackout_target_10 }
						351 = { save_global_event_target_as = SOL_information_blackout_target_11 }
					}
				}
				activate_mission = SOL_information_blackout_mission		
			}
			custom_effect_tooltip = information_strike_decision_outcome
		}
	}
	SOL_information_blackout_mission = {
		icon = GFX_decision_information_blackout
		priority = 59
		available = {
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_1
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_2
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_3
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_4
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_5
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_6 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_6
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_7 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_7
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_8 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_8
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_9 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_9
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_10 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_10
				}
			}
			if = {
				limit = { 
					event_target:SOL_information_blackout_target_11 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = event_target:SOL_information_blackout_target_11
				}
			}
		}
		ai_will_do = {
			base = 1200
		}

		highlight_states = {
			highlight_states_trigger = {
				is_owned_and_controlled_by = event_target:solar_empire
				OR = {
					state = event_target:SOL_information_blackout_target_1
					state = event_target:SOL_information_blackout_target_2
					state = event_target:SOL_information_blackout_target_3
					state = event_target:SOL_information_blackout_target_4
					state = event_target:SOL_information_blackout_target_5
					state = event_target:SOL_information_blackout_target_6
					state = event_target:SOL_information_blackout_target_7
					state = event_target:SOL_information_blackout_target_8
					state = event_target:SOL_information_blackout_target_9
					state = event_target:SOL_information_blackout_target_10
					state = event_target:SOL_information_blackout_target_11
				}
			}
		}

		allowed = {
			always = no
		}
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire 
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_information_blackout_mission"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = information_strike_in_progress
			}
		}
		selectable_mission = yes
		days_mission_timeout = 30
		is_good = yes
		fixed_random_seed = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_information_blackout_mission"
			custom_effect_tooltip = information_blackout_effect_tt
			hidden_effect = { 
				add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
				add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
				SOL_calculate_leads_large = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				set_variable = { var = solar_resistance_outreach_actions_progress value = 4 }
				add_to_variable = { var = resistance_attack_blocked value = 30 }
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				SOL_calculate_loyalty = yes 
				clr_country_flag = information_strike_in_progress
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_information_blackout_mission"
			clr_country_flag = information_strike_in_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
	SOL_arrest_sympathisers = {
		icon = GFX_decision_sol_arrest_propagandists
		priority = 58
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			if = {
				limit = { has_global_flag = sol_war_of_the_eclipse_begun }
				custom_trigger_tooltip = {
					tooltip = sol_inquisition_chaos
					NOT = { has_global_flag = sol_war_of_the_eclipse_begun }
				}
			}
		}
		visible = {
			hidden_trigger = {
				check_variable = { solar_resistance_outreach_actions_progress > 0 }
				NOT = { has_country_flag = information_strike_in_progress }
				is_ai = no
				NOT = { has_country_flag = resistance_ceasefire }
			}
		}
		ai_will_do = {
			factor = 100
		}
		allowed = { original_tag = EQS }
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 5
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 25
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_5_leads_25
		cancel_trigger = {
			hidden_trigger = { 
				has_country_flag = resistance_ceasefire
				has_global_flag = sol_war_of_the_eclipse_begun
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_arrest_sympathisers"
			hidden_effect = {
				add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
				clr_country_flag = information_strike_in_progress
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_arrest_sympathisers"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			set_country_flag = information_strike_in_progress
			hidden_effect = {
				add_command_power = -5
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 25
				}
			}
		}

		days_remove = solar_inquisition_decision_low_duration
		fire_only_once = no
		fixed_random_seed = no

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_arrest_sympathisers"
			hidden_effect = {
				random_owned_controlled_state = {
					limit = {
						check_variable = { SOL_public_works_region_id < 11 }
						SOL_eligible_for_state_events = yes
						NOT = { state = event_target:SOL_resistance_stronghold }
						distance_to = {
							value < 800
							target = event_target:SOL_resistance_stronghold
						}
					}
					save_global_event_target_as = SOL_arrest_event_target
				}
				clear_array = SOL_arrest_sympathisers_targets
				while_loop_effect = {
					limit = { check_variable = { SOL_arrest_sympathisers_targets^num < 5 } }
					random_list = {
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 1 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 1 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 2 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 2 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 3 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 3 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 4 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 4 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 5 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 5 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 6 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 6 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 7 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 7 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 8 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 8 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 9 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 9 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 10 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 10 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 11 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 11 }
						}
						1 = { 
							modifier = {
								factor = 0
								is_in_array = { SOL_arrest_sympathisers_targets = 12 }
							}
							add_to_array = { SOL_arrest_sympathisers_targets = 12 }
						}
					}
				}

				random_list = {
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 1 }
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_targets^0 } 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 2 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_targets^1 } 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 3 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_targets^2 } 
						modifier = {
							factor = 0 
							AND = {
								has_country_flag = SOL_twilight_ascended
								has_country_flag = upgraded_inquisition
							}
						} 
					}
					1 = { 
						set_variable = { var = SOL_arrest_sympathisers_target_var value = 4 } 
						set_variable = { var = SOL_arrest_sympathisers_target_type_var value = SOL_arrest_sympathisers_targets^3 } 
						modifier = {
							factor = 0 
							OR = {
								has_country_flag = SOL_twilight_ascended
								has_country_flag = upgraded_inquisition
							}
						} 
					}
				}
			}
			custom_effect_tooltip = arrest_decision_outcome
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			country_event = { id = paxsolaris.77 }
		}
	}

	#Capture Starlight/Trixie
	SOL_operation_eveningstar = {
		priority = 40
		icon = GFX_decision_sol_starxie
		allowed = {
			original_tag = EQS
		}
		available = {
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_met
				check_variable = {
					var = SOL_capture_starxie_progress_var
					value = 80
					compare = greater_than_or_equals
				}
			}
			if = {
				limit = {
					check_variable = {
						var = SOL_capture_starxie_progress_var
						value = 80
						compare = greater_than_or_equals
					}
				}
				if = {
					limit = { 
						121 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size > 3
						state = 121
					}
				}
			}
		}
		highlight_states = {
			highlight_states_trigger = {
				if = {
					limit = {
						check_variable = {
							var = EQS.SOL_capture_starxie_progress_var
							value = 80
							compare = greater_than_or_equals
						}
					}
					state = 121
				}
				else = {
					always = no
				}
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			NOT = { has_country_flag = SOL_operation_eveningstar_completed }
		}
		ai_will_do = {
			factor = 500
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 20
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_20_cp
		fire_only_once = no
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_operation_eveningstar"
			hidden_effect = {
				add_command_power = -20
				set_country_flag = SOL_capture_starxie_progress
			}
			custom_effect_tooltip = SOL_decapitate_the_resistance_tt
			custom_effect_tooltip = inquisitioncohesionaction
			custom_effect_tooltip = SOL_no_organised_activity
			clr_country_flag = SOL_capture_starxie_progress
			set_country_flag = SOL_operation_eveningstar_completed
			country_event = { id = paxsolaris.275 hours = 1 }
		}

	}
	SOL_capture_remnants = {
		priority = 39
		icon = GFX_decision_sol_raid_resistance

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
			if = {
				limit = { 
					188 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 188
				}
			}
			if = {
				limit = { 
					184 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 184
				}
			}
			if = {
				limit = { 
					226 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 226
				}
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			NOT = { has_country_flag = SOL_capture_remnants_completed }
		}
		ai_will_do = {
			factor = 500
		}
		cancel_trigger = {
			OR = {
				if = {
					limit = { 
						188 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 188
					}
				}
				if = {
					limit = { 
						184 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 184
					}
				}
				if = {
					limit = { 
						226 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 226
					}
				}
			}
		}
		highlight_states = {
			highlight_states_trigger = {
				OR = {
					state = 188
					state = 184
					state = 226
				}
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_capture_remnants"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 15
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_15_leads_10

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_capture_remnants"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_command_power = -15
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 10
				}
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_capture_remnants"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 10 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_10
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			country_event = { id = paxsolaris.270 hours = 1 }
			set_country_flag = SOL_capture_remnants_completed 
		}
	}
	SOL_capture_organiser = {
		priority = 38
		icon = GFX_decision_sol_arrest_propagandists

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
			if = {
				limit = { 
					178 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 2
					state = 178
				}
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			NOT = { has_country_flag = SOL_capture_organiser_completed }
		}
		ai_will_do = {
			factor = 500
		}
		cancel_trigger = {
			if = {
				limit = { 
					178 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size < 3
					state = 178
				}
			}
		}
		highlight_states = {
			highlight_state_targets = { state = 178 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_capture_organiser"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 15
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_15_leads_10

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_capture_organiser"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_command_power = -15
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 10
				}
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_capture_organiser"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 15 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_15
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			country_event = { id = paxsolaris.271 hours = 1 }
			set_country_flag = SOL_capture_organiser_completed
		}
	}
	SOL_offer_bounties = {
		priority = 37
		icon = GFX_decision_offer_bounties

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			NOT = { has_country_flag = SOL_offer_bounties_completed }
		}
		ai_will_do = {
			factor = 500
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		cost = 15
		modifier = {			
			civilian_factory_use = 10
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_offer_bounties"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_offer_bounties"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 5 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_5
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			set_country_flag = SOL_offer_bounties_completed
		}
	}
	SOL_contact_foreign_loyalists = {
		priority = 36
		icon = modern_city

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			NOT = { has_country_flag = SOL_contact_foreign_loyalists_completed }
		}
		ai_will_do = {
			factor = 500
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		cost = 30

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_contact_foreign_loyalists"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_contact_foreign_loyalists"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 10 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_10
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			set_country_flag = SOL_contact_foreign_loyalists_completed
		}
	}
	SOL_investigate_traitors = {
		priority = 35
		icon = GFX_decision_investigate_resistance

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			check_variable = {
				var = SOL_capture_starxie_progress_var
				value = 40
				compare = greater_than_or_equals
			}
			NOT = { has_country_flag = SOL_investigate_traitors_completed }
		}
		ai_will_do = {
			factor = 500
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 15
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_15_leads_10

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_investigate_traitors"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_command_power = -15
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 10
				}
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_investigate_traitors"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 15 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_15
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			country_event = { id = paxsolaris.272 hours = 1 }
			set_country_flag = SOL_investigate_traitors_completed
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							var = SOL_capture_starxie_progress_var
							value = 80
							compare = greater_than_or_equals
						}
					}
					country_event = { id = paxsolaris.274 hours = 1 }
				}
			}
		}
	}
	SOL_honeypot_operation = {
		priority = 34
		icon = GFX_decision_resistance_attack

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			check_variable = {
				var = SOL_capture_starxie_progress_var
				value = 40
				compare = greater_than_or_equals
			}
			NOT = { has_country_flag = SOL_honeypot_operation_completed }
		}
		ai_will_do = {
			factor = 500
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no

		custom_cost_trigger = {
			check_variable = {
				var = num_equipment@infantry_equipment
				value = 1000
			}
		}
		custom_cost_text = decision_cost_infantry_equipment_1000
		modifier = {			
			civilian_factory_use = 10
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_honeypot_operation "
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_equipment_to_stockpile = {
				    type = infantry_equipment
				    amount = -1000
				}
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_honeypot_operation"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 15 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_15
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			country_event = { id = paxsolaris.273 hours = 1 }
			set_country_flag = SOL_honeypot_operation_completed
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							var = SOL_capture_starxie_progress_var
							value = 80
							compare = greater_than_or_equals
						}
					}
					country_event = { id = paxsolaris.274 hours = 1 }
				}
			}
		}
	}
	SOL_escalate_thestral_raids = {
		priority = 33
		icon = GFX_decision_sol_border_war

		allowed = {
			original_tag = EQS
		}

		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
			custom_trigger_tooltip = {
				tooltip = SOL_capture_starxie_progress_only_one
				NOT = { has_country_flag = SOL_capture_starxie_progress }
			}
			if = {
				limit = { 
					32 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 32
				}
			}
			if = {
				limit = { 
					52 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 52
				}
			}
			if = {
				limit = { 
					350 = { is_owned_and_controlled_by = event_target:solar_empire }
				}
				divisions_in_state = {
					size > 1
					state = 350
				}
			}
		}
		visible = {
			has_country_flag = sol_capture_starxie_decisions
			check_variable = {
				var = SOL_capture_starxie_progress_var
				value = 40
				compare = greater_than_or_equals
			}
			NOT = { has_country_flag = SOL_escalate_thestral_raids_completed }
		}
		ai_will_do = {
			factor = 500
		}
		days_remove = solar_inquisition_decision_medium_duration
		fire_only_once = no
		cancel_trigger = {
			OR = { 
				if = {
					limit = { 
						32 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 32
					}
				}
				if = {
					limit = { 
						52 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 52
					}
				}
				if = {
					limit = { 
						350 = { is_owned_and_controlled_by = event_target:solar_empire }
					}
					divisions_in_state = {
						size < 2
						state = 350
					}
				}
			}
		}
		highlight_states = {
			highlight_state_targets = { 
				state = 32
				state = 52
				state = 350
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_escalate_thestral_raids"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
		}
		custom_cost_trigger = {
			check_variable = {
				var = num_equipment@infantry_equipment
				value = 1000
			}
		}
		custom_cost_text = decision_cost_infantry_equipment_1000
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_escalate_thestral_raids"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_equipment_to_stockpile = {
				    type = infantry_equipment
				    amount = -1000
				}
				set_country_flag = SOL_capture_starxie_progress
			}
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_escalate_thestral_raids"
			clr_country_flag = SOL_capture_starxie_progress
			add_to_variable = { var = SOL_capture_starxie_progress_var value = 10 }
			custom_effect_tooltip = SOL_capture_starxie_progress_add_10
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			set_country_flag = SOL_escalate_thestral_raids_completed
			hidden_effect = {
				if = {
					limit = {
						check_variable = {
							var = SOL_capture_starxie_progress_var
							value = 80
							compare = greater_than_or_equals
						}
					}
					country_event = { id = paxsolaris.274 hours = 1 }
				}
			}
		}
	}

	#Repeatable Missions
	SOL_investigate_resistance_decision = {
		icon = GFX_decision_investigate_resistance
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 10
				OR = {
					AND = {
						check_variable = { solar_resistance_actions_progress = 0 }
						check_variable = {  SOL_lead_variable < 75 }
					}
					check_variable = {  SOL_lead_variable < 25 }
				}
			}
			modifier = {
				factor = 0
				check_variable = {  SOL_lead_variable > 100 }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_investigate_resistance_decision"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			add_to_variable = { var = weekly_leads_modifier value = 4 }
			custom_effect_tooltip = investigate_four_leads_per_week
			
		}
		allowed = { original_tag = EQS }
		days_remove = 35
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_investigate_resistance_decision"
			add_to_variable = { var = weekly_leads_modifier value = -4 }
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
		}
	}

	SOL_highlight_states = {
		icon = GFX_decision_mark_states
		available = {
			custom_trigger_tooltip = {
				tooltip = inquisitiondecisionongoing
				check_variable = { solar_inquisition_ongoing_decisions < solar_inquisition_max_decisions }
			}
		}
		allowed = { original_tag = EQS }
		visible = {
			hidden_trigger = {
				NOT = { has_country_flag = SOL_highlight_states_active }
				has_country_flag = SOL_highlight_states_decision_unlocked
			}
		}
		ai_will_do = {
			factor = 0
		}
		custom_cost_trigger = {
			check_variable = {
				var = command_power
				value = 15
				compare = greater_than_or_equals
			}
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_cp_15_leads_10
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_highlight_states"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = 1 }
			hidden_effect = {
				add_command_power = -15
				subtract_from_variable = { 
					var = SOL_lead_variable
					value = 10
				}
				set_country_flag = SOL_highlight_states_active
			}
			custom_effect_tooltip = highlight_decision_outcome
		}
		fire_only_once = no
	}
	SOL_highlight_states_mission = {
		icon = GFX_decision_mark_states
		visible = {
			hidden_trigger = {
				has_country_flag = SOL_highlight_states_active
			}
		}
		ai_will_do = {
			factor = 0
		}
		highlight_states = {
			highlight_states_trigger = {
				has_state_flag = sol_past_resistance_activity
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_highlight_states_mission"
			add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
			hidden_effect = {
				clr_country_flag = SOL_highlight_states_active
			}
		}
		fire_only_once = no
	}

	SOL_dispatch_pegasi_decision = {
		icon = infiltrate_state
		allowed = { always = no }
		fire_only_once = yes
		selectable_mission = no
		available = {
			hidden_trigger = { 
				always = no
			}
		}
		visible = {
			ROOT = {
				NOT = { has_country_flag = SOL_recall_pegasi_decision_in_progress_flag }
			}
		}
		
		fire_only_once = yes
		selectable_mission = no
		days_mission_timeout = SOL_dispatched_mtf_state_decision_duration_var
		is_good = yes
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_dispatch_pegasi_decision target: [From.GetName]"
			custom_effect_tooltip = SOL_dispatch_pegasi_decision_spawn_units_tt
			hidden_effect = {
				FROM = {
					if = {
						limit = { check_variable = { SOL_mobile_task_force_deployed_var = 1 } }
						create_unit = { division = "name = \"IST-1 'Firebolts'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"IST-2 'Sunrise'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_mobile_task_force_deployed_var = 2 } }
						create_unit = { division = "name = \"IST-3 'Dawnbreak'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"IST-4 'Right Hoof'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_mobile_task_force_deployed_var = 3 } }
						create_unit = { division = "name = \"IST-5 'Infernos'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"IST-6 'The Enforcers'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_mobile_task_force_deployed_var = 4 } }
						create_unit = { division = "name = \"IST-7 'Chromosphere'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"IST-8 'Zealots'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
					else_if = {
						limit = { check_variable = { SOL_mobile_task_force_deployed_var = 5 } }
						create_unit = { division = "name = \"IST-9 'The Faithful'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
						create_unit = { division = "name = \"IST-10 'Midnight Sun'\" division_template = \"Inquisitorial Strike Team\" start_experience_factor = 1" owner = ROOT allow_spawning_on_enemy_provs = yes }
					}
				}
			}
		}
		cancel_trigger = {
			custom_trigger_tooltip = {
				tooltip = SOL_has_recalled_pegasi_tt
				ROOT = { has_country_flag = SOL_recall_pegasi_decision_in_progress_flag }
			}
		}
	}
	SOL_recall_pegasi_decision = {
		icon = generic_prepare_civil_war
		allowed = { original_tag = EQS }
		
		visible = {
			check_variable = {
				var = SOL_mobile_task_force_deployed_var
				value = 1
				compare = greater_than_or_equals
			}
		}
		
		
		ai_will_do = {
			factor = 50
		}

		cost = 25
		
		days_remove = 5
		
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_recall_pegasi_decision"
			custom_effect_tooltip = SOL_recall_pegasi_decision_effect_tt
			hidden_effect = {
				clr_country_flag = SOL_recall_pegasi_decision_in_progress_flag
				delete_unit_template_and_units = {
					division_template = "Inquisitorial Strike Team"
				}
				division_template = {
					name = "Inquisitorial Strike Team"
					division_names_group = EQS_PAR_02
					is_locked = yes
					regiments = {
						pegasi = { x = 0 y = 0 }
						pegasi = { x = 0 y = 1 }
						pegasi = { x = 0 y = 2 }
						pegasi = { x = 1 y = 0 }
						pegasi = { x = 1 y = 1 }
						pegasi = { x = 1 y = 2 }
					}
					support = {
						unicorn_company = { x = 0 y = 0 }
						recon = { x = 0 y = 1 }
						signal_company = { x = 0 y = 2 }
					}
					priority = 2
				}
				set_variable = { SOL_mobile_task_force_deployed_var = 0 }
				set_variable = { SOL_mobile_task_force_in_reserve_var = 10 }
				every_state = {
					limit = {
						has_variable = SOL_mobile_task_force_deployed_var
					}
					clear_variable = SOL_mobile_task_force_deployed_var
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_recall_pegasi_decision"
			set_country_flag = SOL_recall_pegasi_decision_in_progress_flag
		}
	}
}

SOL_resistance_activity = {
	SOL_resistance_major_attack_1 = {
		icon = generic_ignite_civil_war
		priority = 100
		allowed = { always = no }
		available = {
			hidden_trigger = { 
				check_variable = { days_mission_timeout@SOL_resistance_major_attack_1 < 1 }
			}
			divisions_in_state = {
				size > 5
				state = 3
			}
			divisions_in_state = {
				size > 1
				state = 2
			}
			divisions_in_state = {
				size > 1
				state = 68
			}
			divisions_in_state = {
				size > 1
				state = 1
			}
			divisions_in_state = {
				size > 1
				state = 103
			}
			divisions_in_state = {
				size > 1
				state = 104
			}
			divisions_in_state = {
				size > 1
				state = 39
			}
			divisions_in_state = {
				size > 1
				state = 65
			}
		}

		highlight_states = {
			highlight_state_targets = {
				state = 3
				state = 2
				state = 68
				state = 1
				state = 103
				state = 104
				state = 39
				state = 65
			}
		}
		
		selectable_mission = no
		days_mission_timeout = SOL_resistance_major_attack_duration
		days_remove = 0
		is_good = no
		fire_only_once = yes
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_major_attack_1"
			hidden_effect = {
				set_country_flag = major_attack_1_win
				clr_country_flag = major_attack_1_loss
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				remove_mission = SOL_resistance_major_attack_1
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_major_attack_1"
			effect_tooltip = {
				if = {
					limit = {
						divisions_in_state = {
							size > 5
							state = 3
						}
						divisions_in_state = {
							size > 1
							state = 2
						}
						divisions_in_state = {
							size > 1
							state = 68
						}
						divisions_in_state = {
							size > 1
							state = 1
						}
						divisions_in_state = {
							size > 1
							state = 103
						}
						divisions_in_state = {
							size > 1
							state = 104
						}
						divisions_in_state = {
							size > 1
							state = 39
						}
						divisions_in_state = {
							size > 1
							state = 65
						}
					}
					custom_effect_tooltip = SOL_resistance_major_attack_1_win_tt
				}
				else = {
					custom_effect_tooltip = SOL_resistance_major_attack_1_lose_tt
					add_political_power = -100
					add_stability = -0.05
					custom_effect_tooltip = paxsolaris_loyalty_decrease_5
					add_to_variable = { var = daybreaker_support value = -5 }
				}
			}
			hidden_effect = {
				if = {
					limit = {
						ROOT = { is_ai = yes }
					}
					set_country_flag = major_attack_1_win
					clr_country_flag = major_attack_1_loss
				}
				else = {
					add_political_power = -100
					add_stability = -0.5
					add_to_variable = { var = daybreaker_support value = -5 }
					hidden_effect = {
						set_country_flag = major_attack_1_loss
						clr_country_flag = major_attack_1_win
					}
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				remove_mission = SOL_resistance_major_attack_1
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
	}
	SOL_resistance_major_attack_1_surrounding_troops = {
		icon = generic_ignite_civil_war
		priority = 99
		allowed = { always = no }
		available = {
			hidden_trigger = { 
				check_variable = { days_mission_timeout@SOL_resistance_major_attack_1_surrounding_troops < 1 }
			}
			divisions_in_state = {
				size > 2
				state = 3
			}
			divisions_in_state = {
				size > 0
				state = 2
			}
			divisions_in_state = {
				size > 0
				state = 68
			}
			divisions_in_state = {
				size > 0
				state = 1
			}
			divisions_in_state = {
				size > 0
				state = 103
			}
			divisions_in_state = {
				size > 0
				state = 104
			}
			divisions_in_state = {
				size > 0
				state = 39
			}
			divisions_in_state = {
				size > 0
				state = 65
			}
		}

		highlight_states = {
			highlight_state_targets = {
				state = 3
				state = 2
				state = 68
				state = 1
				state = 103
				state = 104
				state = 39
				state = 65
			}
		}
		
		selectable_mission = no
		days_mission_timeout = SOL_resistance_major_attack_duration
		is_good = no
		days_remove = 0
		fire_only_once = yes
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_major_attack_1"
			hidden_effect = {
				set_country_flag = major_attack_1_win
				clr_country_flag = major_attack_1_loss
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				remove_mission = SOL_resistance_major_attack_1
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_major_attack_1_surrounding_troops"
			effect_tooltip = {
				if = {
					limit = {
						divisions_in_state = {
							size > 2
							state = 3
						}
						divisions_in_state = {
							size > 0
							state = 2
						}
						divisions_in_state = {
							size > 0
							state = 68
						}
						divisions_in_state = {
							size > 0
							state = 1
						}
						divisions_in_state = {
							size > 0
							state = 103
						}
						divisions_in_state = {
							size > 0
							state = 104
						}
						divisions_in_state = {
							size > 0
							state = 39
						}
						divisions_in_state = {
							size > 0
							state = 65
						}
					}
					custom_effect_tooltip = SOL_resistance_major_attack_1_win_tt
				}
				else = {
					custom_effect_tooltip = SOL_resistance_major_attack_1_lose_tt
					add_political_power = -100
					add_stability = -0.05
					custom_effect_tooltip = paxsolaris_loyalty_decrease_5
					add_to_variable = { var = daybreaker_support value = -5 }
				}
			}
			hidden_effect = {
				if = {
					limit = {
						ROOT = { is_ai = yes }
					}
					set_country_flag = major_attack_1_win
					clr_country_flag = major_attack_1_loss
				}
				else = {
					add_political_power = -100
					add_stability = -0.5
					add_to_variable = { var = daybreaker_support value = -5 }
					hidden_effect = {
						set_country_flag = major_attack_1_loss
						clr_country_flag = major_attack_1_win
					}
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
				country_event = {
					id = paxsolaris.211
				}
				country_event = {
					id = paxsolaris.212
					days = 3
				}
				remove_mission = SOL_resistance_major_attack_1
				activate_mission = SOL_siege_of_whinnyapolis 
				70 = { set_state_flag = SOL_ongoing_uprising }
			}
		}
	}
	SOL_siege_of_whinnyapolis = {
		icon = rifles_whinnyapolis
		priority = 98
		available = {		
			divisions_in_state = {
				size > 5
				state = 70
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_states = {
			highlight_state_targets = {
				state = 70
			}
		}
		
		allowed = {
			always = no
		}
		
		is_good = no
		days_mission_timeout = 4.9
		selectable_mission = yes
		fire_only_once = yes
		
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_siege_of_whinnyapolis"
			custom_effect_tooltip = paxsolaris_resistance_strength_decrease
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			add_to_variable = { var = solar_resistance_actions_progress value = -1 }
			70 = { clr_state_flag = SOL_ongoing_uprising } 
			hidden_effect = { SOL_calculate_loyalty = yes }
			hidden_effect = {
				country_event = {
					id = paxsolaris.213
					days = 10
				}
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				remove_mission = SOL_siege_of_whinnyapolis
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_siege_of_whinnyapolis"
			add_to_variable = { var = solar_resistance_actions_progress value = 1 }
			custom_effect_tooltip = paxsolaris_resistance_strength_increase
			hidden_effect = { SOL_calculate_loyalty = yes }
			add_to_variable = { var = SOL_siege_of_whinnyapolis_counter value = 1 }
			hidden_effect = {
				if = { 
					limit = { 
						check_variable = { SOL_siege_of_whinnyapolis_counter < 5 } 
						is_ai = no
					}
					remove_mission = SOL_siege_of_whinnyapolis
					activate_mission = SOL_siege_of_whinnyapolis
				}
				else = {
					70 = { clr_state_flag = SOL_ongoing_uprising } #Basically a mercy rule so the player isn't absolutely fucked
					country_event = {
						id = paxsolaris.213
						days = 10
					}
				}
			}
			70 = {
				damage_building = {
					type = rail_way
					damage = 1
					province = 9887
				}
				if = {
					limit = { 
						non_damaged_building_level = {
							building = infrastructure
							level > 0	
						}
					}
					damage_building = {
						type = infrastructure
						damage = 1
					}
				}
				if = {
					limit = { 
						non_damaged_building_level = {
							building = arms_factory
							level > 0		
						}
					}
					damage_building = {
						type = arms_factory
						damage = 1
					}
				}
				if = {
					limit = { 
						non_damaged_building_level = {
							building = industrial_complex
							level > 0		
						}
					}
					damage_building = {
						type = industrial_complex
						damage = 1
					}
				}
			}
		}
	}
	SOL_long_march = {
		icon = GFX_decision_smash_resistance
		priority = 97
		available = {	
			divisions_in_state = {
				size > 5
				state = FROM
			}
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_controlled_tt
				any_state = { #Yes, I know this is a weird way to do it. But this is the only way to prevent the game spitting out annoying errors. 
					state = FROM
					is_controlled_by = ROOT
				}
			}
		}
		
		ai_will_do = {
			base = 100
		}

		allowed = {
			always = no
		}
		
		is_good = no
		days_mission_timeout = 10
		selectable_mission = yes
		fire_only_once = yes

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_long_march"
			custom_effect_tooltip = SOL_long_march_fail_tt
			hidden_effect = {
				add_to_variable = { SOL_long_march_num = 1 }
				if = {
					limit = { check_variable = { SOL_long_march_num < 3 } }
					remove_targeted_decision = { target = FROM decision = SOL_long_march }
					activate_targeted_decision = { target = var:SOL_long_march_current_state_array^SOL_long_march_num decision = SOL_long_march }
				}
				else = {
					random_owned_controlled_state = {
						limit = {
							SOL_eligible_for_state_events = yes
							check_variable = { SOL_public_works_region_id = 2 }
						}
						save_global_event_target_as = SOL_resistance_stronghold
					}
					country_event = { id = paxsolaris.230 hours = 1 }
					set_country_flag = sol_allow_paxsolaris_231
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_long_march"
			custom_effect_tooltip = paxsolaris_resistance_strength_decrease
			add_to_variable = { var = solar_resistance_actions_progress value = -1 }
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = {
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				add_to_variable = { SOL_long_march_num = 1 }
				if = {
					limit = { check_variable = { SOL_long_march_num < 3 } }
					remove_targeted_decision = { target = FROM decision = SOL_long_march }
					activate_targeted_decision = { target = var:SOL_long_march_current_state_array^SOL_long_march_num decision = SOL_long_march }
				}
				else = {
					random_owned_controlled_state = {
						limit = {
							SOL_eligible_for_state_events = yes
							check_variable = { SOL_public_works_region_id = 2 }
						}
						save_global_event_target_as = SOL_resistance_stronghold
					}
					country_event = { id = paxsolaris.230 hours = 1 }
					set_country_flag = sol_allow_paxsolaris_231
				}			
			}
		}
	}
	SOL_resistance_attack = {
		icon = GFX_decision_resistance_attack
		priority = 50
		allowed = { always = no }
		fixed_random_seed = no
		is_good = no
		available = {		
			hidden_trigger = {
				event_target:SOL_resistance_attack_target_true = { meets_division_requirements_attack = yes }
				check_variable = { days_mission_timeout@SOL_resistance_attack < 1 }
			}
			if = {
				limit = { has_country_flag = first_refine_completed }
				OR = {
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_1 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_1 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_1 = { is_owned_and_controlled_by = event_target:solar_empire }
						}
						event_target:SOL_resistance_attack_target_1 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_2 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_2 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_2 = { is_owned_and_controlled_by = event_target:solar_empire }
						}
						event_target:SOL_resistance_attack_target_2 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_3 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_3 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_3 = { is_owned_and_controlled_by = event_target:solar_empire }
						}
						event_target:SOL_resistance_attack_target_3 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_4 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_4 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_4 = { is_owned_and_controlled_by = event_target:solar_empire }
						}
						event_target:SOL_resistance_attack_target_4 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_5 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_5 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_5 = { is_owned_and_controlled_by = event_target:solar_empire }
							NOT = { has_country_flag = SOL_twilight_ascended }
						}
						event_target:SOL_resistance_attack_target_5 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}
					if = {
						limit = { 
							OR = {
								event_target:SOL_resistance_attack_target_6 = { has_state_flag = resistance_attack_dummy_target }
								event_target:SOL_resistance_attack_target_6 = { has_state_flag = resistance_attack_true_target }
							}
							event_target:SOL_resistance_attack_target_6 = { is_owned_and_controlled_by = event_target:solar_empire }
							NOT = { has_country_flag = upgraded_inquisition }
						}
						event_target:SOL_resistance_attack_target_6 = {
							custom_trigger_tooltip = {
								tooltip = SOL_state_attack_division_requirements_tt
								meets_division_requirements_attack = yes
							}
						}
					}	
				}
			}
		}
		
		ai_will_do = {
			base = 100
		}

		highlight_states = {
			highlight_states_trigger = {
				if = {
					limit = { EQS = { has_country_flag = first_refine_completed } }
					OR = {
						has_state_flag = resistance_attack_dummy_target
						has_state_flag = resistance_attack_true_target
					}
				}
				else = {
					always = no
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = {
				has_country_flag = resistance_ceasefire
				check_variable = { resistance_attack_blocked > 0 }
				has_country_flag = sol_resistance_decapitated
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_resistance_attack"
			hidden_effect = {
				every_state ={
					clr_state_flag = resistance_attack_dummy_target
					clr_state_flag = resistance_attack_true_target
				}
				clear_array = EQS.SOL_resistance_attack_target_array
				clr_country_flag = SOL_has_ongoing_attack
				remove_mission = SOL_resistance_attack
			}
		}

		days_mission_timeout = resistance_attack_mission_dur
		days_remove = 0
		selectable_mission = no
		fire_only_once = yes
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_attack"
			hidden_effect = {
				country_event = paxsolaris.80
				every_state ={
					clr_state_flag = resistance_attack_dummy_target
					clr_state_flag = resistance_attack_true_target
				}
				clear_array = EQS.SOL_resistance_attack_target_array
				clr_country_flag = SOL_has_ongoing_attack
				remove_mission = SOL_resistance_attack
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_resistance_attack"
			if = {
				limit = {
					has_country_flag = first_refine_completed
				}
				custom_effect_tooltip = SOL_resistance_attack_outcome_tt
			}
			else = {
				custom_effect_tooltip = SOL_resistance_attack_outcome_tt_none
			}
			hidden_effect = {
				random_list = {
					1 = {
						country_event = paxsolaris.81
						event_target:SOL_resistance_attack_target_true = { set_state_flag = sol_past_resistance_activity }
						every_state ={
							clr_state_flag = resistance_attack_dummy_target
							clr_state_flag = resistance_attack_true_target
						}
						clear_array = EQS.SOL_resistance_attack_target_array
						clr_country_flag = SOL_has_ongoing_attack
						remove_mission = SOL_resistance_attack
					}
					3 = {
						modifier = {
							factor = 0
							is_ai = no
						}
						country_event = paxsolaris.80
						every_state ={
							clr_state_flag = resistance_attack_dummy_target
							clr_state_flag = resistance_attack_true_target
						}
						clear_array = EQS.SOL_resistance_attack_target_array
						clr_country_flag = SOL_has_ongoing_attack
						remove_mission = SOL_resistance_attack
					}
				}
			}
		}
	}
	SOL_refine_resistance_attack = {
		icon = GFX_decision_resistance_attack_counter
		priority = 49
		visible = {
			is_SOLAR_EMPIRE = yes
			hidden_trigger = {
				has_active_mission = SOL_resistance_attack
				OR = {
					NOT = { has_country_flag = first_refine_completed }
					any_state = {
						has_state_flag = resistance_attack_dummy_target
					}
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
		custom_cost_trigger = {
			check_variable = {
				var = SOL_lead_variable
				value = 10
				compare = greater_than_or_equals
			}
		}
		custom_cost_text = decision_cost_leads_10
		fire_only_once = no
		fixed_random_seed = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_refine_resistance_attack"
			if = {
				limit = { NOT = { has_country_flag = first_refine_completed } }
				hidden_effect = { 
					subtract_from_variable = { 
						var = SOL_lead_variable
						value = 10
					}
				}
				custom_effect_tooltip = refine_resistance_attack_decision_outcome_first
				set_country_flag = first_refine_completed
			}
			else = {
				hidden_effect = {
					subtract_from_variable = {
						var = SOL_lead_variable
						value = 10
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
					}
					random_state = {
						limit = { has_state_flag = resistance_attack_dummy_target }
						clr_state_flag = resistance_attack_dummy_target
					}
				}
				custom_effect_tooltip = refine_resistance_attack_decision_outcome
			}
		}
	}
	SOL_resistance_cohesion = {
		icon = GFX_decision_resistance_cohesion
		priority = 40
		allowed = { always = no }
		fixed_random_seed = no
		available = {		
			hidden_trigger = {
				check_variable = { days_mission_timeout@SOL_resistance_cohesion < 1 }
			}
		}
		
		ai_will_do = {
			base = 100
		}
		cancel_trigger = {
			hidden_trigger = {
				has_country_flag = resistance_ceasefire
				has_country_flag = sol_resistance_decapitated
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_resistance_cohesion"
			hidden_effect = {
				clr_country_flag = SOL_has_ongoing_cohesion
				remove_mission = SOL_resistance_cohesion
			}
		}
		is_good = no
		days_mission_timeout = 200
		days_remove = 0
		selectable_mission = no
		fire_only_once = yes
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_resistance_cohesion"
			custom_effect_tooltip = paxsolaris_resistance_cohesion_increase
			hidden_effect = {
				add_to_variable = { var = solar_resistance_cohesion_actions_progress value = 1 }
				clr_country_flag = SOL_has_ongoing_cohesion
				remove_mission = SOL_resistance_cohesion
			}
		}
	}
	SOL_state_uprising_decision = {
		icon = generic_ignite_civil_war
		
		available = {
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_division_requirements_tt
				FROM = {
					meets_division_requirements_uprising = yes
				}
			}
			custom_trigger_tooltip = {
				tooltip = SOL_state_uprising_controlled_tt
				any_state = { #Yes, I know this is a weird way to do it. But this is the only way to prevent the game spitting out annoying errors. 
					state = FROM
					is_fully_controlled_by = ROOT
				}
			}
		}
		
		ai_will_do = {
			base = 100
		}
		allowed = {
			always = no
		}
		selectable_mission = yes
		days_mission_timeout = resistance_uprising_dur
		is_good = no
		fire_only_once = yes
		fixed_random_seed = no
		cancel_trigger = {
			hidden_trigger = {
				any_state = { #Yes, I know this is a weird way to do it. But this is the only way to prevent the game spitting out annoying errors. 
					state = FROM
					NOT = { is_controlled_by = ROOT } 
				}
				has_country_flag = resistance_ceasefire
			}
		}
		on_map_mode = map_and_decisions_view
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SOL_state_uprising_decision"
			hidden_effect = { 
				FROM = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				remove_targeted_decision = { target = FROM decision = SOL_state_uprising_decision }
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_state_uprising_decision"
			custom_effect_tooltip = SOL_state_uprising_pacified
			custom_effect_tooltip = SOL_state_uprising_decision_lead_gain_tt
			hidden_effect = { 
				FROM = { 
					clr_state_flag = SOL_ongoing_uprising
				} 
				SOL_calculate_leads_small = yes
				add_to_variable = { var = SOL_lead_variable value = lead_counter }
				remove_targeted_decision = { target = FROM decision = SOL_state_uprising_decision }
			}
		}
		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_state_uprising_decision"
			add_to_variable = { var = solar_civilian_measures_progress value = -1 }
			custom_effect_tooltip = SOL_will_lose_control_of_state
			custom_effect_tooltip = paxsolaris_government_consolidation_decrease
			remove_state_core = FROM
			add_state_claim = FROM
			add_political_power = -20
			add_stability = -0.025
			hidden_effect = { 
				FROM = { 
					set_state_flag = SOL_overrun_by_resistance 
					clr_state_flag = SOL_ongoing_uprising
					if = {
						limit = {
							has_dynamic_modifier = { modifier = SOL_infrastructure_hardening_bonus }
						}
						add_dynamic_modifier = { modifier = SOL_uprising_trains }
					}
					else = {
						add_dynamic_modifier = { modifier = SOL_uprising }
					}	
				} 
				remove_targeted_decision = { target = FROM decision = SOL_state_uprising_decision }
			}
			hidden_effect = { SOL_calculate_loyalty = yes }
		}
	}
}

SOL_uniting_equestria = {
	SOL_demand_breakaway = {
		icon = GFX_decision_sol_border_war
		targets = { SCS LSP BAL VAN NMS CES JUN }
		target_trigger = {
			FROM = { 
				is_civ_war_breakaway = yes
			}
		}
		targets_dynamic = yes
		target_root_trigger = {
		    hidden_trigger = { has_country_flag = SOL_uniting_equestria_decision_unlock }
		}
		visible = {
			hidden_trigger = { has_country_flag = SOL_uniting_equestria_decision_unlock }
			FROM = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
				NOT = { has_war_with = ROOT  }
			}
		}
		cancel_trigger = {
			hidden_trigger = {
				NOT = {
					FROM = {
						exists = yes
						OR = {
							is_subject_of = ROOT
							is_in_faction_with = ROOT
						}
						NOT = { has_war_with = ROOT  }
					}
				}
			}
		}
		allowed = {
			tag = EQS
		}
		fire_only_once = no
		ai_will_do = {
			factor = 100
		}
		cost = 20
		days_remove = 10
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_demand_breakaway: [From.GetName]"
			FROM = { country_event = paxsolaris.133 }
		}
	}
	SOL_invade_breakaway = {
		icon = GFX_decision_mark_states
		priority = 20
		available = {
			custom_trigger_tooltip = {
				tooltip = SOL_not_already_preparing_invasion
				NOT = { has_country_flag = SOL_preparing_to_attack_country }
			}
		}
		targets = { SCS LSP BAL VAN NMS CES JUN }
		target_trigger = {
			FROM = { 
				is_civ_war_breakaway = yes
			}
		}
		targets_dynamic = yes
		target_root_trigger = {
		    hidden_trigger = { has_country_flag = SOL_uniting_equestria_decision_unlock }
		}
		visible = {
			hidden_trigger = { 
				has_country_flag = SOL_uniting_equestria_decision_unlock
				FROM = {
					exists = yes
					NOT = {
						is_subject_of = ROOT
						has_war_with = ROOT 
						is_in_faction_with = ROOT
					}
				}
			}
		}
		cancel_trigger = {
			hidden_trigger = {
				FROM = {
					OR = {
						exists = no
						is_subject_of = ROOT
						has_war_with = ROOT 
						is_in_faction_with = ROOT
					}
				}
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_invade_breakaway target: [From.GetName]"
			hidden_effect = {
				FROM = {
	                add_ai_strategy = {
	                    type = prepare_for_war
	                    id = ROOT
	                    value = 1000
	                }
	                save_global_event_target_as = SOL_strike_foe_target
	            }
				set_country_flag = SOL_preparing_to_attack_country 
				if = {
				    limit = {
					    FROM = {
						    is_ai = no
						}
					}
					country_event = { 
						id = paxsolaris.132
					}
				} 
			}
		}
		allowed = {
			tag = EQS
		}
		fire_only_once = no
		ai_will_do = {
			factor = 100
			modifier = {
				factor = 0
				OR = {
					has_idea = SOL_military_desertion_5
					has_idea = SOL_military_desertion_4
					has_idea = SOL_military_desertion_3
				}
			}
			modifier = {
				factor = 0
				has_war = yes
			}
		}
		cost = 20
		days_remove = 30
		war_with_target_on_remove = yes
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SOL_invade_breakaway target: [From.GetName]"
			hidden_effect = {
				FROM = {
	                add_ai_strategy = {
	                    type = prepare_for_war
	                    id = ROOT
	                    value = -1000
	                }
	                clear_global_event_target = SOL_strike_foe_target
	            }
				clr_country_flag = SOL_preparing_to_attack_country
				create_wargoal = { 
					type = annex_everything 
					target = FROM
				}
			}
			declare_war_on = {
                target = FROM
                type = annex_everything
            }
		}
	}
}

prospect_for_resources = {
	SOL_raven_highground_ores = {

		icon = tungsten
		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 230
			}
		}
		available = {
			has_tech = excavation3
			230 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 1
		}
		visible = {
			has_country_flag = SOL_unlocked_new_resource_prospecting
			230 = { is_owned_and_controlled_by = ROOT }
			230 = {
				NOT = {
					has_state_flag = raven_highground_ores
				}
			}
		}
		fire_only_once = yes
		cost = 60
		days_remove = 60

		modifier = {
			civilian_factory_use = 2
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@tungsten < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_raven_highground_ores"
			230 = { set_state_flag = raven_highground_ores }
			230 = {
				add_resource = {
					type = tungsten
					amount = 20
				}
			}
		}
	}
	SOL_smokey_mountain_chromium = {

		icon = chromium
		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 18
			}
		}
		available = {
			has_tech = excavation3
			18 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 1
		}
		visible = {
			has_country_flag = SOL_unlocked_new_resource_prospecting
			18 = { is_owned_and_controlled_by = ROOT }
			18 = {
				NOT = {
					has_state_flag = smokey_mountain_chromium
				}
			}
		}
		fire_only_once = yes
		cost = 60
		days_remove = 60

		modifier = {
			civilian_factory_use = 2
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@chromium < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_smokey_mountain_chromium"
			18 = { set_state_flag = smokey_mountain_chromium }
			18 = {
				add_resource = {
					type = chromium
					amount = 12
				}
			}
		}
	}
	SOL_whinnyapolis_mega_foundaries = {

		icon = generic_construction
		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 70
			}
		}
		available = {
			has_tech = assembly_line_production
			70 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 1
		}
		visible = {
			has_country_flag = SOL_unlocked_new_resource_production
			70 = { is_owned_and_controlled_by = ROOT }
			70 = {
				NOT = {
					has_state_flag = whinnyapolis_mega_foundaries
				}
			}
		}
		fire_only_once = yes
		cost = 60
		days_remove = 60

		modifier = {
			civilian_factory_use = 2
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@steel < 5 }
				add = 1
			}
			modifier = {
				check_variable = { resource@chromium < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_whinnyapolis_mega_foundaries"
			70 = { set_state_flag = whinnyapolis_mega_foundaries }
			70 = {
				add_resource = {
					type = steel
					amount = 10
				}
				add_resource = {
					type = chromium
					amount = 10
				}
			}
		}
	}
	SOL_april_grove_aluminium = {

		icon = aluminium
		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 107
			}
		}
		available = {
			has_tech = excavation3
			107 = { is_owned_and_controlled_by = ROOT }
			107 = {
				has_state_flag = apple_groove_mines_developed
			}
			num_of_civilian_factories_available_for_projects > 2
		}
		visible = {
			has_country_flag = SOL_unlocked_new_resource_prospecting
			107 = { is_owned_and_controlled_by = ROOT }
			107 = {
				NOT = {
					has_state_flag = april_grove_aluminium
				}
			}
		}
		fire_only_once = yes
		cost = 70
		days_remove = 70

		modifier = {
			civilian_factory_use = 3
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@aluminium < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_april_grove_aluminium"
			107 = { set_state_flag = april_grove_aluminium }
			107 = {
				add_resource = {
					type = aluminium
					amount = 20
				}
			}
		}
	}
	SOL_marechester_forges = {

		icon = steel
		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 170
			}
		}
		available = {
			has_tech = assembly_line_production
			170 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 1
		}
		visible = {
			has_country_flag = SOL_unlocked_new_resource_production
			170 = { is_owned_and_controlled_by = ROOT }
			170 = {
				NOT = {
					has_state_flag = marechester_forges
				}
			}
		}
		fire_only_once = yes
		cost = 70
		days_remove = 70

		modifier = {
			civilian_factory_use = 2
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@steel < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_marechester_forges"
			170 = { set_state_flag = marechester_forges }
			170 = {
				add_resource = {
					type = steel
					amount = 16
				}
			}
		}
	}
	SOL_twilight_range_crystal_deposits = {

		icon = crystals

		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 128
			}
		}
		available = {
			has_tech = excavation3
			128 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 2
		}

		visible = {
			has_country_flag = SOL_unlocked_new_resource_prospecting
			128 = { is_owned_and_controlled_by = ROOT }
			128 = {
				NOT = {
					has_state_flag = mareland_minerals
				}
			}
		}

		fire_only_once = yes

		cost = 70
		days_remove = 70

		modifier = {
			civilian_factory_use = 3
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@crystals < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_twilight_range_crystal_deposits"
			128 = { set_state_flag = mareland_minerals }
			128 = {
				add_resource = {
					type = crystals
					amount = 20
				}
			}
		}
	}
	SOL_itzomitl_rubber_plantations = {

		icon = rubber

		allowed = {
			original_tag = EQS
		}
		highlight_states = {
			highlight_state_targets = {
				state = 352
			}
		}
		available = {
			has_tech = improved_rubber_processing 
			352 = { is_owned_and_controlled_by = ROOT }
			num_of_civilian_factories_available_for_projects > 2
		}

		visible = {
			has_country_flag = SOL_unlocked_new_resource_prospecting
			352 = { is_owned_and_controlled_by = ROOT }
			352 = {
				NOT = {
					has_state_flag = itzomitl_rubber_plantations
				}
			}
		}

		fire_only_once = yes

		cost = 70
		days_remove = 70

		modifier = {
			civilian_factory_use = 3
		}

		ai_will_do = {
			factor = 0
			modifier = {
				check_variable = { resource@rubber < 5 }
				add = 1
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_itzomitl_rubber_plantations"
			352 = { set_state_flag = itzomitl_rubber_plantations }
			352 = {
				add_resource = {
					type = rubber
					amount = 22
				}
			}
		}
	}
}

SOL_mandates = {
	SOL_CHN_mandate = {
		icon = GFX_decision_solar_form_SMC
		available = {
			is_SOLAR_EMPIRE = yes
			custom_trigger_tooltip = {
				tooltip = SOL_CHN_states_tooltip
				NOT = {
					any_state = {
						has_variable = SOL_public_works_region_id
						OR = {
							check_variable = { SOL_public_works_region_id = 11 }
							check_variable = { SOL_public_works_region_id = 12 }
						}
						NOT = {
							OR = {
								is_owned_and_controlled_by = EQS
								owner = { SOL_can_force_transfer = yes }
							}
						}
					}
					AND = {
						has_country_flag = sol_released_smc
						has_country_flag = sol_released_smv
					}
				}
			}
			AND = {
				SMC = { exists = no }
				SMV = { exists = no }
			}
		}
		
		cancel_trigger = {
			hidden_trigger = {
				OR = {
					any_state = {
						has_variable = SOL_public_works_region_id
						OR = {
							check_variable = { SOL_public_works_region_id = 11 }
							check_variable = { SOL_public_works_region_id = 12 }
						}
						NOT = {
							OR = {
								is_owned_and_controlled_by = EQS
								owner = { SOL_can_force_transfer = yes }
							}
						}
					}
					AND = {
						has_country_flag = sol_released_smc
						has_country_flag = sol_released_smv
					}
					AND = {
						SMC = { exists = yes }
						SMV = { exists = yes }
					}
				}
			}
		}

        cost = 20
		days_remove = 30

		allowed = {
			tag = EQS
		}
		fire_only_once = no
		ai_will_do = {
			factor = 100
		}

		visible = {
			is_SOLAR_EMPIRE = yes
			has_country_flag = SOL_unlocked_mandate_CHN
			NOT = {
				AND = {
					has_country_flag = sol_released_smc
					has_country_flag = sol_released_smv
				}
			}
			AND = {
				SMC = { exists = no }
				SMV = { exists = no }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SOL_changeling_mandate"
			custom_effect_tooltip = SOL_CHN_mandate_tt
			country_event = { id = smc.1 hours = 1 }
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision SOL_changeling_mandate"
		}
	}
}