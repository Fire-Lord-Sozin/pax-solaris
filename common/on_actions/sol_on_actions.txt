on_actions = {
	on_nuke_drop = {
		effect = {
			if = {
				limit = { FROM = { NOT = { has_state_flag = skip_nuke_alert } } }
				FROM = { 
					owner = { 
						PREV = { save_global_event_target_as = nuked_state } 
						ROOT = { save_global_event_target_as = nuker_country } 
						clear_variable = sol_alert_popup_show
						set_variable = { sol_alert_title_var = 4 }
						set_variable = { sol_alert_desc_var = 11 }
						set_variable = { var = sol_alert_popup_show value = 1 }
					} 
				}
			}
			else = {
				FROM = { clr_state_flag = skip_nuke_alert }
			}
		}
	}
	on_state_control_changed = {
		effect = {
			FROM = {
				save_event_target_as = former_controller
			}
			if = {
				limit = {
					FROM = { 
						OR = {
							tag = NLR 
							tag = NLH
						}
					}
					ROOT = { is_SOLAR_EMPIRE = yes }
				}
				FROM.FROM = {	
					save_global_event_target_as = SOL_NLR_last_state
				}
			}
			if = {
				limit = {
					has_war_with = FROM
					has_country_flag = sol_turning_the_tide
					is_SOLAR_EMPIRE = yes
					FROM.FROM = {
						has_state_flag = SOL_state_fall
					}
				}
				add_to_variable = { var = daybreaker_support value = 3 }
				FROM.FROM = {
					clr_state_flag =  SOL_state_fall
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
			}
			if = {
				limit = {
					has_war_with = FROM
					is_SOLAR_EMPIRE = yes
					NOT = { has_country_flag = SOL_reconstruction_complete }
					FROM.FROM = {
						has_variable = SOL_public_works_region_id
						NOT = { has_state_flag = SOL_wartorn_state }
					}
				}
				FROM.FROM = {
					set_state_flag =  SOL_wartorn_state
				}
			}
			if = {
				limit = {
					FROM = { is_SOLAR_EMPIRE = yes }
					FROM.FROM = { 
						has_state_flag = SOL_overrun_by_resistance
					}
				}
				FROM.FROM = {
					add_core_of = EQS
					SOL_remove_uprising = yes
				}
			}
			if = {
				limit = {
					has_war_with = FROM
					FROM = { is_SOLAR_EMPIRE = yes }
					FROM.FROM = {
						is_owned_by = event_target:solar_empire
						OR = {
							state = 132 #Shire
							state = 66 #Los Pegasus
							state = 75 #Manehattan
							state = 3 #Canterlot
							state = 14 #Vanhoover
							state = 59 #Tall Tale
							state = 13 #Baltimare
							state = 136 #Acornage
							state = 12 #Fillydelphia
							state = 70 #Whinnyapolis
							state = 74 #Bales
							state = 38 #Rockville
							state = 525 #Albion
							state = 2 #Ponyville
						}
						NOT = { has_state_flag = SOL_timeout }

					}
				}
				FROM = {
					add_to_variable = { var = daybreaker_support value = -3 } #Support is lost if Daybreaker loses key cities
					hidden_effect = { SOL_calculate_loyalty = yes }
				}
				FROM.FROM = { 
					set_state_flag = SOL_timeout
				}
			}
			if = {
				limit = { 
					EQS = { is_SOLAR_EMPIRE = yes }
					ROOT = { 
						OR = {
							is_SOLAR_EMPIRE = yes 
							SOL_can_force_transfer = yes
						}
					}
					FROM.FROM = {
						is_fully_controlled_by = ROOT
						is_owned_by = ROOT
					}
				}
				FROM.FROM = { SOL_transfer_recent_states = yes }
			}
			if = {
				limit = {
					FROM = {
						is_SOLAR_EMPIRE = yes 
						has_country_flag = SOL_scorched_earth_active
					}
				}
				FROM.FROM = {
					damage_building = {
						type = synthetic_refinery
						damage = 5
					}
					damage_building = {
						type = dockyard
						damage = 5
					}
					damage_building = {
						type = arms_factory
						damage = 8
					}
					damage_building = {
						type = industrial_complex
						damage = 5
					}
					damage_building = {
						type = fuel_silo
						damage = 5
					}
					damage_building = {
						type = rocket_site
						damage = 1
					}
					damage_building = {
						type = infrastructure
						damage = 3
					}
					damage_building = {
						type = nuclear_reactor
						damage = 0.5
					}
					damage_building = {
						type = rail_way
						damage = 3
					}
				}
			}
		}
	}
	on_weekly_EQS = {
		effect = {
			if = {
				limit = {
					EQS = { exists = yes }
					is_SOLAR_EMPIRE = yes
				}
				add_to_variable = { var = SOL_lead_variable value = weekly_leads }
				
				if = {
					limit = {
						NOT = { has_country_flag = resistance_ceasefire }
						has_country_flag = march_on_canterlot
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								OR = {
									NOT = { has_country_flag = SOL_resistance_begins }
									check_variable = { resistance_attack_blocked > 0 }
									has_country_flag = resistance_ceasefire
									has_country_flag = SOL_no_unorganised_resistance_activity
								}
							}
							modifier = {
								factor = 0.75
								has_completed_focus = SOL_tighten_the_noose
							}
							modifier = {
								factor = 0.5
								is_ai = yes
							}
							modifier = {
								factor = 0.5
								has_country_flag = SOL_martial_law_active
							}
							modifier = {
								factor = 0.9
								has_completed_focus = SOL_surveillance
							}
							modifier = {
								factor = 0.5
								has_country_flag = resistance_deescalation
							}
							clear_variable = sol_alert_popup_show
							SOL_calculate_resistance_target = yes
							random_list = {
								1 = {
									set_variable = { outreach_strength_calculation_temp = solar_resistance_strength }
									divide_variable = { outreach_strength_calculation_temp = 5 }
									SOL_calculate_probability = yes
									if = {
										limit = { has_country_flag = civilian_informants }
										add_to_variable = { var = outreach_strength_calculation_temp value = -0.05 }
									}
									if = {
										limit = { has_completed_focus = SOL_decentralised_inquisitorial_policing }
										add_to_variable = { var = outreach_strength_calculation_temp value = -0.1 }
									}
									if = {
										limit = { event_target:SOL_resistance_activity = { has_dynamic_modifier = { modifier = SOL_infrastructure_hardening_bonus } } }
										add_to_variable = { var = outreach_strength_calculation_temp value = -0.1 }
									}
									if = {
										limit = { has_idea = SOL_changeling_interferance }
										add_to_variable = { var = outreach_strength_calculation_temp value = 0.3 }
									}
									if = {
										limit = { check_variable = { outreach_strength_calculation_temp > probability_check } }
										set_variable = { sol_alert_outcome_var = 2 }
										add_to_variable = { var = solar_resistance_outreach_actions_progress value = 1 }
									}
									else = {
										set_variable = { sol_alert_outcome_var = 1 }
										SOL_calculate_leads_small = yes
										add_to_variable = { var = SOL_lead_variable value = lead_counter }
									}
									set_variable = { sol_alert_desc_var = 1 }
								}
								1 = {
									set_variable = { civilian_strength_calculation_temp = solar_civilian_support }
									divide_variable = { civilian_strength_calculation_temp = 5 }
									SOL_calculate_probability = yes
									if = {
										limit = { has_country_flag = civilian_informants }
										add_to_variable = { var = civilian_strength_calculation_temp value = 0.05 }
									}
									if = {
										limit = { has_completed_focus = SOL_decentralised_inquisitorial_policing }
										add_to_variable = { var = civilian_strength_calculation_temp value = 0.1 }
									}
									if = {
										limit = { event_target:SOL_resistance_activity = { has_dynamic_modifier = { modifier = SOL_infrastructure_hardening_bonus } } }
										add_to_variable = { var = civilian_strength_calculation_temp value = 0.1 }
									}
									if = {
										limit = { has_idea = SOL_changeling_interferance }
										add_to_variable = { var = civilian_strength_calculation_temp value = -0.3 }
									}
									if = { 
										limit = { check_variable = { civilian_strength_calculation_temp > probability_check } }
										set_variable = { sol_alert_outcome_var = 1 }
										SOL_calculate_leads_small = yes
										add_to_variable = { var = SOL_lead_variable value = lead_counter }
									}
									else = {
										set_variable = { sol_alert_outcome_var = 2 }
										add_to_variable = { var = solar_resistance_actions_progress value = 1 }
									}
									set_variable = { sol_alert_desc_var = 2 }
								}
								1 = {
									set_variable = { military_strength_calculation_temp = solar_military_support }
									divide_variable = { military_strength_calculation_temp = 5 }
									SOL_calculate_probability = yes
									if = {
										limit = { has_country_flag = civilian_informants }
										add_to_variable = { var = military_strength_calculation_temp value = 0.05 }
									}
									if = {
										limit = { has_completed_focus = SOL_decentralised_inquisitorial_policing }
										add_to_variable = { var = military_strength_calculation_temp value = 0.1 }
									}
									if = {
										limit = { event_target:SOL_resistance_activity = { has_dynamic_modifier = { modifier = SOL_infrastructure_hardening_bonus } } }
										add_to_variable = { var = military_strength_calculation_temp value = 0.1 }
									}
									if = {
										limit = { has_idea = SOL_changeling_interferance }
										add_to_variable = { var = military_strength_calculation_temp value = -0.3 }
									}
									if = { 
										limit = { check_variable = { military_strength_calculation_temp > probability_check } }
										set_variable = { sol_alert_outcome_var = 1 }
										SOL_calculate_leads_small = yes
										add_to_variable = { var = SOL_lead_variable value = lead_counter }
									}
									else = {
										set_variable = { sol_alert_outcome_var = 2 }
										add_to_variable = { var = solar_resistance_actions_progress value = 1 }
									}
									set_variable = { sol_alert_desc_var = 3 }
								}
							}
							set_variable = { sol_alert_title_var = 1 }
							set_variable = { var = sol_alert_popup_show value = 1 }
						}
						3 = {
							#Random blank to create weeks where nothing happens
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								has_country_flag = SOL_benevolent_public_timeout
							}					
							country_event = {
								id = paxsolaris.50 	#Benign public support event
							}				
						}
						3 = {
							#Random blank to create weeks where nothing happens
						}
					}
				}
				if = {
					limit = {
						has_completed_focus = SOL_economic_miracle
						check_variable = {
							var = num_of_factories
							value = SOL_next_growth_stage
							compare = greater_than_or_equals
						}
					}
					set_variable = { SOL_next_growth_stage = num_of_factories }
					multiply_variable = { SOL_next_growth_stage = 1.1 }
					round_variable = SOL_next_growth_stage
					add_to_variable = { SOL_next_growth_stage = 1 }
					set_variable = { SOL_number_of_factories_gained = num_of_factories }
					divide_variable = { SOL_number_of_factories_gained = 100 }
					round_variable = SOL_number_of_factories_gained
					add_to_variable = { SOL_number_of_factories_gained = 1 }
					add_offsite_building = { type = industrial_complex level = SOL_number_of_factories_gained }
				}
				if = {
					limit = { 
						OR = {
							has_country_flag = SOL_automatic_upgrading_active
							is_ai = yes
						}	
					}
					every_owned_state = {
						limit = {
							is_owned_and_controlled_by = EQS
							NOT = { 
								is_core_of = EQS 
								has_variable = SOL_develop_settler_colony_civ_fac_use 
							}
							OR = {
								AND = {
									has_dynamic_modifier = { modifier = SOL_settler_colonies }
									check_variable = { sol_pony_percentage > 0.2 }
								}
								AND = {
									has_dynamic_modifier = { modifier = SOL_pony_settlement }
									check_variable = { sol_pony_percentage > 0.4 }
								}
							}
						}
						set_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = state_population_k }
						multiply_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = EQS.SOL_develop_settler_colony_civ_fac_use_multiplier }
						add_to_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = 0.5 }
						round_temp_variable = SOL_develop_settler_colony_civ_fac_use_temp
						if = {
							limit = {
								check_variable = {
									var = EQS.num_of_civilian_factories_available_for_projects
									value = SOL_develop_settler_colony_civ_fac_use_temp
									compare = greater_than_or_equals
								}
							}
							set_variable = { var = SOL_develop_settler_colony_civ_fac_use value = SOL_develop_settler_colony_civ_fac_use_temp }
							EQS = {
								add_to_variable = { var = SOL_develop_settler_colony_civ_fac_use_total value = PREV.SOL_develop_settler_colony_civ_fac_use }
								if = {
									limit = {
										PREV = {
											has_dynamic_modifier = { modifier = SOL_pony_settlement }
											check_variable = { sol_pony_percentage > 0.4 }
										}
									}
									activate_targeted_decision = { target = PREV decision = SOL_upgrade_settler_colony_decision_2 }
								}
								else_if = {
									limit = {
										PREV = {
											has_dynamic_modifier = { modifier = SOL_settler_colonies }
											check_variable = { sol_pony_percentage > 0.2 }
										}
									}
									activate_targeted_decision = { target = PREV decision = SOL_upgrade_settler_colony_decision_1 }
								}
								if = {
									limit = { has_variable = sol_display_state_decisions }
									add_to_variable = { var = sol_display_state_decisions value = 1 }
								}
							}
						}
					}
					if = {
						limit = { has_variable = sol_display_state_decisions }
						add_to_variable = { sol_display_state_decisions = 1 }
					}
				}
			}
		}
	}
	on_daily_EQS = {
		effect = {
			if = {
				limit = {
					EQS = { exists = yes }
					is_SOLAR_EMPIRE = yes
				}
				if = {
					limit = { NOT = { has_country_flag = SOL_manifest_destiny_active } }
					SOL_calculate_law_loyalty = yes
				}
				if = {
					limit = { has_country_flag = march_on_canterlot }
					add_to_variable = { var = daybreaker_support value = daybreaker_support_daily }
				}
				clamp_variable = {
					var = daybreaker_support
					min = 0
					max = 100
				}
				hidden_effect = { SOL_calculate_loyalty = yes }
				clamp_variable = {
					var = daybreaker_support
					min = 0
					max = 100
				}
				
				#Magic reserves
				if = {
					limit = {
						EQS = { has_country_flag = sol_has_unlocked_magic }
					}
					add_to_variable = { var = daybreaker_magic_reserves value = daybreaker_magic_regeneration }
					clamp_variable = {
						var = daybreaker_magic_reserves
						min = 0 
						max = daybreaker_magic_max
					}
					hidden_effect = { SOL_calculate_magic = yes }
				}

				#Public Works
				if = {
					limit = {
						EQS = { 
							has_country_flag = sol_has_unlocked_public_works 
						}
					}
					SOL_calculate_region_development = yes
					if = {
						limit = {
							check_variable = { sol_ongoing_public_works_num > 0 }
						}
						if = {
							limit = { 
								NOT = {
									OR = {
										any_country = {
											sol_is_threat = yes
											has_war_with = EQS
										}
										AND = {
											has_war = yes
											surrender_progress > 0.2
										}
									}
									has_idea = SOL_worker_strikes
								}
							}
							for_each_loop = {
								array = SOL_ongoing_public_works
								value = current_region
								if = {
									limit = { 
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.current_region }
													NOT = { is_owned_and_controlled_by = EQS }
												}
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
							for_each_loop = {
								array = SOL_ongoing_urban_planning
								value = current_region
								if = {
									limit = { 
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.current_region }
													NOT = { is_owned_and_controlled_by = EQS }
												}
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
							for_each_loop = {
								array = SOL_ongoing_agmech
								value = current_region
								if = {
									limit = { 
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.current_region }
													NOT = { is_owned_and_controlled_by = EQS }
												}
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
							for_each_loop = {
								array = SOL_ongoing_modern_national_development
								value = current_region
								if = {
									limit = { 
										NOT = {
											any_state = {
												AND = {
													has_variable = SOL_public_works_region_id
													check_variable = { SOL_public_works_region_id < 11 }
													NOT = { is_owned_and_controlled_by = EQS }
												}
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
						}
						if = {
							limit = {
								NOT = { has_idea = SOL_worker_strikes }
							}
							for_each_loop = {
								array = SOL_ongoing_infrastructure_hardening
								value = current_region
								if = {
									limit = { 
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.current_region }
												NOT = { has_state_flag = SOL_completed_infrastructure_hardening }
												is_controlled_by = EQS
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
							for_each_loop = {
								array = SOL_ongoing_strat_tele
								value = current_region
								if = {
									limit = { 
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.current_region }
												NOT = { has_state_flag = SOL_completed_strat_tele }
												is_controlled_by = EQS
											}
										}
									}
									add_to_variable = { var = SOL_public_works_duration_array^current_region value = -1 }
								}
							}
						}
						SOL_calculate_public_works_progress = yes
						if = {
							limit = {
								NOT = { EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } } }
							}
							add_dynamic_modifier = { modifier = SOL_public_works_modifier }
						}
					}
					else_if = {
						limit = {
							EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } }
						}
						remove_dynamic_modifier = { modifier = SOL_public_works_modifier }
					}
				}

				#Resistance Block
				if = {
					limit = { check_variable = { resistance_attack_blocked > 0 } }
					subtract_from_variable = { resistance_attack_blocked = 1 }
				}

				#Sarin Attack
				if = {
					limit = { has_variable = sol_gas_attack_cooldown }
					subtract_from_variable = { sol_gas_attack_cooldown = 1 }
					if = {
						limit = { 
							check_variable = { sol_gas_attack_cooldown < 91 } 
							event_target:SOL_gassed_state = { has_dynamic_modifier = { modifier = SOL_gas_attack } }
						}
						event_target:SOL_gassed_state = {
							remove_dynamic_modifier = { modifier = SOL_gas_attack } 
							remove_province_modifier = {	
								static_modifiers = { SOL_gas_attack_province }
								province = { all_provinces = yes }
							}
						}
					}
					if = {
						limit = { check_variable = { sol_gas_attack_cooldown < 1 } }
						clear_variable = sol_gas_attack_cooldown
					}
				}

				#Compliance Limit/Base/Core
				every_state = {
					limit = {
						has_variable = sol_compliance_limit
						is_controlled_by = EQS
						NOT = { is_core_of = EQS }
						check_variable = { compliance > sol_compliance_limit }
					}
					set_compliance = sol_compliance_limit 
				}
				every_state = {
					limit = {
						has_variable = sol_compliance_base
						is_controlled_by = EQS
						NOT = { is_core_of = EQS }
						check_variable = { compliance < sol_compliance_base }
					}
					set_compliance = sol_compliance_base 
				}
				every_state = {
					limit = {
						has_variable = sol_compliance_to_core
						is_controlled_by = EQS
						NOT = { is_core_of = EQS }
						check_variable = {
							var = compliance
							value = sol_compliance_to_core
							compare = greater_than_or_equals
						}
					}
					add_core_of = EQS
					SOL_remove_uprising = yes
					if = {
						limit = { has_state_flag = SOL_add_dissatisfied_natives }
						add_dynamic_modifier = { modifier = SOL_dissatisfied_natives }
						clr_state_flag = SOL_add_dissatisfied_natives
					}
				}

				#Gamer Moments
				if = {
					limit = { check_variable = { EQS.sol_states_with_genocide^num > 0 } }
					for_each_loop = {
						array = sol_states_with_genocide
						value = current_state
						var:current_state = {
							if = {
								limit = { 
									is_controlled_by = EQS 
								}
								set_temp_variable = { var = sol_non_pony_population_change_temp value = -2.5 }
								hidden_effect = { SOL_pony_population_recalculate = yes }
								add_manpower = -2500
								subtract_from_variable = { var = sol_genocide_duration value = 1 }
								if = {
									limit = {
										check_variable = {
											var = sol_genocide_duration
											value = 0
											compare = less_than_or_equals
										}
									}
									add_to_array = { EQS.sol_completed_genocide = THIS }
								}
							}
							
						}
					}
					for_each_loop = {
						array = sol_completed_genocide
						value = current_state
						var:current_state = {
							remove_from_array = { EQS.sol_states_with_genocide = THIS }
							remove_dynamic_modifier = { modifier = SOL_genocide } 
							set_state_flag = SOL_completed_genocide
							force_disable_resistance = EQS
							SOL_remove_uprising = yes
							if = {
								limit = {
									has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
								}
								add_core_of = EQS
							}
							set_variable = { sol_majority_race_id = 1 }
							SOL_genocide_custom_effects = yes
						}	
					}
					clear_array = sol_completed_genocide
				}
				if = {
					limit = { check_variable = { EQS.sol_states_with_resettlement^num > 0 } }
					for_each_loop = {
						array = sol_states_with_resettlement
						value = current_state
						var:current_state = {
							if = {
								limit = { 
									is_controlled_by = EQS 
								}
								set_temp_variable = { var = sol_non_pony_population_change_temp value = -1.5 }
								hidden_effect = { SOL_pony_population_recalculate = yes }
								add_manpower = -1500
								subtract_from_variable = { var = sol_resettlement_duration value = 1 }
								if = {
									limit = {
										check_variable = {
											var = sol_resettlement_duration
											value = 0
											compare = less_than_or_equals
										}
									}
									add_to_array = { EQS.sol_completed_resettlement = THIS }
								}
							}
							
						}
					}
					for_each_loop = {
						array = sol_completed_resettlement
						value = current_state
						var:current_state = {
							remove_from_array = { EQS.sol_states_with_resettlement = THIS }
							remove_dynamic_modifier = { modifier = SOL_resettlement } 
							set_state_flag = SOL_completed_genocide
							force_disable_resistance = EQS
							SOL_remove_uprising = yes
							if = {
								limit = {
									has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
								}
								add_core_of = EQS
							}
							set_variable = { sol_majority_race_id = 1 }
							SOL_resettlement_custom_effects = yes
						}	
					}
					clear_array = sol_completed_resettlement
				}

				#Settlement
				if = {
					limit = { check_variable = { EQS.sol_states_with_settlement^num > 0 } }
					for_each_loop = {
						array = sol_states_with_settlement
						value = current_state
						index = current_pos
						var:current_state = {
							if = {
								limit = { 
									is_owned_and_controlled_by = EQS
									OR = {
										has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
										has_dynamic_modifier = { modifier = SOL_pony_settlement }
										has_dynamic_modifier = { modifier = SOL_settler_colonies }
									}
								}
								set_temp_variable = { var = sol_pony_population_change_temp value = SOL_number_of_settlements_this_state }
								divide_temp_variable = { var = sol_pony_population_change_temp value = 1000 }
								hidden_effect = { SOL_pony_population_recalculate = yes }
								add_manpower = var:SOL_number_of_settlements_this_state
								if = {
									limit = { check_variable = { EQS.current_pos = 0 } }
									save_global_event_target_as = SOL_states_with_settlement_0
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 1 } }
									save_global_event_target_as = SOL_states_with_settlement_1
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 2 } }
									save_global_event_target_as = SOL_states_with_settlement_2
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 3 } }
									save_global_event_target_as = SOL_states_with_settlement_3
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 4 } }
									save_global_event_target_as = SOL_states_with_settlement_4
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 5 } }
									save_global_event_target_as = SOL_states_with_settlement_5
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 6 } }
									save_global_event_target_as = SOL_states_with_settlement_6
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 7 } }
									save_global_event_target_as = SOL_states_with_settlement_7
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 8 } }
									save_global_event_target_as = SOL_states_with_settlement_8
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 9 } }
									save_global_event_target_as = SOL_states_with_settlement_9
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 10 } }
									save_global_event_target_as = SOL_states_with_settlement_10
								}
								if = {
									limit = { check_variable = { EQS.current_pos = 11 } }
									save_global_event_target_as = SOL_states_with_settlement_11
								}
							}
							else = {
								add_to_array = { EQS.sol_remove_resettlement = THIS }
							}
						}
					}
					for_each_loop = {
						array = sol_remove_resettlement
						value = current_state
						var:current_state = {
							remove_from_array = { EQS.sol_states_with_settlement = THIS }
							add_to_variable = { var = EQS.SOL_number_of_settlements_available value = SOL_number_of_settlements_this_state }
							divide_variable = { var = SOL_number_of_settlements_this_state value = 1000 }
							subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_number_of_settlements_this_state }
							set_variable = { var = SOL_number_of_settlements_this_state value = 0 }
						}	
					}
					clear_array = sol_remove_resettlement
				}

				#Teleportation
				if = {
					limit = { check_variable = { SOL_teleport_armies_cooldown_var > 0 } }
					subtract_from_variable = { SOL_teleport_armies_cooldown_var = 1 }
				}

				if = {
					limit = { 
						any_country = { resistance_ceasefire_trigger = yes } 
						EQS = { NOT = { has_country_flag = resistance_ceasefire } }
						NOT = {
							AND = {
								has_global_flag = sol_war_of_the_eclipse_begun
								NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
							}
						}
					}
					EQS = {
						set_country_flag = resistance_ceasefire
						country_event = {
							id = paxsolaris.37
							days = 1
						}
					}
				}
				else_if = {
					limit = { 
						any_country = { resistance_deescalation_trigger = yes }
						EQS = { 
							NOT = { has_country_flag = resistance_deescalation } 
							NOT = { has_country_flag = resistance_ceasefire }
						}
						NOT = {
							AND = {
								has_global_flag = sol_war_of_the_eclipse_begun
								NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
							}
						}
					}
					EQS = {
						set_country_flag = resistance_deescalation
						country_event = {
							id = paxsolaris.117
							days = 1
						}
					}
				}
				if = {
					limit = {
						has_global_flag = sol_war_of_the_eclipse_begun
						NOT = { has_global_flag = sol_war_of_the_eclipse_concluded }
						NOT = {
							any_country = {
								is_solar_breakaway = yes
								has_war_with = EQS
								has_capitulated = no
								exists = yes
								is_puppet = no
							}
						}
						if = {
							limit = { has_global_flag = coalition_supporting_the_hrm }
							NOT = {
								any_country = {
									is_coalition_member = yes
									has_war_with = EQS
									has_capitulated = no
									exists = yes
									is_puppet = no
								}
							}
						}
					}
					set_global_flag = sol_war_of_the_eclipse_concluded
					SOL_war_of_the_eclipse_ending_effects = yes
					hidden_effect = { mark_focus_tree_layout_dirty = yes }
				}

				if = {
					limit = { has_variable = sol_display_state_decisions }
					add_to_variable = { sol_display_state_decisions = 1 }
				}

				if = {
					limit = {
						has_country_flag = SOL_preparing_to_attack_country
					}
					if = {
						limit = {
							event_target:SOL_strike_foe_target = {
								OR = {
									exists = no
									is_subject_of = EQS
									has_war_with = EQS
									is_in_faction_with = EQS
								}
							}
						}
						clr_country_flag = SOL_preparing_to_attack_country
						clear_global_event_target = SOL_strike_foe_target
					}
				}
			}
		}
	}
	on_declare_war = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_declare_war"
			hidden_effect = {
				if = {
					limit = {
						FROM = {
							is_in_faction = yes
							is_coalition_member = yes
						}
						ROOT = {
							is_SOLAR_EMPIRE = yes
						}
					}
					FROM = { 
						save_global_event_target_as = coalition_defender 
					}
					every_country = {
						limit = {
							NOT = { tag = FROM }
							is_in_faction_with = FROM
							is_subject = no
							is_coalition_member = yes
						}
						country_event = {
							id = coalition.10
							days = 1
						}
					}
				}
				if = {
					limit = {
						FROM = {
							is_SOLAR_EMPIRE = yes
						}
					}
					ROOT = {
						set_country_flag = {
						    flag = sol_recent_attacker
						    days = 500
						    value = 1
						}
					}
					FROM = {
						SOL_calculate_invasion_loyalty = yes
						remove_ideas = SOL_invasion_loyalty
						add_ideas = SOL_invasion_loyalty
					}
				}
				if = {
					limit = {
						FROM = {
							is_SOLAR_EMPIRE = yes
							has_country_flag = march_on_canterlot
						}
					}
					if = {
						limit = { 
							ROOT = { resistance_ceasefire_trigger = yes } 
							FROM = { NOT = { has_country_flag = resistance_ceasefire } }
						}
						EQS = {
							set_country_flag = resistance_ceasefire
							country_event = {
								id = paxsolaris.37
								days = 1
							}
						}
					}
					else_if = {
						limit = { 
							ROOT = { resistance_deescalation_trigger = yes }
							FROM = { 
								NOT = { has_country_flag = resistance_deescalation } 
								NOT = { has_country_flag = resistance_ceasefire }
							}
						}
						EQS = {
							set_country_flag = resistance_deescalation
							country_event = {
								id = paxsolaris.117
								days = 1
							}
						}
					}
				}
				if = {
					limit = {
						OR = {
							AND = {
								FROM = {
									OR = {
										is_SOLAR_EMPIRE = yes
										is_in_faction_with = EQS
										is_puppet_of = EQS
									}					
								}
								ROOT = {
									OR = {
										tag = JUN
										is_in_faction_with = JUN
										is_puppet_of = JUN
									}
								}
							}
							AND = {
								ROOT = {
									OR = {
										is_SOLAR_EMPIRE = yes
										is_in_faction_with = EQS
										is_puppet_of = EQS
									}					
								}
								FROM = {
									OR = {
										tag = JUN
										is_in_faction_with = JUN
										is_puppet_of = JUN
									}
								}
							}
						}
						has_country_flag = sol_JUN_owns_16
					}
					country_event = { id = paxsolaris.114 days = 2 }
				}
			}
		}
	}
	on_offer_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_offer_join_faction FROM = [From.GetName]"
			if = {
				limit = {
					is_coalition_member = yes
					is_in_faction_with = FROM
					FROM = {
						NOT = { has_idea = SOL_coalition_member }
					}
				}
				FROM = {
					add_ideas = SOL_coalition_member
					if = {
						limit = { has_global_flag = coalition_defensive_plan_completed }
						add_ideas = coalition_defensive_plan_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_high_command_completed }
						add_ideas = coalition_high_command_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_expeditionary_forces_completed }
						add_ideas = coalition_expeditionary_forces_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_research_completed }
						add_to_tech_sharing_group = coalition_of_free_tech_share
					}
				}
			}
		}
	}
	on_join_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_join_faction FROM = [From.GetName]"
			if = {
				limit = {
					is_coalition_member = yes
					is_in_faction_with = FROM
					FROM = {
						NOT = { has_idea = SOL_coalition_member }
					}
				}
				FROM = {
					add_ideas = SOL_coalition_member
					if = {
						limit = { has_global_flag = coalition_defensive_plan_completed }
						add_ideas = coalition_defensive_plan_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_high_command_completed }
						add_ideas = coalition_high_command_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_expeditionary_forces_completed }
						add_ideas = coalition_expeditionary_forces_project_bonus
					}
					if = {
						limit = { has_global_flag = coalition_research_completed }
						add_to_tech_sharing_group = coalition_of_free_tech_share
					}
				}
			}
		}
	}
	on_leave_faction = {
		effect = {
			log = "[GetDateText] [Root.GetName] on_leave_faction FROM = [From.GetName]"
			if = {
				limit = {
					is_coalition_member = yes
					FROM = {
						is_coalition_member = yes
					}
				}
				remove_ideas = {
					SOL_coalition_member
					SOL_coalition_surrender
					coalition_defensive_plan_project_bonus
					coalition_high_command_project_bonus
					coalition_expeditionary_forces_project_bonus
					coalition_recognise_hrm_project_bonus_1
					coalition_recognise_hrm_project_bonus_2
					coalition_recognise_hrm_project_bonus_3
					coalition_recognise_hrm_project_bonus_4
					coalition_recognise_hrm_project_bonus_5
				}
				remove_from_tech_sharing_group = coalition_of_free_tech_share
			}
		}
	}
	on_capitulation = {
		effect = {
			log = "[GetDateText]: FROM: [From.GetName] ROOT: [Root.GetName] on_capitulation"
			FROM = {
				save_global_event_target_as = winning_country
			}
			ROOT = {
				save_global_event_target_as = losing_country
			}
			if = {
				limit = {
					ROOT = { tag = NLR }
					FROM = {
						OR = {
							is_SOLAR_EMPIRE = yes
							has_war_together_with = event_target:solar_empire
						}
					}
					EQS = {
						has_war_with = NLR 
						exists = yes
						is_SOLAR_EMPIRE = yes
					}
				}
				EQS = { 
					clr_country_flag = paxsolaris_338_luna
					set_country_flag = paxsolaris_338_nmm
					country_event = paxsolaris.338 
				}
				if = {
					limit = {
						NLR = {
							NOT = {
								any_allied_country = {
									OR = {
										tag = NLR
										tag = NLH
										tag = EQR
									}
									has_capitulated = no
									exists = yes
								}
							}
						}
					}
					every_country = {
						limit = {
							is_in_faction_with = NLR
							NOT = {
								tag = NLR
								tag = EQR
								tag = NLH
							}
						}
						if = {
							limit = { has_war_with = event_target:solar_empire }
							set_country_flag = { flag = bypass_on_peaceconference_ended days = 1 value = 1 }
							white_peace = event_target:solar_empire
							every_enemy_country = {
								limit = {
									is_in_faction_with = event_target:solar_empire
								}
								white_peace = ROOT
							}
						}
					}
					every_country = {
						limit = {
							has_capitulated = yes
							OR = {
								tag = NLR
								is_ally_with = NLR
							}
							OR = {
								tag = NLR
								tag = NLH
								tag = EQR
							}
						}
						every_state = {
							remove_core_of = PREV
							remove_claim_by = PREV
							if = {
								limit = { is_owned_by = PREV }
								EQS = { transfer_state = PREV }
							}
						}
					}
				}	
			}
			if = {
				limit = {
					ROOT = { tag = NLH }
					FROM = {
						OR = {
							is_SOLAR_EMPIRE = yes
							has_war_together_with = event_target:solar_empire
						}
					}
					EQS = {
						has_war_with = NLH 
						exists = yes
						is_SOLAR_EMPIRE = yes
					}
				}
				EQS = {
					clr_country_flag = paxsolaris_338_nmm
					set_country_flag = paxsolaris_338_luna
					country_event = paxsolaris.338 
				}
				if = {
					limit = {
						NLH = {
							NOT = {
								any_allied_country = {
									OR = {
										tag = NLR
										tag = NLH
										tag = EQR
									}
									has_capitulated = no
									exists = yes
								}
							}
						}
					}
					every_country = {
						limit = {
							is_in_faction_with = NLH
							NOT = {
								tag = NLR
								tag = EQR
								tag = NLH
							}
						}
						if = {
							limit = { has_war_with = event_target:solar_empire }
							set_country_flag = { flag = bypass_on_peaceconference_ended days = 1 value = 1 }
							white_peace = event_target:solar_empire
							every_enemy_country = {
								limit = {
									is_in_faction_with = event_target:solar_empire
								}
								white_peace = ROOT
							}
						}
					}
					every_country = {
						limit = {
							has_capitulated = yes
							OR = {
								tag = NLH
								is_ally_with = NLH
							}
							OR = {
								tag = NLR
								tag = NLH
								tag = EQR
							}
						}
						every_state = {
							remove_core_of = PREV
							remove_claim_by = PREV
							if = {
								limit = { is_owned_by = PREV }
								EQS = { transfer_state = PREV }
							}
						}
					}
					NLH = {
						every_unit_leader = {
							limit = { has_trait = nlr_commander_in_chief}
							remove_unit_leader_trait = nlr_commander_in_chief
						}
					}
				}	
			}
			if = {
				limit = {
					ROOT = { tag = EQR }
					FROM = {
						OR = {
							is_SOLAR_EMPIRE = yes
							has_war_together_with = event_target:solar_empire
						}
					}
					EQS = {
						has_war_with = EQR
						exists = yes
						is_SOLAR_EMPIRE = yes
					}
					EQR = {
						NOT = {
							any_allied_country = {
								OR = {
									tag = NLR
									tag = NLH
									tag = EQR
								}
								has_capitulated = no
								exists = yes
							}
						}
					}
				}
				every_country = {
					limit = {
						is_in_faction_with = EQR
						NOT = {
							tag = NLR
							tag = EQR
							tag = NLH
						}
					}
					if = {
						limit = { has_war_with = event_target:solar_empire }
						set_country_flag = { flag = bypass_on_peaceconference_ended days = 1 value = 1 }
						white_peace = event_target:solar_empire
						every_enemy_country = {
							limit = {
								is_in_faction_with = event_target:solar_empire
							}
							white_peace = ROOT
						}
					}
				}
				every_country = {
					limit = {
						has_capitulated = yes
						OR = {
							tag = EQR
							is_ally_with = EQR
						}
						OR = {
							tag = NLR
							tag = NLH
							tag = EQR
						}
					}
					every_state = {
						remove_core_of = PREV
						remove_claim_by = PREV
						if = {
							limit = { is_owned_by = PREV }
							EQS = { transfer_state = PREV }
						}
					}
				}
			}
			if = {
				limit = {
					ROOT = { tag = CHN }
					FROM = {
						OR = {
							is_SOLAR_EMPIRE = yes
							has_war_together_with = event_target:solar_empire
						}
					}
					EQS = {
						has_war_with = CHN
						exists = yes
						is_SOLAR_EMPIRE = yes
					}
					CHN = { has_country_leader = { ruling_only = yes character = CHN_queen_chrysalis } }
				}
				EQS = { set_country_flag = SOL_crysalis_defeated }
			}
			if = {
				limit = { FROM = { is_SOLAR_EMPIRE = yes } }
				THIS = {
					SOL_calculate_invasion_loyalty = yes
					if = {
						limit = { 
							NOT = { has_war_with = event_target:sol_resistance_enemy }
							NOT = {
								any_enemy_country = {
									resistance_ceasefire_trigger = yes
								}
							}
							has_country_flag = resistance_ceasefire
						}
						country_event = { id = paxsolaris.38 days = 1 }
					}
					if = {
						limit = { 
							NOT = { has_war_with = event_target:sol_resistance_enemy }
							NOT = {
								any_enemy_country = {
									resistance_deescalation_trigger = yes
								}
							}
							has_country_flag = resistance_deescalation
						}
						country_event = { id = paxsolaris.118 days = 1 }
					}
				}
			}
			if = {
				limit = {
					ROOT = { tag = HRM }
				}
				EQS = {
					hidden_effect = {
						set_variable = { var = solar_resistance_cohesion_actions value = 1 }
						set_country_flag = sol_resistance_decapitated
						hidden_effect = { mark_focus_tree_layout_dirty = yes }
						every_state ={
							clr_state_flag = resistance_attack_dummy_target
							clr_state_flag = resistance_attack_true_target
						}
						clear_array = EQS.SOL_resistance_attack_target_array
						clr_country_flag = SOL_has_ongoing_attack
						remove_mission = SOL_resistance_attack
						clr_country_flag = SOL_has_ongoing_cohesion
						remove_mission = SOL_resistance_cohesion
					}
					if = {
						limit = {
							FROM = {
								OR = {
									is_SOLAR_EMPIRE = yes
									has_war_together_with = event_target:solar_empire
								}
							}
						}
						country_event = { id = paxsolaris.174 hours = 1 }
					}
				}
			}
		}
	}
	on_puppet = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_puppet"
			if = {
				limit = { 
					FROM = { 
						is_SOLAR_EMPIRE = yes
					}
					OR = {
						ROOT = { 
							is_solar_core = yes
						}
						original_tag = DRG
						original_tag = CHN
					}
				}
				FROM = {
					annex_country = { target = ROOT  }
				}
			}
		}
	}
	on_daily = {
		effect = {
			if = {
				limit = {
					is_coalition_member = yes
					is_faction_leader = yes
					any_allied_country = {
						has_capitulated = no
					}
					NOT = { has_idea = SOL_coalition_surrender }
				}
				add_ideas = SOL_coalition_surrender
			}
			if = {
				limit = {
					EQS = { has_completed_focus = SOL_an_empire_without_equals }
					is_subject_of = EQS
					NOT = { has_idea = SOL_subjects_of_the_empress }
				}
				add_ideas = SOL_subjects_of_the_empress
			}
		}
	}
	on_startup = {
		effect = {
			EQS = { 
				SOL_calculate_race = yes
				SOL_set_state_flags_for_public_works = yes
			}
		}
	}
	on_peace = {
		effect = {
			if = {
				limit = { THIS = { is_SOLAR_EMPIRE = yes } }
				THIS = {
					if = {
						limit = { 
							NOT = { has_war_with = event_target:sol_resistance_enemy }
							NOT = {
								any_enemy_country = {
									resistance_ceasefire_trigger = yes
								}
							}
							has_country_flag = resistance_ceasefire
						}
						country_event = { id = paxsolaris.38 days = 1 }
					}
					if = {
						limit = { 
							NOT = { has_war_with = event_target:sol_resistance_enemy }
							NOT = {
								any_enemy_country = {
									resistance_deescalation_trigger = yes
								}
							}
							has_country_flag = resistance_deescalation
						}
						country_event = { id = paxsolaris.118 days = 1 }
					}
				}
				if = {
					limit = { EQS = { has_country_flag = SOL_crysalis_defeated } }
					EQS = { 
						clr_country_flag = SOL_crysalis_defeated
						country_event = { id = paxsolaris.152 days = 1 } 
					}
				}
			}
			if = {
				limit = { EQS = { is_SOLAR_EMPIRE = yes } }
				every_state = {
					limit = {
						has_variable = SOL_public_works_region_id
						check_variable = { SOL_public_works_region_id > 10 }
						OR = {
							is_owned_by = EQS
							owner = { SOL_can_force_transfer = yes }
						}
						OR = {
							is_fully_controlled_by = EQS
							controller = { 
								SOL_can_force_transfer = yes 
								PREV = { is_fully_controlled_by = PREV } 
							}
						}
					}
					SOL_transfer_recent_states = yes
				}
			}
		}
	}
	on_weekly_EQS = { #AI Scripting
		effect = {
			if = {
				limit = {
					EQS = { exists = yes }
					is_SOLAR_EMPIRE = yes
					EQS = { is_ai = yes }
				}
				if = {
					limit = {
						has_country_flag = sol_has_unlocked_public_works
						OR = {
							AND = {
								check_variable = { num_of_civilian_factories > 150 }
								check_variable = { sol_ongoing_public_works_num < 1 }
							}
							AND = {
								check_variable = { num_of_civilian_factories > 300 }
								check_variable = { sol_ongoing_public_works_num < 2 }
							}
						}
					}
					random_list = {
						1 = { set_variable = { var = currently_selected_region value = 1 } }
						1 = { set_variable = { var = currently_selected_region value = 2 } }
						1 = { set_variable = { var = currently_selected_region value = 3 } }
						1 = { set_variable = { var = currently_selected_region value = 4 } }
						1 = { set_variable = { var = currently_selected_region value = 5 } }
						1 = { set_variable = { var = currently_selected_region value = 6 } }
						1 = { set_variable = { var = currently_selected_region value = 7 } }
						1 = { set_variable = { var = currently_selected_region value = 8 } }
						1 = { set_variable = { var = currently_selected_region value = 9 } }
						1 = { set_variable = { var = currently_selected_region value = 10 } }
					}
					set_variable = { sol_ai_region_index = 0 }
					while_loop_effect = {
						limit = { check_variable = { sol_ai_region_index < SOL_region_array^num } }
						SOL_calculate_public_works_industry_use = yes
						random_list = {
							1 = {
								modifier = {
									factor = 0 
									OR = {
										NOT = { has_completed_focus = SOL_public_works_program }
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
												NOT = { is_controlled_by = event_target:solar_empire }
											}
										}
										OR = {
											is_in_array = { SOL_ongoing_public_works = currently_selected_region }
											is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
											is_in_array = { SOL_ongoing_agmech = currently_selected_region }
											is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
										}
										is_in_array = { SOL_completed_public_works = currently_selected_region }
										has_war = yes
										NOT = {
											check_variable = {
												var = num_of_civilian_factories_available_for_projects
												value = SOL_public_works_industry_use_after
												compare = greater_than_or_equals
											}
										}
									}
								}
								if = {
									limit = {
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
													NOT = { is_controlled_by = event_target:solar_empire }
												}
											}
											OR = {
												is_in_array = { SOL_ongoing_public_works = currently_selected_region }
												is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
												is_in_array = { SOL_ongoing_agmech = currently_selected_region }
												is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
											}
											is_in_array = { SOL_completed_public_works = currently_selected_region }
											has_war = yes
										}
										check_variable = {
											var = num_of_civilian_factories_available_for_projects
											value = SOL_public_works_industry_use_after
											compare = greater_than_or_equals
										}
										NOT = { has_idea = SOL_worker_strikes }
									}
									set_variable = { var = SOL_public_works_duration_array^currently_selected_region value = sol_public_works_duration }
									add_to_variable = { var = sol_ongoing_public_works_num value = 1 }
									add_to_array = { array = SOL_ongoing_public_works value = currently_selected_region }
									SOL_calculate_public_works_progress = yes
									if = {
										limit = {
											NOT = { EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } } }
										}
										add_dynamic_modifier = { modifier = SOL_public_works_modifier }
									}
									if = {
										limit = { NOT = { has_country_flag = sol_strikes_triggered } }
										set_country_flag = sol_strikes_triggered
										country_event = { id = paxsolaris.138 days = 2 }
									}
									add_to_variable = { sol_ai_region_index = SOL_region_array^num }
								}
							}
							1 = {
								modifier = {
									factor = 0 
									OR = {
										NOT = { has_completed_focus = SOL_new_urban_planning }
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
												NOT = { is_controlled_by = event_target:solar_empire }
											}
										}
										OR = {
											is_in_array = { SOL_ongoing_public_works = currently_selected_region }
											is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
											is_in_array = { SOL_ongoing_agmech = currently_selected_region }
											is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
										}
										is_in_array = { SOL_completed_urban_planning = currently_selected_region }
										has_war = yes
										NOT = {
											check_variable = {
												var = num_of_civilian_factories_available_for_projects
												value = SOL_urban_planning_industry_use_after
												compare = greater_than_or_equals
											}
										}
									}
								}
								if = {
									limit = {
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
													NOT = { is_controlled_by = event_target:solar_empire }
												}
											}
											OR = {
												is_in_array = { SOL_ongoing_public_works = currently_selected_region }
												is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
											}
											is_in_array = { SOL_completed_urban_planning = currently_selected_region }
											has_war = yes
										}
										check_variable = {
											var = num_of_civilian_factories_available_for_projects
											value = SOL_urban_planning_industry_use_after
											compare = greater_than_or_equals
										}
										NOT = { has_idea = SOL_worker_strikes }
									}
									set_variable = { var = SOL_public_works_duration_array^currently_selected_region value = sol_urban_planning_duration }
									add_to_variable = { var = sol_ongoing_public_works_num value = 1 }
									add_to_array = { array = SOL_ongoing_urban_planning value = currently_selected_region }
									SOL_calculate_public_works_progress = yes
									if = {
										limit = {
											NOT = { EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } } }
										}
										add_dynamic_modifier = { modifier = SOL_public_works_modifier }
									}
									if = {
										limit = { NOT = { has_country_flag = sol_strikes_triggered } }
										set_country_flag = sol_strikes_triggered
										country_event = { id = paxsolaris.138 days = 30 }
									}
									add_to_variable = { sol_ai_region_index = SOL_region_array^num }
								}
							}
							1 = {
								modifier = {
									factor = 0 
									OR = {
										NOT = { has_completed_focus = SOL_agricultural_mechanisation }
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
												NOT = { is_controlled_by = event_target:solar_empire }
											}
										}
										OR = {
											is_in_array = { SOL_ongoing_public_works = currently_selected_region }
											is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
											is_in_array = { SOL_ongoing_agmech = currently_selected_region }
											is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
										}
										is_in_array = { SOL_completed_agmech = currently_selected_region }
										has_war = yes
										NOT = { 
											check_variable = {
												var = num_of_civilian_factories_available_for_projects
												value = SOL_agmech_industry_use_after
												compare = greater_than_or_equals
											}
										}
									}
								}
								if = {
									limit = {
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
													NOT = { is_controlled_by = event_target:solar_empire }
												}
											}
											OR = {
												is_in_array = { SOL_ongoing_public_works = currently_selected_region }
												is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
												is_in_array = { SOL_ongoing_agmech = currently_selected_region }
											}
											is_in_array = { SOL_completed_agmech = currently_selected_region }
											has_war = yes
										}
										check_variable = {
											var = num_of_civilian_factories_available_for_projects
											value = SOL_agmech_industry_use_after
											compare = greater_than_or_equals
										}
										NOT = { has_idea = SOL_worker_strikes }
									}
									set_variable = { var = SOL_public_works_duration_array^currently_selected_region value = sol_agmech_duration }
									add_to_variable = { var = sol_ongoing_public_works_num value = 1 }
									add_to_array = { array = SOL_ongoing_agmech value = currently_selected_region }
									SOL_calculate_public_works_progress = yes
									if = {
										limit = {
											NOT = { EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } } }
										}
										add_dynamic_modifier = { modifier = SOL_public_works_modifier }
									}
									if = {
										limit = { NOT = { has_country_flag = sol_strikes_triggered } }
										set_country_flag = sol_strikes_triggered
										country_event = { id = paxsolaris.138 days = 30 }
									}
									add_to_variable = { sol_ai_region_index = SOL_region_array^num }
								}
							}
							1 = {
								modifier = {
									factor = 0 
									OR = {
										NOT = { has_completed_focus = SOL_secure_supply_networks }
										NOT = {
											any_state = {
												AND = {
													check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
													NOT = { has_state_flag = SOL_completed_infrastructure_hardening }
													is_controlled_by = EQS
												}
											}
										}
										OR = {
											is_in_array = { SOL_ongoing_public_works = currently_selected_region }
											is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
											is_in_array = { SOL_ongoing_agmech = currently_selected_region }
											is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
										}
										NOT = { 
											check_variable = {
												var = num_of_civilian_factories_available_for_projects
												value = SOL_infrastructure_hardening_industry_use_after
												compare = greater_than_or_equals
											}
										}
									}
								}
								if = {
									limit = {
										any_state = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
												NOT = { has_state_flag = SOL_completed_infrastructure_hardening }
												is_controlled_by = EQS
											}
										}
										NOT = {		
											OR = {
												is_in_array = { SOL_ongoing_public_works = currently_selected_region }
												is_in_array = { SOL_ongoing_urban_planning = currently_selected_region }
												is_in_array = { SOL_ongoing_agmech = currently_selected_region }
												is_in_array = { SOL_ongoing_infrastructure_hardening = currently_selected_region }
											}
										}
										check_variable = {
											var = num_of_civilian_factories_available_for_projects
											value = SOL_infrastructure_hardening_industry_use_after
											compare = greater_than_or_equals
										}
										NOT = { has_idea = SOL_worker_strikes }
									}
									set_variable = { var = SOL_infrastructure_hardening_num_states_this_region value = 0 }
									every_controlled_state = {
										limit = {
											AND = {
												check_variable = { SOL_public_works_region_id = EQS.currently_selected_region }
												NOT = { 
													has_dynamic_modifier = { modifier = SOL_infrastructure_hardening_bonus } 
													has_dynamic_modifier = { modifier = SOL_heart_of_an_empire } 
												}
												is_controlled_by = EQS
											}
										}
										EQS = { add_to_variable = { var = SOL_infrastructure_hardening_num_states_this_region value = 1 } }
										set_state_flag = SOL_ongoing_infrastructure_hardening
									}
									set_variable = { var = SOL_infrastructure_hardening_num_states_this_project^currently_selected_region value = SOL_infrastructure_hardening_num_states_this_region }
									set_variable = { var = SOL_public_works_duration_array^currently_selected_region value = sol_infrastructure_hardening_duration }
									add_to_variable = { var = sol_ongoing_public_works_num value = 1 }
									add_to_array = { array = SOL_ongoing_infrastructure_hardening value = currently_selected_region }
									SOL_calculate_public_works_progress = yes
									if = {
										limit = {
											NOT = { EQS = { has_dynamic_modifier = { modifier = SOL_public_works_modifier } } }
										}
										add_dynamic_modifier = { modifier = SOL_public_works_modifier }
									}
									if = {
										limit = { NOT = { has_country_flag = sol_strikes_triggered } }
										set_country_flag = sol_strikes_triggered
										country_event = { id = paxsolaris.138 days = 30 }
									}
									add_to_variable = { sol_ai_region_index = SOL_region_array^num }
								}
							}
							1 = {
								#Blank space to account for regions where no public works can be built
							}
						}
						add_to_variable = { sol_ai_region_index = 1 }
						add_to_variable = { currently_selected_region = 1 }
						if = {
							limit = { check_variable = { currently_selected_region > SOL_region_array^num } }
							set_variable = { currently_selected_region = 1 }
						}
					}
				}
				if = {
					limit = {
						check_variable = {
							var = EQS.num_of_civilian_factories_available_for_projects
							value = 1
							compare = greater_than_or_equals
						}
						check_variable = { SOL_number_of_settlements_available > 0 }
					}
					random_owned_controlled_state = {
						limit = {
							is_owned_and_controlled_by = EQS
							OR = {
								has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
								has_dynamic_modifier = { modifier = SOL_pony_settlement }
								has_dynamic_modifier = { modifier = SOL_settler_colonies }
							}
							check_variable = {
								var = sol_pony_percentage
								value = 0.4
								compare = less_than_or_equals
							}
							SOL_ai_trigger_settlers = yes
						}
						EQS = {
							subtract_from_variable = { var = SOL_number_of_settlements_available value = 1000 }
							add_to_variable = { var = SOL_develop_settler_colony_civ_fac_use_total value = 1 }
						}
						add_to_variable = { var = SOL_number_of_settlements_this_state value = 1000 }
						if = {
							limit = { NOT = { is_in_array = { EQS.sol_states_with_settlement = THIS } } }
							add_to_array = { EQS.sol_states_with_settlement = THIS }
						}
					}
				}
				if = {
					limit = {
						any_state = {
							check_variable = { SOL_number_of_settlements_this_state > 0 }
							check_variable = { sol_pony_percentage > 0.4 }
						}
					}
					every_state = {
						limit = {
							check_variable = { SOL_number_of_settlements_this_state > 0 }
							check_variable = { sol_pony_percentage > 0.4 }
						}
						remove_from_array = { EQS.sol_states_with_settlement = THIS }
						add_to_variable = { var = EQS.SOL_number_of_settlements_available value = SOL_number_of_settlements_this_state }
						divide_variable = { var = SOL_number_of_settlements_this_state value = 1000 }
						subtract_from_variable = { var = EQS.SOL_develop_settler_colony_civ_fac_use_total value = SOL_number_of_settlements_this_state }
						set_variable = { var = SOL_number_of_settlements_this_state value = 0 }
					}
				}
				set_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = SOL_develop_settler_colony_civ_fac_use_total }
				multiply_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = 1.5 }
				if = {
					limit = {
						check_variable = {
							var = EQS.num_of_civilian_factories_available_for_projects
							value = SOL_develop_settler_colony_civ_fac_use_temp
							compare = greater_than_or_equals
						}
						has_political_power > 20
						has_country_flag = SOL_unlocked_develop_colonies_ability_flag
					}
					random_owned_controlled_state = {
						limit = {
							is_owned_and_controlled_by = EQS
							NOT = {
								is_core_of = EQS
								has_variable = SOL_develop_settler_colony_civ_fac_use
								has_dynamic_modifier = { modifier = SOL_extensive_pony_settlement }
								has_dynamic_modifier = { modifier = SOL_pony_settlement }
								has_dynamic_modifier = { modifier = SOL_settler_colonies }
							}
							set_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = state_population_k }
							multiply_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = EQS.SOL_develop_settler_colony_civ_fac_use_multiplier }
							add_to_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = 0.5 }
							round_temp_variable = SOL_develop_settler_colony_civ_fac_use_temp
							meta_trigger = {
								text = {
									check_variable = {
										var = EQS.num_of_civilian_factories_available_for_projects
										value = [SOL_DEVELOP_SETTLER_COLONY_CIV_FAC_USE_TEMP]
										compare = greater_than_or_equals
									}
								}
								SOL_DEVELOP_SETTLER_COLONY_CIV_FAC_USE_TEMP = SOL_develop_settler_colony_civ_fac_use_temp
							}
							SOL_ai_trigger_settlers = yes
						}
						set_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = state_population_k }
						multiply_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = EQS.SOL_develop_settler_colony_civ_fac_use_multiplier }
						add_to_temp_variable = { var = SOL_develop_settler_colony_civ_fac_use_temp value = 0.5 }
						round_temp_variable = SOL_develop_settler_colony_civ_fac_use_temp
						EQS = {
							add_political_power = -20
							add_to_variable = { var = SOL_develop_settler_colony_civ_fac_use_total value = PREV.SOL_develop_settler_colony_civ_fac_use_temp }
							activate_targeted_decision = { target = PREV decision = SOL_develop_settler_colony_decision }
						}
					}
				}
				if = {
					limit = {
						has_completed_focus = SOL_Imperial_Inquisition
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								check_variable = { solar_resistance_strength = 0 }
								check_variable = { solar_resistance_outreach_strength = 0 }
							}
							modifier = {
								factor = var:sol_ai_inquisition_competency
								always = yes
							}
							if = {
								limit = { 
									check_variable = { solar_resistance_actions_progress = 0 } 
									NOT = { check_variable = { solar_resistance_strength = 0 } }
								}
								subtract_from_variable = { 
									var = SOL_lead_variable
									value = 75
								}
								clamp_variable = {
									var = SOL_lead_variable
									min = 0
								}
								add_to_variable = { var = solar_resistance_suppression value = -1 }
								add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
								set_variable = { var = solar_resistance_actions_progress value = 4 }
								add_to_variable = { var = resistance_attack_blocked value = 60 }
								SOL_calculate_leads_medium = yes
								add_to_variable = { var = SOL_lead_variable value = lead_counter }
								if = {
									limit = {
										NOT = { has_country_flag = SOL_great_march_fired }
									}
									country_event = {
										id = paxsolaris.229
										days = 1
									}
								}
							}
							else_if = {
								limit = { 
									check_variable = { solar_resistance_outreach_actions_progress = 0 }
									NOT = { check_variable = { solar_resistance_outreach_strength = 0 } }
								}
								subtract_from_variable = { 
									var = SOL_lead_variable
									value = 75
								}
								clamp_variable = {
									var = SOL_lead_variable
									min = 0
								}
								add_to_variable = { var = solar_resistance_outreach_suppression value = -1 }
								add_to_variable = { var = solar_resistance_cohesion_actions_progress value = -1 }
								set_variable = { var = solar_resistance_outreach_actions_progress value = 4 }
								add_to_variable = { var = resistance_attack_blocked value = 40 }
								SOL_calculate_leads_large = yes
								add_to_variable = { var = SOL_lead_variable value = lead_counter }
							}
							else = {
								random_list = {
									1 = {
										modifier = {
											factor = 0.5
											check_variable = { solar_resistance_outreach_strength > 2 }
										}
										modifier = {
											factor = 0.5
											check_variable = { solar_resistance_outreach_strength > 4 }
										}
										modifier = {
											factor = 0
											check_variable = { solar_resistance_strength = 0 }
										}
										subtract_from_variable = { 
											var = SOL_lead_variable
											value = 25
										}
										clamp_variable = {
											var = SOL_lead_variable
											min = 0
										}
										add_to_variable = { var = solar_inquisition_ongoing_decisions value = -1 }
									}
									1 = {
										modifier = {
											factor = 0.5
											check_variable = { solar_resistance_strength > 2 }
										}
										modifier = {
											factor = 0.5
											check_variable = { solar_resistance_strength > 4 }
										}
										modifier = {
											factor = 0
											check_variable = { solar_resistance_outreach_strength = 0 }
										}
										subtract_from_variable = { 
											var = SOL_lead_variable
											value = 25
										}
										clamp_variable = {
											var = SOL_lead_variable
											min = 0
										}
										add_to_variable = { var = solar_resistance_outreach_actions_progress value = -1 }
									}
								}
							}
							SOL_calculate_loyalty = yes 
						}
						5 = {
							#Random blank to simulate failure and time
						}
					}
				}
				if = {
					limit = {
						any_country = {
							is_solar_core = yes
							is_guaranteed_by = EQS
						}
					}
					every_country = {	
						limit = {
							is_solar_core = yes
							is_guaranteed_by = EQS
						}
						diplomatic_relation = {
							country = EQS
							relation = guarantee
							active = no
						}
					}
				}
			}
		}
	}
	on_weekly_HRM = {
		effect = {
			if = {
				limit = {
					has_idea = HRM_bits_gun_idea
				}
				add_equipment_to_stockpile = {
					type = infantry_equipment_2
					amount = 200
					producer = HRM
				}
			}
		}
	}
}